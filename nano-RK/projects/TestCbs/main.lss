
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004de  00800100  00005a1c  00005a90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005a1c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000003cb  008005de  00005efa  00005f6e  2**0
                  ALLOC
  3 .stab         0000d59c  00000000  00000000  00005f70  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00004f24  00000000  00000000  0001350c  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__ctors_end>
       4:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
       8:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
       c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      10:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      14:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      18:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      1c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      20:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      24:	0c 94 28 27 	jmp	0x4e50	; 0x4e50 <__vector_9>
      28:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      2c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      30:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      34:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      38:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      3c:	0c 94 9d 26 	jmp	0x4d3a	; 0x4d3a <__vector_15>
      40:	0c 94 9d 26 	jmp	0x4d3a	; 0x4d3a <__vector_15>
      44:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      48:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      4c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      50:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      54:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      58:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      5c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      60:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      64:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      68:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      6c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      70:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      74:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      78:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      7c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      80:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      84:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      88:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      8c:	f9 16       	cp	r15, r25
      8e:	ff 16       	cp	r15, r31
      90:	02 17       	cp	r16, r18
      92:	05 17       	cp	r16, r21
      94:	08 17       	cp	r16, r24
      96:	0b 17       	cp	r16, r27
      98:	11 17       	cp	r17, r17
      9a:	0e 17       	cp	r16, r30
      9c:	14 17       	cp	r17, r20
      9e:	17 17       	cp	r17, r23
      a0:	1a 17       	cp	r17, r26
      a2:	20 17       	cp	r18, r16
      a4:	23 17       	cp	r18, r19
      a6:	26 17       	cp	r18, r22
      a8:	29 17       	cp	r18, r25
      aa:	1d 17       	cp	r17, r29
      ac:	f6 16       	cp	r15, r22
      ae:	fc 16       	cp	r15, r28

000000b0 <__c.2398>:
      b0:	55 4e 4b 4f 57 4e 00                                UNKOWN.

000000b7 <__c.2395>:
      b7:	46 61 69 6c 65 64 20 74 6f 20 63 72 65 61 74 65     Failed to create
      c7:	20 53 65 6d 61 70 68 6f 72 65 00                     Semaphore.

000000d2 <__c.2392>:
      d2:	46 61 69 6c 65 64 20 74 6f 20 63 72 65 61 74 65     Failed to create
      e2:	20 53 69 67 6e 61 6c 00                              Signal.

000000ea <__c.2389>:
      ea:	4b 65 72 6e 65 6c 20 66 75 6e 63 74 69 6f 6e 20     Kernel function 
      fa:	6e 6f 74 20 69 6d 70 6c 65 6d 65 6e 74 65 64 00     not implemented.

0000010a <__c.2386>:
     10a:	44 65 76 69 63 65 20 44 72 69 76 65 72 20 45 72     Device Driver Er
     11a:	72 6f 72 00                                         ror.

0000011e <__c.2383>:
     11e:	57 61 74 63 68 64 6f 67 20 52 65 73 74 61 72 74     Watchdog Restart
	...

0000012f <__c.2380>:
     12f:	54 69 6d 65 72 20 4f 76 65 72 66 6c 6f 77 00        Timer Overflow.

0000013e <__c.2377>:
     13e:	55 6e 68 61 6e 64 6c 65 64 20 49 6e 74 65 72 72     Unhandled Interr
     14e:	75 70 74 20 56 65 63 74 6f 72 00                    upt Vector.

00000159 <__c.2374>:
     159:	4c 6f 77 20 56 6f 6c 74 61 67 65 00                 Low Voltage.

00000165 <__c.2371>:
     165:	45 78 74 72 61 20 54 61 73 6b 20 73 74 61 72 74     Extra Task start
     175:	65 64 2c 20 69 73 20 6e 72 6b 5f 63 66 67 2e 68     ed, is nrk_cfg.h
     185:	20 6f 6b 3f 00                                       ok?.

0000018a <__c.2368>:
     18a:	49 64 6c 65 20 6f 72 20 4b 65 72 6e 65 6c 20 53     Idle or Kernel S
     19a:	74 61 63 6b 20 4f 76 65 72 66 6c 6f 77 00           tack Overflow.

000001a8 <__c.2365>:
     1a8:	55 6e 65 78 70 65 63 74 65 64 20 52 65 73 74 61     Unexpected Resta
     1b8:	72 74 00                                            rt.

000001bb <__c.2362>:
     1bb:	44 75 70 6c 69 63 61 74 65 64 20 54 61 73 6b 20     Duplicated Task 
     1cb:	49 44 00                                            ID.

000001ce <__c.2359>:
     1ce:	53 63 68 65 64 75 6c 65 72 20 4d 69 73 73 65 64     Scheduler Missed
     1de:	20 57 61 6b 65 75 70 00                              Wakeup.

000001e6 <__c.2356>:
     1e6:	54 61 73 6b 20 52 65 73 65 72 76 65 20 56 69 6f     Task Reserve Vio
     1f6:	6c 61 74 65 64 00                                   lated.

000001fc <__c.2353>:
     1fc:	52 65 73 65 72 76 65 20 45 72 72 6f 72 20 69 6e     Reserve Error in
     20c:	20 53 63 68 65 64 75 6c 65 72 00                     Scheduler.

00000217 <__c.2350>:
     217:	49 6e 76 61 6c 69 64 20 53 74 61 63 6b 20 50 6f     Invalid Stack Po
     227:	69 6e 74 65 72 00                                   inter.

0000022d <__c.2347>:
     22d:	54 61 73 6b 20 53 74 61 63 6b 20 4f 76 65 72 66     Task Stack Overf
     23d:	6c 6f 77 00                                         low.

00000241 <__c.2343>:
     241:	53 74 61 63 6b 20 77 61 73 20 6e 6f 74 20 64 65     Stack was not de
     251:	66 69 6e 65 64 20 61 73 20 6c 61 72 67 65 20 65     fined as large e
     261:	6e 6f 75 67 68 21 00                                nough!.

00000268 <__c.2340>:
     268:	29 3a 20 00                                         ): .

0000026c <__c.2338>:
     26c:	2a 4e 52 4b 20 45 52 52 4f 52 28 00                 *NRK ERROR(.

00000278 <__c.2257>:
     278:	0d 0a 53 54 41 43 4b 20 44 55 4d 50 0d 0a 00        ..STACK DUMP...

00000287 <__c.2047>:
     287:	45 46 47 65 66 67 00                                EFGefg.

0000028e <__c.2041>:
     28e:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.

0000029e <__ctors_end>:
     29e:	11 24       	eor	r1, r1
     2a0:	1f be       	out	0x3f, r1	; 63
     2a2:	cf ef       	ldi	r28, 0xFF	; 255
     2a4:	d0 e1       	ldi	r29, 0x10	; 16
     2a6:	de bf       	out	0x3e, r29	; 62
     2a8:	cd bf       	out	0x3d, r28	; 61

000002aa <__do_copy_data>:
     2aa:	15 e0       	ldi	r17, 0x05	; 5
     2ac:	a0 e0       	ldi	r26, 0x00	; 0
     2ae:	b1 e0       	ldi	r27, 0x01	; 1
     2b0:	ec e1       	ldi	r30, 0x1C	; 28
     2b2:	fa e5       	ldi	r31, 0x5A	; 90
     2b4:	00 e0       	ldi	r16, 0x00	; 0
     2b6:	0b bf       	out	0x3b, r16	; 59
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x14>
     2ba:	07 90       	elpm	r0, Z+
     2bc:	0d 92       	st	X+, r0
     2be:	ae 3d       	cpi	r26, 0xDE	; 222
     2c0:	b1 07       	cpc	r27, r17
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0x10>

000002c4 <__do_clear_bss>:
     2c4:	19 e0       	ldi	r17, 0x09	; 9
     2c6:	ae ed       	ldi	r26, 0xDE	; 222
     2c8:	b5 e0       	ldi	r27, 0x05	; 5
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
     2ce:	a9 3a       	cpi	r26, 0xA9	; 169
     2d0:	b1 07       	cpc	r27, r17
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>
     2d4:	0e 94 58 02 	call	0x4b0	; 0x4b0 <main>
     2d8:	0c 94 0d 2d 	jmp	0x5a1a	; 0x5a1a <_exit>

000002dc <__bad_interrupt>:
     2dc:	0c 94 56 27 	jmp	0x4eac	; 0x4eac <__vector_default>

000002e0 <nrk_create_taskset>:
	}
}

void
nrk_create_taskset()
{	
     2e0:	6f 92       	push	r6
     2e2:	7f 92       	push	r7
     2e4:	8f 92       	push	r8
     2e6:	9f 92       	push	r9
     2e8:	af 92       	push	r10
     2ea:	bf 92       	push	r11
     2ec:	cf 92       	push	r12
     2ee:	df 92       	push	r13
     2f0:	ef 92       	push	r14
     2f2:	ff 92       	push	r15
     2f4:	0f 93       	push	r16
     2f6:	1f 93       	push	r17
	nrk_task_set_entry_function( &TaskOne, Task1);
     2f8:	02 ee       	ldi	r16, 0xE2	; 226
     2fa:	15 e0       	ldi	r17, 0x05	; 5
     2fc:	60 e3       	ldi	r22, 0x30	; 48
     2fe:	75 e0       	ldi	r23, 0x05	; 5
     300:	c8 01       	movw	r24, r16
     302:	0e 94 13 28 	call	0x5026	; 0x5026 <nrk_task_set_entry_function>
	nrk_task_set_stk( &TaskOne, Stack1, NRK_APP_STACKSIZE);
     306:	40 e8       	ldi	r20, 0x80	; 128
     308:	50 e0       	ldi	r21, 0x00	; 0
     30a:	6e e8       	ldi	r22, 0x8E	; 142
     30c:	76 e0       	ldi	r23, 0x06	; 6
     30e:	c8 01       	movw	r24, r16
     310:	0e 94 8b 28 	call	0x5116	; 0x5116 <nrk_task_set_stk>
	TaskOne.prio = 1;
     314:	ff 24       	eor	r15, r15
     316:	f3 94       	inc	r15
     318:	f0 92 ea 05 	sts	0x05EA, r15
	TaskOne.FirstActivation = TRUE;
     31c:	f0 92 e9 05 	sts	0x05E9, r15
	TaskOne.Type = CBS_TASK;
     320:	23 e0       	ldi	r18, 0x03	; 3
     322:	e2 2e       	mov	r14, r18
     324:	e0 92 ec 05 	sts	0x05EC, r14
	TaskOne.SchType = PREEMPTIVE;
     328:	f0 92 ed 05 	sts	0x05ED, r15
	TaskOne.period.secs = 0;
     32c:	10 92 ee 05 	sts	0x05EE, r1
     330:	10 92 ef 05 	sts	0x05EF, r1
     334:	10 92 f0 05 	sts	0x05F0, r1
     338:	10 92 f1 05 	sts	0x05F1, r1
	TaskOne.period.nano_secs = 1000*NANOS_PER_MS;
     33c:	61 2c       	mov	r6, r1
     33e:	9a ec       	ldi	r25, 0xCA	; 202
     340:	79 2e       	mov	r7, r25
     342:	9a e9       	ldi	r25, 0x9A	; 154
     344:	89 2e       	mov	r8, r25
     346:	9b e3       	ldi	r25, 0x3B	; 59
     348:	99 2e       	mov	r9, r25
     34a:	60 92 f2 05 	sts	0x05F2, r6
     34e:	70 92 f3 05 	sts	0x05F3, r7
     352:	80 92 f4 05 	sts	0x05F4, r8
     356:	90 92 f5 05 	sts	0x05F5, r9
	TaskOne.cpu_reserve.secs = 0;
     35a:	10 92 f6 05 	sts	0x05F6, r1
     35e:	10 92 f7 05 	sts	0x05F7, r1
     362:	10 92 f8 05 	sts	0x05F8, r1
     366:	10 92 f9 05 	sts	0x05F9, r1
	TaskOne.cpu_reserve.nano_secs = 100*NANOS_PER_MS;
     36a:	a1 2c       	mov	r10, r1
     36c:	81 ee       	ldi	r24, 0xE1	; 225
     36e:	b8 2e       	mov	r11, r24
     370:	85 ef       	ldi	r24, 0xF5	; 245
     372:	c8 2e       	mov	r12, r24
     374:	85 e0       	ldi	r24, 0x05	; 5
     376:	d8 2e       	mov	r13, r24
     378:	a0 92 fa 05 	sts	0x05FA, r10
     37c:	b0 92 fb 05 	sts	0x05FB, r11
     380:	c0 92 fc 05 	sts	0x05FC, r12
     384:	d0 92 fd 05 	sts	0x05FD, r13
	TaskOne.offset.secs = 0;
     388:	10 92 fe 05 	sts	0x05FE, r1
     38c:	10 92 ff 05 	sts	0x05FF, r1
     390:	10 92 00 06 	sts	0x0600, r1
     394:	10 92 01 06 	sts	0x0601, r1
	TaskOne.offset.nano_secs= 0;
     398:	10 92 02 06 	sts	0x0602, r1
     39c:	10 92 03 06 	sts	0x0603, r1
     3a0:	10 92 04 06 	sts	0x0604, r1
     3a4:	10 92 05 06 	sts	0x0605, r1
	TaskOne.plvl = 1;
     3a8:	f0 92 eb 05 	sts	0x05EB, r15
	nrk_activate_task (&TaskOne);
     3ac:	c8 01       	movw	r24, r16
     3ae:	0e 94 3b 1f 	call	0x3e76	; 0x3e76 <nrk_activate_task>
	
	nrk_task_set_entry_function( &TaskTwo, Task2);
     3b2:	03 e9       	ldi	r16, 0x93	; 147
     3b4:	17 e0       	ldi	r17, 0x07	; 7
     3b6:	65 e0       	ldi	r22, 0x05	; 5
     3b8:	75 e0       	ldi	r23, 0x05	; 5
     3ba:	c8 01       	movw	r24, r16
     3bc:	0e 94 13 28 	call	0x5026	; 0x5026 <nrk_task_set_entry_function>
	nrk_task_set_stk( &TaskTwo, Stack2, NRK_APP_STACKSIZE);
     3c0:	40 e8       	ldi	r20, 0x80	; 128
     3c2:	50 e0       	ldi	r21, 0x00	; 0
     3c4:	6a e0       	ldi	r22, 0x0A	; 10
     3c6:	76 e0       	ldi	r23, 0x06	; 6
     3c8:	c8 01       	movw	r24, r16
     3ca:	0e 94 8b 28 	call	0x5116	; 0x5116 <nrk_task_set_stk>
	TaskTwo.prio = 1;
     3ce:	f0 92 9b 07 	sts	0x079B, r15
	TaskTwo.FirstActivation = TRUE;
     3d2:	f0 92 9a 07 	sts	0x079A, r15
	TaskTwo.Type = CBS_TASK;
     3d6:	e0 92 9d 07 	sts	0x079D, r14
	TaskTwo.SchType = PREEMPTIVE;
     3da:	f0 92 9e 07 	sts	0x079E, r15
	TaskTwo.period.secs = 0;
     3de:	10 92 9f 07 	sts	0x079F, r1
     3e2:	10 92 a0 07 	sts	0x07A0, r1
     3e6:	10 92 a1 07 	sts	0x07A1, r1
     3ea:	10 92 a2 07 	sts	0x07A2, r1
	TaskTwo.period.nano_secs = 1000*NANOS_PER_MS;
     3ee:	60 92 a3 07 	sts	0x07A3, r6
     3f2:	70 92 a4 07 	sts	0x07A4, r7
     3f6:	80 92 a5 07 	sts	0x07A5, r8
     3fa:	90 92 a6 07 	sts	0x07A6, r9
	TaskTwo.cpu_reserve.secs = 0;
     3fe:	10 92 a7 07 	sts	0x07A7, r1
     402:	10 92 a8 07 	sts	0x07A8, r1
     406:	10 92 a9 07 	sts	0x07A9, r1
     40a:	10 92 aa 07 	sts	0x07AA, r1
	TaskTwo.cpu_reserve.nano_secs = 100*NANOS_PER_MS;
     40e:	a0 92 ab 07 	sts	0x07AB, r10
     412:	b0 92 ac 07 	sts	0x07AC, r11
     416:	c0 92 ad 07 	sts	0x07AD, r12
     41a:	d0 92 ae 07 	sts	0x07AE, r13
	TaskTwo.offset.secs = 0;
     41e:	10 92 af 07 	sts	0x07AF, r1
     422:	10 92 b0 07 	sts	0x07B0, r1
     426:	10 92 b1 07 	sts	0x07B1, r1
     42a:	10 92 b2 07 	sts	0x07B2, r1
	TaskTwo.offset.nano_secs= 0;
     42e:	10 92 b3 07 	sts	0x07B3, r1
     432:	10 92 b4 07 	sts	0x07B4, r1
     436:	10 92 b5 07 	sts	0x07B5, r1
     43a:	10 92 b6 07 	sts	0x07B6, r1
	TaskTwo.plvl = 1;
     43e:	f0 92 9c 07 	sts	0x079C, r15
	nrk_activate_task (&TaskTwo);
     442:	c8 01       	movw	r24, r16
     444:	0e 94 3b 1f 	call	0x3e76	; 0x3e76 <nrk_activate_task>
     448:	1f 91       	pop	r17
     44a:	0f 91       	pop	r16
     44c:	ff 90       	pop	r15
     44e:	ef 90       	pop	r14
     450:	df 90       	pop	r13
     452:	cf 90       	pop	r12
     454:	bf 90       	pop	r11
     456:	af 90       	pop	r10
     458:	9f 90       	pop	r9
     45a:	8f 90       	pop	r8
     45c:	7f 90       	pop	r7
     45e:	6f 90       	pop	r6
     460:	08 95       	ret

00000462 <Task12>:
	}
}


void Task12()
{
     462:	0f 93       	push	r16
     464:	1f 93       	push	r17
     466:	cf 93       	push	r28
     468:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task12 PID=%d\r\n",nrk_get_pid());
     46a:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     46e:	99 27       	eor	r25, r25
     470:	9f 93       	push	r25
     472:	8f 93       	push	r24
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	91 e0       	ldi	r25, 0x01	; 1
     478:	9f 93       	push	r25
     47a:	8f 93       	push	r24
     47c:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     480:	c0 e0       	ldi	r28, 0x00	; 0
     482:	d0 e0       	ldi	r29, 0x00	; 0
     484:	0f 90       	pop	r0
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	printf( "Task12 cnt=%d\r\n",cnt );
     48c:	00 e1       	ldi	r16, 0x10	; 16
     48e:	11 e0       	ldi	r17, 0x01	; 1
     490:	df 93       	push	r29
     492:	cf 93       	push	r28
     494:	1f 93       	push	r17
     496:	0f 93       	push	r16
     498:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	_nrk_timer_tick(); //check time of scheduler
     49c:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <_nrk_timer_tick>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     4a0:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     4a4:	21 96       	adiw	r28, 0x01	; 1
	}
     4a6:	0f 90       	pop	r0
     4a8:	0f 90       	pop	r0
     4aa:	0f 90       	pop	r0
     4ac:	0f 90       	pop	r0
     4ae:	f0 cf       	rjmp	.-32     	; 0x490 <Task12+0x2e>

000004b0 <main>:

void nrk_create_taskset();

int
main ()
{
     4b0:	cf ef       	ldi	r28, 0xFF	; 255
     4b2:	d0 e1       	ldi	r29, 0x10	; 16
     4b4:	de bf       	out	0x3e, r29	; 62
     4b6:	cd bf       	out	0x3d, r28	; 61
  nrk_setup_ports();
     4b8:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <nrk_setup_ports>
  nrk_setup_uart(UART_BAUDRATE_115K2);
     4bc:	87 e0       	ldi	r24, 0x07	; 7
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	0e 94 76 12 	call	0x24ec	; 0x24ec <nrk_setup_uart>

  printf( "Starting up...\r\n" );
     4c4:	80 e2       	ldi	r24, 0x20	; 32
     4c6:	91 e0       	ldi	r25, 0x01	; 1
     4c8:	0e 94 a2 2a 	call	0x5544	; 0x5544 <puts>
  nrk_init();
     4cc:	0e 94 10 15 	call	0x2a20	; 0x2a20 <nrk_init>
  nrk_time_set(0,0);
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	40 e0       	ldi	r20, 0x00	; 0
     4d6:	50 e0       	ldi	r21, 0x00	; 0
     4d8:	60 e0       	ldi	r22, 0x00	; 0
     4da:	70 e0       	ldi	r23, 0x00	; 0
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	0e 94 a1 20 	call	0x4142	; 0x4142 <nrk_time_set>
  nrk_create_taskset ();
     4e4:	0e 94 70 01 	call	0x2e0	; 0x2e0 <nrk_create_taskset>
  nrk_start();
     4e8:	0e 94 af 14 	call	0x295e	; 0x295e <nrk_start>
  
  return 0;
}
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	0c 94 0d 2d 	jmp	0x5a1a	; 0x5a1a <_exit>

000004f4 <my_nano_sleep>:
#include <nrk_error.h>
#include <nrk_events.h>
#include <nrk_timer.h>

void my_nano_sleep(uint32_t nanos)
{
     4f4:	8f 92       	push	r8
     4f6:	9f 92       	push	r9
     4f8:	af 92       	push	r10
     4fa:	bf 92       	push	r11
     4fc:	cf 92       	push	r12
     4fe:	df 92       	push	r13
     500:	ef 92       	push	r14
     502:	ff 92       	push	r15
     504:	0f 93       	push	r16
     506:	1f 93       	push	r17
     508:	cf 93       	push	r28
     50a:	df 93       	push	r29
     50c:	5b 01       	movw	r10, r22
     50e:	6c 01       	movw	r12, r24
	uint32_t micros;
	uint16_t full_waits;
	uint16_t remaining_waits;
	uint16_t i;
	
	micros = nanos / 1000;
     510:	28 ee       	ldi	r18, 0xE8	; 232
     512:	33 e0       	ldi	r19, 0x03	; 3
     514:	40 e0       	ldi	r20, 0x00	; 0
     516:	50 e0       	ldi	r21, 0x00	; 0
     518:	0e 94 ac 2c 	call	0x5958	; 0x5958 <__udivmodsi4>
     51c:	79 01       	movw	r14, r18
     51e:	8a 01       	movw	r16, r20
	full_waits = micros / 65535;
     520:	ca 01       	movw	r24, r20
     522:	b9 01       	movw	r22, r18
     524:	2f ef       	ldi	r18, 0xFF	; 255
     526:	3f ef       	ldi	r19, 0xFF	; 255
     528:	40 e0       	ldi	r20, 0x00	; 0
     52a:	50 e0       	ldi	r21, 0x00	; 0
     52c:	0e 94 ac 2c 	call	0x5958	; 0x5958 <__udivmodsi4>
     530:	49 01       	movw	r8, r18
	remaining_waits = micros % 65535;
     532:	c8 01       	movw	r24, r16
     534:	b7 01       	movw	r22, r14
     536:	2f ef       	ldi	r18, 0xFF	; 255
     538:	3f ef       	ldi	r19, 0xFF	; 255
     53a:	40 e0       	ldi	r20, 0x00	; 0
     53c:	50 e0       	ldi	r21, 0x00	; 0
     53e:	0e 94 ac 2c 	call	0x5958	; 0x5958 <__udivmodsi4>
     542:	8b 01       	movw	r16, r22
	
	printf("Sleep start (%lu nanos)\r\n", nanos);
     544:	df 92       	push	r13
     546:	cf 92       	push	r12
     548:	bf 92       	push	r11
     54a:	af 92       	push	r10
     54c:	80 e3       	ldi	r24, 0x30	; 48
     54e:	91 e0       	ldi	r25, 0x01	; 1
     550:	9f 93       	push	r25
     552:	8f 93       	push	r24
     554:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     558:	c0 e0       	ldi	r28, 0x00	; 0
     55a:	d0 e0       	ldi	r29, 0x00	; 0
	
	for(i = 0; i < full_waits; ++i)
     55c:	8d b7       	in	r24, 0x3d	; 61
     55e:	9e b7       	in	r25, 0x3e	; 62
     560:	06 96       	adiw	r24, 0x06	; 6
     562:	0f b6       	in	r0, 0x3f	; 63
     564:	f8 94       	cli
     566:	9e bf       	out	0x3e, r25	; 62
     568:	0f be       	out	0x3f, r0	; 63
     56a:	8d bf       	out	0x3d, r24	; 61
     56c:	05 c0       	rjmp	.+10     	; 0x578 <my_nano_sleep+0x84>
	{
		nrk_spin_wait_us(65535);
     56e:	8f ef       	ldi	r24, 0xFF	; 255
     570:	9f ef       	ldi	r25, 0xFF	; 255
     572:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
	full_waits = micros / 65535;
	remaining_waits = micros % 65535;
	
	printf("Sleep start (%lu nanos)\r\n", nanos);
	
	for(i = 0; i < full_waits; ++i)
     576:	21 96       	adiw	r28, 0x01	; 1
     578:	c8 15       	cp	r28, r8
     57a:	d9 05       	cpc	r29, r9
     57c:	c1 f7       	brne	.-16     	; 0x56e <my_nano_sleep+0x7a>
	{
		nrk_spin_wait_us(65535);
	}
	if(remaining_waits)
     57e:	01 15       	cp	r16, r1
     580:	11 05       	cpc	r17, r1
     582:	19 f0       	breq	.+6      	; 0x58a <my_nano_sleep+0x96>
	{
		nrk_spin_wait_us(remaining_waits);
     584:	c8 01       	movw	r24, r16
     586:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
	}
	
	printf("Sleep end\r\n");
     58a:	8a e4       	ldi	r24, 0x4A	; 74
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	0e 94 a2 2a 	call	0x5544	; 0x5544 <puts>
     592:	df 91       	pop	r29
     594:	cf 91       	pop	r28
     596:	1f 91       	pop	r17
     598:	0f 91       	pop	r16
     59a:	ff 90       	pop	r15
     59c:	ef 90       	pop	r14
     59e:	df 90       	pop	r13
     5a0:	cf 90       	pop	r12
     5a2:	bf 90       	pop	r11
     5a4:	af 90       	pop	r10
     5a6:	9f 90       	pop	r9
     5a8:	8f 90       	pop	r8
     5aa:	08 95       	ret

000005ac <Task16>:
	cnt++;
	}
}

void Task16()
{
     5ac:	0f 93       	push	r16
     5ae:	1f 93       	push	r17
     5b0:	cf 93       	push	r28
     5b2:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task16 PID=%d\r\n",nrk_get_pid());
     5b4:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     5b8:	99 27       	eor	r25, r25
     5ba:	9f 93       	push	r25
     5bc:	8f 93       	push	r24
     5be:	85 e5       	ldi	r24, 0x55	; 85
     5c0:	91 e0       	ldi	r25, 0x01	; 1
     5c2:	9f 93       	push	r25
     5c4:	8f 93       	push	r24
     5c6:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     5ca:	c0 e0       	ldi	r28, 0x00	; 0
     5cc:	d0 e0       	ldi	r29, 0x00	; 0
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task16 cnt=%d\r\n",cnt );
     5d6:	05 e6       	ldi	r16, 0x65	; 101
     5d8:	11 e0       	ldi	r17, 0x01	; 1
     5da:	df 93       	push	r29
     5dc:	cf 93       	push	r28
     5de:	1f 93       	push	r17
     5e0:	0f 93       	push	r16
     5e2:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     5e6:	60 e8       	ldi	r22, 0x80	; 128
     5e8:	76 e9       	ldi	r23, 0x96	; 150
     5ea:	88 e9       	ldi	r24, 0x98	; 152
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     5f2:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     5f6:	21 96       	adiw	r28, 0x01	; 1
	}
     5f8:	0f 90       	pop	r0
     5fa:	0f 90       	pop	r0
     5fc:	0f 90       	pop	r0
     5fe:	0f 90       	pop	r0
     600:	ec cf       	rjmp	.-40     	; 0x5da <Task16+0x2e>

00000602 <Task15>:
	cnt++;
	}
}

void Task15()
{
     602:	0f 93       	push	r16
     604:	1f 93       	push	r17
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task15 PID=%d\r\n",nrk_get_pid());
     60a:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     60e:	99 27       	eor	r25, r25
     610:	9f 93       	push	r25
     612:	8f 93       	push	r24
     614:	85 e7       	ldi	r24, 0x75	; 117
     616:	91 e0       	ldi	r25, 0x01	; 1
     618:	9f 93       	push	r25
     61a:	8f 93       	push	r24
     61c:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     620:	c0 e0       	ldi	r28, 0x00	; 0
     622:	d0 e0       	ldi	r29, 0x00	; 0
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	0f 90       	pop	r0
     62a:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task15 cnt=%d\r\n",cnt );
     62c:	05 e8       	ldi	r16, 0x85	; 133
     62e:	11 e0       	ldi	r17, 0x01	; 1
     630:	df 93       	push	r29
     632:	cf 93       	push	r28
     634:	1f 93       	push	r17
     636:	0f 93       	push	r16
     638:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     63c:	60 e8       	ldi	r22, 0x80	; 128
     63e:	76 e9       	ldi	r23, 0x96	; 150
     640:	88 e9       	ldi	r24, 0x98	; 152
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     648:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     64c:	21 96       	adiw	r28, 0x01	; 1
	}
     64e:	0f 90       	pop	r0
     650:	0f 90       	pop	r0
     652:	0f 90       	pop	r0
     654:	0f 90       	pop	r0
     656:	ec cf       	rjmp	.-40     	; 0x630 <Task15+0x2e>

00000658 <Task14>:
	cnt++;
	}
}

void Task14()
{
     658:	0f 93       	push	r16
     65a:	1f 93       	push	r17
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task14 PID=%d\r\n",nrk_get_pid());
     660:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     664:	99 27       	eor	r25, r25
     666:	9f 93       	push	r25
     668:	8f 93       	push	r24
     66a:	85 e9       	ldi	r24, 0x95	; 149
     66c:	91 e0       	ldi	r25, 0x01	; 1
     66e:	9f 93       	push	r25
     670:	8f 93       	push	r24
     672:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     676:	c0 e0       	ldi	r28, 0x00	; 0
     678:	d0 e0       	ldi	r29, 0x00	; 0
     67a:	0f 90       	pop	r0
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task14 cnt=%d\r\n",cnt );
     682:	05 ea       	ldi	r16, 0xA5	; 165
     684:	11 e0       	ldi	r17, 0x01	; 1
     686:	df 93       	push	r29
     688:	cf 93       	push	r28
     68a:	1f 93       	push	r17
     68c:	0f 93       	push	r16
     68e:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     692:	60 e8       	ldi	r22, 0x80	; 128
     694:	76 e9       	ldi	r23, 0x96	; 150
     696:	88 e9       	ldi	r24, 0x98	; 152
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     69e:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     6a2:	21 96       	adiw	r28, 0x01	; 1
	}
     6a4:	0f 90       	pop	r0
     6a6:	0f 90       	pop	r0
     6a8:	0f 90       	pop	r0
     6aa:	0f 90       	pop	r0
     6ac:	ec cf       	rjmp	.-40     	; 0x686 <Task14+0x2e>

000006ae <Task13>:
	cnt++;
	}
}

void Task13()
{
     6ae:	0f 93       	push	r16
     6b0:	1f 93       	push	r17
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task13 PID=%d\r\n",nrk_get_pid());
     6b6:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     6ba:	99 27       	eor	r25, r25
     6bc:	9f 93       	push	r25
     6be:	8f 93       	push	r24
     6c0:	85 eb       	ldi	r24, 0xB5	; 181
     6c2:	91 e0       	ldi	r25, 0x01	; 1
     6c4:	9f 93       	push	r25
     6c6:	8f 93       	push	r24
     6c8:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     6cc:	c0 e0       	ldi	r28, 0x00	; 0
     6ce:	d0 e0       	ldi	r29, 0x00	; 0
     6d0:	0f 90       	pop	r0
     6d2:	0f 90       	pop	r0
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task13 cnt=%d\r\n",cnt );
     6d8:	05 ec       	ldi	r16, 0xC5	; 197
     6da:	11 e0       	ldi	r17, 0x01	; 1
     6dc:	df 93       	push	r29
     6de:	cf 93       	push	r28
     6e0:	1f 93       	push	r17
     6e2:	0f 93       	push	r16
     6e4:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     6e8:	60 e8       	ldi	r22, 0x80	; 128
     6ea:	76 e9       	ldi	r23, 0x96	; 150
     6ec:	88 e9       	ldi	r24, 0x98	; 152
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     6f4:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     6f8:	21 96       	adiw	r28, 0x01	; 1
	}
     6fa:	0f 90       	pop	r0
     6fc:	0f 90       	pop	r0
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	ec cf       	rjmp	.-40     	; 0x6dc <Task13+0x2e>

00000704 <Task11>:
	cnt++;
	}
}

void Task11()
{
     704:	0f 93       	push	r16
     706:	1f 93       	push	r17
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task11 PID=%d\r\n",nrk_get_pid());
     70c:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     710:	99 27       	eor	r25, r25
     712:	9f 93       	push	r25
     714:	8f 93       	push	r24
     716:	85 ed       	ldi	r24, 0xD5	; 213
     718:	91 e0       	ldi	r25, 0x01	; 1
     71a:	9f 93       	push	r25
     71c:	8f 93       	push	r24
     71e:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     722:	c0 e0       	ldi	r28, 0x00	; 0
     724:	d0 e0       	ldi	r29, 0x00	; 0
     726:	0f 90       	pop	r0
     728:	0f 90       	pop	r0
     72a:	0f 90       	pop	r0
     72c:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task11 cnt=%d\r\n",cnt );
     72e:	05 ee       	ldi	r16, 0xE5	; 229
     730:	11 e0       	ldi	r17, 0x01	; 1
     732:	df 93       	push	r29
     734:	cf 93       	push	r28
     736:	1f 93       	push	r17
     738:	0f 93       	push	r16
     73a:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     73e:	60 e8       	ldi	r22, 0x80	; 128
     740:	76 e9       	ldi	r23, 0x96	; 150
     742:	88 e9       	ldi	r24, 0x98	; 152
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     74a:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     74e:	21 96       	adiw	r28, 0x01	; 1
	}
     750:	0f 90       	pop	r0
     752:	0f 90       	pop	r0
     754:	0f 90       	pop	r0
     756:	0f 90       	pop	r0
     758:	ec cf       	rjmp	.-40     	; 0x732 <Task11+0x2e>

0000075a <Task10>:
	cnt++;
	}
}

void Task10()
{
     75a:	0f 93       	push	r16
     75c:	1f 93       	push	r17
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task10 PID=%d\r\n",nrk_get_pid());
     762:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     766:	99 27       	eor	r25, r25
     768:	9f 93       	push	r25
     76a:	8f 93       	push	r24
     76c:	85 ef       	ldi	r24, 0xF5	; 245
     76e:	91 e0       	ldi	r25, 0x01	; 1
     770:	9f 93       	push	r25
     772:	8f 93       	push	r24
     774:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     778:	c0 e0       	ldi	r28, 0x00	; 0
     77a:	d0 e0       	ldi	r29, 0x00	; 0
     77c:	0f 90       	pop	r0
     77e:	0f 90       	pop	r0
     780:	0f 90       	pop	r0
     782:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task10 cnt=%d\r\n",cnt );
     784:	05 e0       	ldi	r16, 0x05	; 5
     786:	12 e0       	ldi	r17, 0x02	; 2
     788:	df 93       	push	r29
     78a:	cf 93       	push	r28
     78c:	1f 93       	push	r17
     78e:	0f 93       	push	r16
     790:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     794:	60 e8       	ldi	r22, 0x80	; 128
     796:	76 e9       	ldi	r23, 0x96	; 150
     798:	88 e9       	ldi	r24, 0x98	; 152
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     7a0:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     7a4:	21 96       	adiw	r28, 0x01	; 1
	}
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	ec cf       	rjmp	.-40     	; 0x788 <Task10+0x2e>

000007b0 <Task9>:
	cnt++;
	}
}

void Task9()
{
     7b0:	0f 93       	push	r16
     7b2:	1f 93       	push	r17
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task9 PID=%d\r\n",nrk_get_pid());
     7b8:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     7bc:	99 27       	eor	r25, r25
     7be:	9f 93       	push	r25
     7c0:	8f 93       	push	r24
     7c2:	85 e1       	ldi	r24, 0x15	; 21
     7c4:	92 e0       	ldi	r25, 0x02	; 2
     7c6:	9f 93       	push	r25
     7c8:	8f 93       	push	r24
     7ca:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     7ce:	c0 e0       	ldi	r28, 0x00	; 0
     7d0:	d0 e0       	ldi	r29, 0x00	; 0
     7d2:	0f 90       	pop	r0
     7d4:	0f 90       	pop	r0
     7d6:	0f 90       	pop	r0
     7d8:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task9 cnt=%d\r\n",cnt );
     7da:	04 e2       	ldi	r16, 0x24	; 36
     7dc:	12 e0       	ldi	r17, 0x02	; 2
     7de:	df 93       	push	r29
     7e0:	cf 93       	push	r28
     7e2:	1f 93       	push	r17
     7e4:	0f 93       	push	r16
     7e6:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     7ea:	60 e8       	ldi	r22, 0x80	; 128
     7ec:	76 e9       	ldi	r23, 0x96	; 150
     7ee:	88 e9       	ldi	r24, 0x98	; 152
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     7f6:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     7fa:	21 96       	adiw	r28, 0x01	; 1
	}
     7fc:	0f 90       	pop	r0
     7fe:	0f 90       	pop	r0
     800:	0f 90       	pop	r0
     802:	0f 90       	pop	r0
     804:	ec cf       	rjmp	.-40     	; 0x7de <Task9+0x2e>

00000806 <Task8>:
	cnt++;
	}
}

void Task8()
{
     806:	0f 93       	push	r16
     808:	1f 93       	push	r17
     80a:	cf 93       	push	r28
     80c:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task8 PID=%d\r\n",nrk_get_pid());
     80e:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     812:	99 27       	eor	r25, r25
     814:	9f 93       	push	r25
     816:	8f 93       	push	r24
     818:	83 e3       	ldi	r24, 0x33	; 51
     81a:	92 e0       	ldi	r25, 0x02	; 2
     81c:	9f 93       	push	r25
     81e:	8f 93       	push	r24
     820:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     824:	c0 e0       	ldi	r28, 0x00	; 0
     826:	d0 e0       	ldi	r29, 0x00	; 0
     828:	0f 90       	pop	r0
     82a:	0f 90       	pop	r0
     82c:	0f 90       	pop	r0
     82e:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task8 cnt=%d\r\n",cnt );
     830:	02 e4       	ldi	r16, 0x42	; 66
     832:	12 e0       	ldi	r17, 0x02	; 2
     834:	df 93       	push	r29
     836:	cf 93       	push	r28
     838:	1f 93       	push	r17
     83a:	0f 93       	push	r16
     83c:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     840:	60 e8       	ldi	r22, 0x80	; 128
     842:	76 e9       	ldi	r23, 0x96	; 150
     844:	88 e9       	ldi	r24, 0x98	; 152
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     84c:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     850:	21 96       	adiw	r28, 0x01	; 1
	}
     852:	0f 90       	pop	r0
     854:	0f 90       	pop	r0
     856:	0f 90       	pop	r0
     858:	0f 90       	pop	r0
     85a:	ec cf       	rjmp	.-40     	; 0x834 <Task8+0x2e>

0000085c <Task7>:
	cnt++;
	}
}

void Task7()
{
     85c:	0f 93       	push	r16
     85e:	1f 93       	push	r17
     860:	cf 93       	push	r28
     862:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task7 PID=%d\r\n",nrk_get_pid());
     864:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     868:	99 27       	eor	r25, r25
     86a:	9f 93       	push	r25
     86c:	8f 93       	push	r24
     86e:	81 e5       	ldi	r24, 0x51	; 81
     870:	92 e0       	ldi	r25, 0x02	; 2
     872:	9f 93       	push	r25
     874:	8f 93       	push	r24
     876:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     87a:	c0 e0       	ldi	r28, 0x00	; 0
     87c:	d0 e0       	ldi	r29, 0x00	; 0
     87e:	0f 90       	pop	r0
     880:	0f 90       	pop	r0
     882:	0f 90       	pop	r0
     884:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task7 cnt=%d\r\n",cnt );
     886:	00 e6       	ldi	r16, 0x60	; 96
     888:	12 e0       	ldi	r17, 0x02	; 2
     88a:	df 93       	push	r29
     88c:	cf 93       	push	r28
     88e:	1f 93       	push	r17
     890:	0f 93       	push	r16
     892:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     896:	60 e8       	ldi	r22, 0x80	; 128
     898:	76 e9       	ldi	r23, 0x96	; 150
     89a:	88 e9       	ldi	r24, 0x98	; 152
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     8a2:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     8a6:	21 96       	adiw	r28, 0x01	; 1
	}
     8a8:	0f 90       	pop	r0
     8aa:	0f 90       	pop	r0
     8ac:	0f 90       	pop	r0
     8ae:	0f 90       	pop	r0
     8b0:	ec cf       	rjmp	.-40     	; 0x88a <Task7+0x2e>

000008b2 <Task6>:
	cnt++;
	}
}

void Task6()
{
     8b2:	0f 93       	push	r16
     8b4:	1f 93       	push	r17
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task6 PID=%d\r\n",nrk_get_pid());
     8ba:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     8be:	99 27       	eor	r25, r25
     8c0:	9f 93       	push	r25
     8c2:	8f 93       	push	r24
     8c4:	8f e6       	ldi	r24, 0x6F	; 111
     8c6:	92 e0       	ldi	r25, 0x02	; 2
     8c8:	9f 93       	push	r25
     8ca:	8f 93       	push	r24
     8cc:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     8d0:	c0 e0       	ldi	r28, 0x00	; 0
     8d2:	d0 e0       	ldi	r29, 0x00	; 0
     8d4:	0f 90       	pop	r0
     8d6:	0f 90       	pop	r0
     8d8:	0f 90       	pop	r0
     8da:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task6 cnt=%d\r\n",cnt );
     8dc:	0e e7       	ldi	r16, 0x7E	; 126
     8de:	12 e0       	ldi	r17, 0x02	; 2
     8e0:	df 93       	push	r29
     8e2:	cf 93       	push	r28
     8e4:	1f 93       	push	r17
     8e6:	0f 93       	push	r16
     8e8:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     8ec:	60 e8       	ldi	r22, 0x80	; 128
     8ee:	76 e9       	ldi	r23, 0x96	; 150
     8f0:	88 e9       	ldi	r24, 0x98	; 152
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     8f8:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     8fc:	21 96       	adiw	r28, 0x01	; 1
	}
     8fe:	0f 90       	pop	r0
     900:	0f 90       	pop	r0
     902:	0f 90       	pop	r0
     904:	0f 90       	pop	r0
     906:	ec cf       	rjmp	.-40     	; 0x8e0 <Task6+0x2e>

00000908 <Task5>:
	cnt++;
	}
}

void Task5()
{
     908:	0f 93       	push	r16
     90a:	1f 93       	push	r17
     90c:	cf 93       	push	r28
     90e:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task5 PID=%d\r\n",nrk_get_pid());
     910:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     914:	99 27       	eor	r25, r25
     916:	9f 93       	push	r25
     918:	8f 93       	push	r24
     91a:	8d e8       	ldi	r24, 0x8D	; 141
     91c:	92 e0       	ldi	r25, 0x02	; 2
     91e:	9f 93       	push	r25
     920:	8f 93       	push	r24
     922:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     926:	c0 e0       	ldi	r28, 0x00	; 0
     928:	d0 e0       	ldi	r29, 0x00	; 0
     92a:	0f 90       	pop	r0
     92c:	0f 90       	pop	r0
     92e:	0f 90       	pop	r0
     930:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task5 cnt=%d\r\n",cnt );
     932:	0c e9       	ldi	r16, 0x9C	; 156
     934:	12 e0       	ldi	r17, 0x02	; 2
     936:	df 93       	push	r29
     938:	cf 93       	push	r28
     93a:	1f 93       	push	r17
     93c:	0f 93       	push	r16
     93e:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     942:	60 e8       	ldi	r22, 0x80	; 128
     944:	76 e9       	ldi	r23, 0x96	; 150
     946:	88 e9       	ldi	r24, 0x98	; 152
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     94e:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     952:	21 96       	adiw	r28, 0x01	; 1
	}
     954:	0f 90       	pop	r0
     956:	0f 90       	pop	r0
     958:	0f 90       	pop	r0
     95a:	0f 90       	pop	r0
     95c:	ec cf       	rjmp	.-40     	; 0x936 <Task5+0x2e>

0000095e <Task4>:
	cnt++;
	}
}

void Task4()
{
     95e:	0f 93       	push	r16
     960:	1f 93       	push	r17
     962:	cf 93       	push	r28
     964:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task4 PID=%d\r\n",nrk_get_pid());
     966:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     96a:	99 27       	eor	r25, r25
     96c:	9f 93       	push	r25
     96e:	8f 93       	push	r24
     970:	8b ea       	ldi	r24, 0xAB	; 171
     972:	92 e0       	ldi	r25, 0x02	; 2
     974:	9f 93       	push	r25
     976:	8f 93       	push	r24
     978:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     97c:	c0 e0       	ldi	r28, 0x00	; 0
     97e:	d0 e0       	ldi	r29, 0x00	; 0
     980:	0f 90       	pop	r0
     982:	0f 90       	pop	r0
     984:	0f 90       	pop	r0
     986:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task4 cnt=%d\r\n",cnt );
     988:	0a eb       	ldi	r16, 0xBA	; 186
     98a:	12 e0       	ldi	r17, 0x02	; 2
     98c:	df 93       	push	r29
     98e:	cf 93       	push	r28
     990:	1f 93       	push	r17
     992:	0f 93       	push	r16
     994:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     998:	60 e8       	ldi	r22, 0x80	; 128
     99a:	76 e9       	ldi	r23, 0x96	; 150
     99c:	88 e9       	ldi	r24, 0x98	; 152
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     9a4:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     9a8:	21 96       	adiw	r28, 0x01	; 1
	}
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	0f 90       	pop	r0
     9b0:	0f 90       	pop	r0
     9b2:	ec cf       	rjmp	.-40     	; 0x98c <Task4+0x2e>

000009b4 <Task3>:
	cnt++;
	}
}

void Task3()
{
     9b4:	0f 93       	push	r16
     9b6:	1f 93       	push	r17
     9b8:	cf 93       	push	r28
     9ba:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task3 PID=%d\r\n",nrk_get_pid());
     9bc:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     9c0:	99 27       	eor	r25, r25
     9c2:	9f 93       	push	r25
     9c4:	8f 93       	push	r24
     9c6:	89 ec       	ldi	r24, 0xC9	; 201
     9c8:	92 e0       	ldi	r25, 0x02	; 2
     9ca:	9f 93       	push	r25
     9cc:	8f 93       	push	r24
     9ce:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     9d2:	c0 e0       	ldi	r28, 0x00	; 0
     9d4:	d0 e0       	ldi	r29, 0x00	; 0
     9d6:	0f 90       	pop	r0
     9d8:	0f 90       	pop	r0
     9da:	0f 90       	pop	r0
     9dc:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task3 cnt=%d\r\n",cnt );
     9de:	08 ed       	ldi	r16, 0xD8	; 216
     9e0:	12 e0       	ldi	r17, 0x02	; 2
     9e2:	df 93       	push	r29
     9e4:	cf 93       	push	r28
     9e6:	1f 93       	push	r17
     9e8:	0f 93       	push	r16
     9ea:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     9ee:	60 e8       	ldi	r22, 0x80	; 128
     9f0:	76 e9       	ldi	r23, 0x96	; 150
     9f2:	88 e9       	ldi	r24, 0x98	; 152
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     9fa:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     9fe:	21 96       	adiw	r28, 0x01	; 1
	}
     a00:	0f 90       	pop	r0
     a02:	0f 90       	pop	r0
     a04:	0f 90       	pop	r0
     a06:	0f 90       	pop	r0
     a08:	ec cf       	rjmp	.-40     	; 0x9e2 <Task3+0x2e>

00000a0a <Task2>:
	cnt++;
	}
}

void Task2()
{
     a0a:	0f 93       	push	r16
     a0c:	1f 93       	push	r17
     a0e:	cf 93       	push	r28
     a10:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task2 PID=%d\r\n",nrk_get_pid());
     a12:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     a16:	99 27       	eor	r25, r25
     a18:	9f 93       	push	r25
     a1a:	8f 93       	push	r24
     a1c:	87 ee       	ldi	r24, 0xE7	; 231
     a1e:	92 e0       	ldi	r25, 0x02	; 2
     a20:	9f 93       	push	r25
     a22:	8f 93       	push	r24
     a24:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     a28:	c0 e0       	ldi	r28, 0x00	; 0
     a2a:	d0 e0       	ldi	r29, 0x00	; 0
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	0f 90       	pop	r0
     a32:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	  printf( "Task2 cnt=%d\r\n",cnt );
     a34:	06 ef       	ldi	r16, 0xF6	; 246
     a36:	12 e0       	ldi	r17, 0x02	; 2
     a38:	df 93       	push	r29
     a3a:	cf 93       	push	r28
     a3c:	1f 93       	push	r17
     a3e:	0f 93       	push	r16
     a40:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	  my_nano_sleep(10*NANOS_PER_MS);
     a44:	60 e8       	ldi	r22, 0x80	; 128
     a46:	76 e9       	ldi	r23, 0x96	; 150
     a48:	88 e9       	ldi	r24, 0x98	; 152
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     a50:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     a54:	21 96       	adiw	r28, 0x01	; 1
	}
     a56:	0f 90       	pop	r0
     a58:	0f 90       	pop	r0
     a5a:	0f 90       	pop	r0
     a5c:	0f 90       	pop	r0
     a5e:	ec cf       	rjmp	.-40     	; 0xa38 <Task2+0x2e>

00000a60 <Task1>:
  return 0;
}


void Task1()
{
     a60:	0f 93       	push	r16
     a62:	1f 93       	push	r17
     a64:	cf 93       	push	r28
     a66:	df 93       	push	r29
uint16_t cnt;
//printf( "My node's address is %d\r\n",NODE_ADDR );
  printf( "Task1 PID=%d\r\n",nrk_get_pid());
     a68:	0e 94 75 1c 	call	0x38ea	; 0x38ea <nrk_get_pid>
     a6c:	99 27       	eor	r25, r25
     a6e:	9f 93       	push	r25
     a70:	8f 93       	push	r24
     a72:	85 e0       	ldi	r24, 0x05	; 5
     a74:	93 e0       	ldi	r25, 0x03	; 3
     a76:	9f 93       	push	r25
     a78:	8f 93       	push	r24
     a7a:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
     a7e:	c0 e0       	ldi	r28, 0x00	; 0
     a80:	d0 e0       	ldi	r29, 0x00	; 0
     a82:	0f 90       	pop	r0
     a84:	0f 90       	pop	r0
     a86:	0f 90       	pop	r0
     a88:	0f 90       	pop	r0
  cnt=0;
  while(1) {
	printf( "Task1 cnt=%d\r\n",cnt );
     a8a:	04 e1       	ldi	r16, 0x14	; 20
     a8c:	13 e0       	ldi	r17, 0x03	; 3
     a8e:	df 93       	push	r29
     a90:	cf 93       	push	r28
     a92:	1f 93       	push	r17
     a94:	0f 93       	push	r16
     a96:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	
	my_nano_sleep(150*NANOS_PER_MS);
     a9a:	60 e8       	ldi	r22, 0x80	; 128
     a9c:	71 ed       	ldi	r23, 0xD1	; 209
     a9e:	80 ef       	ldi	r24, 0xF0	; 240
     aa0:	98 e0       	ldi	r25, 0x08	; 8
     aa2:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <my_nano_sleep>
	
	  nrk_wait_until_next_period(); //TODO:might need to change this to another wait_until... function to accomodate CBS
     aa6:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
	cnt++;
     aaa:	21 96       	adiw	r28, 0x01	; 1
	}
     aac:	0f 90       	pop	r0
     aae:	0f 90       	pop	r0
     ab0:	0f 90       	pop	r0
     ab2:	0f 90       	pop	r0
     ab4:	ec cf       	rjmp	.-40     	; 0xa8e <Task1+0x2e>

00000ab6 <halRfSetChannel>:
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
     ab6:	99 27       	eor	r25, r25
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
     ab8:	9c 01       	movw	r18, r24
     aba:	26 5a       	subi	r18, 0xA6	; 166
     abc:	3e 4b       	sbci	r19, 0xBE	; 190
     abe:	0b 97       	sbiw	r24, 0x0b	; 11
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
     ac0:	88 0f       	add	r24, r24
     ac2:	99 1f       	adc	r25, r25
     ac4:	88 0f       	add	r24, r24
     ac6:	99 1f       	adc	r25, r25
     ac8:	28 0f       	add	r18, r24
     aca:	39 1f       	adc	r19, r25
	
    // Write it to the CC2420
	DISABLE_GLOBAL_INT();
     acc:	f8 94       	cli
	FASTSPI_SETREG(CC2420_FSCTRL, f);
     ace:	c0 98       	cbi	0x18, 0	; 24
     ad0:	88 e1       	ldi	r24, 0x18	; 24
     ad2:	8f b9       	out	0x0f, r24	; 15
     ad4:	77 9b       	sbis	0x0e, 7	; 14
     ad6:	fe cf       	rjmp	.-4      	; 0xad4 <halRfSetChannel+0x1e>
     ad8:	83 2f       	mov	r24, r19
     ada:	99 27       	eor	r25, r25
     adc:	8f b9       	out	0x0f, r24	; 15
     ade:	77 9b       	sbis	0x0e, 7	; 14
     ae0:	fe cf       	rjmp	.-4      	; 0xade <halRfSetChannel+0x28>
     ae2:	2f b9       	out	0x0f, r18	; 15
     ae4:	77 9b       	sbis	0x0e, 7	; 14
     ae6:	fe cf       	rjmp	.-4      	; 0xae4 <halRfSetChannel+0x2e>
     ae8:	c0 9a       	sbi	0x18, 0	; 24
	ENABLE_GLOBAL_INT();
     aea:	78 94       	sei
     aec:	08 95       	ret

00000aee <halRfWaitForCrystalOscillator>:
void halRfWaitForCrystalOscillator(void) {
    uint8_t spiStatusByte;

    // Poll the SPI status byte until the crystal oscillator is stable
    do {
	    DISABLE_GLOBAL_INT();
     aee:	f8 94       	cli
	    FASTSPI_UPD_STATUS(spiStatusByte);
     af0:	c0 98       	cbi	0x18, 0	; 24
     af2:	1f b8       	out	0x0f, r1	; 15
     af4:	77 9b       	sbis	0x0e, 7	; 14
     af6:	fe cf       	rjmp	.-4      	; 0xaf4 <halRfWaitForCrystalOscillator+0x6>
     af8:	8f b1       	in	r24, 0x0f	; 15
     afa:	c0 9a       	sbi	0x18, 0	; 24
	    ENABLE_GLOBAL_INT();
     afc:	78 94       	sei
    } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
     afe:	86 ff       	sbrs	r24, 6
     b00:	f6 cf       	rjmp	.-20     	; 0xaee <halRfWaitForCrystalOscillator>
     b02:	08 95       	ret

00000b04 <rf_security_last_pkt_status>:
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
	
    // Write it to the CC2420
	DISABLE_GLOBAL_INT();
	FASTSPI_SETREG(CC2420_FSCTRL, f);
     b04:	80 91 cc 07 	lds	r24, 0x07CC
	ENABLE_GLOBAL_INT();

     b08:	99 27       	eor	r25, r25
     b0a:	08 95       	ret

00000b0c <rf_security_set_ctr_counter>:
} // rfSetChannel


     b0c:	cf 93       	push	r28
     b0e:	df 93       	push	r29
     b10:	dc 01       	movw	r26, r24
     b12:	c0 98       	cbi	0x18, 0	; 24
     b14:	89 ec       	ldi	r24, 0xC9	; 201
     b16:	8f b9       	out	0x0f, r24	; 15
     b18:	77 9b       	sbis	0x0e, 7	; 14
     b1a:	fe cf       	rjmp	.-4      	; 0xb18 <rf_security_set_ctr_counter+0xc>
     b1c:	80 e8       	ldi	r24, 0x80	; 128
     b1e:	8f b9       	out	0x0f, r24	; 15
     b20:	77 9b       	sbis	0x0e, 7	; 14
     b22:	fe cf       	rjmp	.-4      	; 0xb20 <rf_security_set_ctr_counter+0x14>
     b24:	92 e0       	ldi	r25, 0x02	; 2
     b26:	91 50       	subi	r25, 0x01	; 1
     b28:	fd 01       	movw	r30, r26
     b2a:	e9 0f       	add	r30, r25
     b2c:	f1 1d       	adc	r31, r1
     b2e:	80 81       	ld	r24, Z
     b30:	8f b9       	out	0x0f, r24	; 15
     b32:	77 9b       	sbis	0x0e, 7	; 14
     b34:	fe cf       	rjmp	.-4      	; 0xb32 <rf_security_set_ctr_counter+0x26>
     b36:	99 23       	and	r25, r25
     b38:	b1 f7       	brne	.-20     	; 0xb26 <rf_security_set_ctr_counter+0x1a>
     b3a:	c0 9a       	sbi	0x18, 0	; 24
     b3c:	c0 98       	cbi	0x18, 0	; 24
     b3e:	8b ec       	ldi	r24, 0xCB	; 203
     b40:	8f b9       	out	0x0f, r24	; 15
     b42:	77 9b       	sbis	0x0e, 7	; 14
     b44:	fe cf       	rjmp	.-4      	; 0xb42 <rf_security_set_ctr_counter+0x36>
     b46:	80 e8       	ldi	r24, 0x80	; 128
     b48:	8f b9       	out	0x0f, r24	; 15
     b4a:	77 9b       	sbis	0x0e, 7	; 14
     b4c:	fe cf       	rjmp	.-4      	; 0xb4a <rf_security_set_ctr_counter+0x3e>
     b4e:	92 e0       	ldi	r25, 0x02	; 2
     b50:	9d 01       	movw	r18, r26
     b52:	2e 5f       	subi	r18, 0xFE	; 254
     b54:	3f 4f       	sbci	r19, 0xFF	; 255
     b56:	e9 01       	movw	r28, r18
     b58:	91 50       	subi	r25, 0x01	; 1
     b5a:	f9 01       	movw	r30, r18
     b5c:	e9 0f       	add	r30, r25
     b5e:	f1 1d       	adc	r31, r1
     b60:	80 81       	ld	r24, Z
     b62:	8f b9       	out	0x0f, r24	; 15
     b64:	77 9b       	sbis	0x0e, 7	; 14
     b66:	fe cf       	rjmp	.-4      	; 0xb64 <rf_security_set_ctr_counter+0x58>
     b68:	99 23       	and	r25, r25
     b6a:	a9 f7       	brne	.-22     	; 0xb56 <rf_security_set_ctr_counter+0x4a>
     b6c:	c0 9a       	sbi	0x18, 0	; 24
     b6e:	8c 91       	ld	r24, X
     b70:	80 93 cd 07 	sts	0x07CD, r24
     b74:	fd 01       	movw	r30, r26
     b76:	81 81       	ldd	r24, Z+1	; 0x01
     b78:	80 93 ce 07 	sts	0x07CE, r24
     b7c:	88 81       	ld	r24, Y
     b7e:	80 93 cf 07 	sts	0x07CF, r24
     b82:	83 81       	ldd	r24, Z+3	; 0x03
     b84:	80 93 d0 07 	sts	0x07D0, r24
     b88:	df 91       	pop	r29
     b8a:	cf 91       	pop	r28
     b8c:	08 95       	ret

00000b8e <rf_security_enable>:
     b8e:	c0 98       	cbi	0x18, 0	; 24
     b90:	89 e1       	ldi	r24, 0x19	; 25
     b92:	8f b9       	out	0x0f, r24	; 15
     b94:	77 9b       	sbis	0x0e, 7	; 14
     b96:	fe cf       	rjmp	.-4      	; 0xb94 <rf_security_enable+0x6>
     b98:	83 e0       	ldi	r24, 0x03	; 3
     b9a:	8f b9       	out	0x0f, r24	; 15
     b9c:	77 9b       	sbis	0x0e, 7	; 14
     b9e:	fe cf       	rjmp	.-4      	; 0xb9c <rf_security_enable+0xe>
     ba0:	86 e0       	ldi	r24, 0x06	; 6
     ba2:	8f b9       	out	0x0f, r24	; 15
     ba4:	77 9b       	sbis	0x0e, 7	; 14
     ba6:	fe cf       	rjmp	.-4      	; 0xba4 <rf_security_enable+0x16>
     ba8:	c0 9a       	sbi	0x18, 0	; 24
     baa:	c0 98       	cbi	0x18, 0	; 24
     bac:	8a e1       	ldi	r24, 0x1A	; 26
     bae:	8f b9       	out	0x0f, r24	; 15
     bb0:	77 9b       	sbis	0x0e, 7	; 14
     bb2:	fe cf       	rjmp	.-4      	; 0xbb0 <rf_security_enable+0x22>
     bb4:	8e e0       	ldi	r24, 0x0E	; 14
     bb6:	8f b9       	out	0x0f, r24	; 15
     bb8:	77 9b       	sbis	0x0e, 7	; 14
     bba:	fe cf       	rjmp	.-4      	; 0xbb8 <rf_security_enable+0x2a>
     bbc:	8e e0       	ldi	r24, 0x0E	; 14
     bbe:	8f b9       	out	0x0f, r24	; 15
     bc0:	77 9b       	sbis	0x0e, 7	; 14
     bc2:	fe cf       	rjmp	.-4      	; 0xbc0 <rf_security_enable+0x32>
     bc4:	c0 9a       	sbi	0x18, 0	; 24
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	80 93 bd 07 	sts	0x07BD, r24
     bcc:	08 95       	ret

00000bce <rf_security_disable>:
     bce:	c0 98       	cbi	0x18, 0	; 24
     bd0:	89 e1       	ldi	r24, 0x19	; 25
     bd2:	8f b9       	out	0x0f, r24	; 15
     bd4:	77 9b       	sbis	0x0e, 7	; 14
     bd6:	fe cf       	rjmp	.-4      	; 0xbd4 <rf_security_disable+0x6>
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	8f b9       	out	0x0f, r24	; 15
     bdc:	77 9b       	sbis	0x0e, 7	; 14
     bde:	fe cf       	rjmp	.-4      	; 0xbdc <rf_security_disable+0xe>
     be0:	84 ec       	ldi	r24, 0xC4	; 196
     be2:	8f b9       	out	0x0f, r24	; 15
     be4:	77 9b       	sbis	0x0e, 7	; 14
     be6:	fe cf       	rjmp	.-4      	; 0xbe4 <rf_security_disable+0x16>
     be8:	c0 9a       	sbi	0x18, 0	; 24
     bea:	10 92 bd 07 	sts	0x07BD, r1
     bee:	08 95       	ret

00000bf0 <rf_get_sem>:
     bf0:	80 91 bb 07 	lds	r24, 0x07BB
     bf4:	90 91 bc 07 	lds	r25, 0x07BC
     bf8:	08 95       	ret

00000bfa <rf_tx_power>:
     bfa:	28 2f       	mov	r18, r24
     bfc:	33 27       	eor	r19, r19
     bfe:	2f 71       	andi	r18, 0x1F	; 31
     c00:	30 70       	andi	r19, 0x00	; 0
     c02:	20 6e       	ori	r18, 0xE0	; 224
     c04:	30 6a       	ori	r19, 0xA0	; 160
     c06:	c0 98       	cbi	0x18, 0	; 24
     c08:	85 e1       	ldi	r24, 0x15	; 21
     c0a:	8f b9       	out	0x0f, r24	; 15
     c0c:	77 9b       	sbis	0x0e, 7	; 14
     c0e:	fe cf       	rjmp	.-4      	; 0xc0c <rf_tx_power+0x12>
     c10:	83 2f       	mov	r24, r19
     c12:	99 27       	eor	r25, r25
     c14:	8f b9       	out	0x0f, r24	; 15
     c16:	77 9b       	sbis	0x0e, 7	; 14
     c18:	fe cf       	rjmp	.-4      	; 0xc16 <rf_tx_power+0x1c>
     c1a:	2f b9       	out	0x0f, r18	; 15
     c1c:	77 9b       	sbis	0x0e, 7	; 14
     c1e:	fe cf       	rjmp	.-4      	; 0xc1c <rf_tx_power+0x22>
     c20:	c0 9a       	sbi	0x18, 0	; 24
     c22:	08 95       	ret

00000c24 <rf_addr_decode_enable>:
     c24:	20 91 be 07 	lds	r18, 0x07BE
     c28:	30 91 bf 07 	lds	r19, 0x07BF
     c2c:	38 60       	ori	r19, 0x08	; 8
     c2e:	30 93 bf 07 	sts	0x07BF, r19
     c32:	20 93 be 07 	sts	0x07BE, r18
     c36:	c0 98       	cbi	0x18, 0	; 24
     c38:	81 e1       	ldi	r24, 0x11	; 17
     c3a:	8f b9       	out	0x0f, r24	; 15
     c3c:	77 9b       	sbis	0x0e, 7	; 14
     c3e:	fe cf       	rjmp	.-4      	; 0xc3c <rf_addr_decode_enable+0x18>
     c40:	83 2f       	mov	r24, r19
     c42:	99 27       	eor	r25, r25
     c44:	8f b9       	out	0x0f, r24	; 15
     c46:	77 9b       	sbis	0x0e, 7	; 14
     c48:	fe cf       	rjmp	.-4      	; 0xc46 <rf_addr_decode_enable+0x22>
     c4a:	2f b9       	out	0x0f, r18	; 15
     c4c:	77 9b       	sbis	0x0e, 7	; 14
     c4e:	fe cf       	rjmp	.-4      	; 0xc4c <rf_addr_decode_enable+0x28>
     c50:	c0 9a       	sbi	0x18, 0	; 24
     c52:	08 95       	ret

00000c54 <rf_addr_decode_disable>:
     c54:	20 91 be 07 	lds	r18, 0x07BE
     c58:	30 91 bf 07 	lds	r19, 0x07BF
     c5c:	37 7f       	andi	r19, 0xF7	; 247
     c5e:	30 93 bf 07 	sts	0x07BF, r19
     c62:	20 93 be 07 	sts	0x07BE, r18
     c66:	c0 98       	cbi	0x18, 0	; 24
     c68:	81 e1       	ldi	r24, 0x11	; 17
     c6a:	8f b9       	out	0x0f, r24	; 15
     c6c:	77 9b       	sbis	0x0e, 7	; 14
     c6e:	fe cf       	rjmp	.-4      	; 0xc6c <rf_addr_decode_disable+0x18>
     c70:	83 2f       	mov	r24, r19
     c72:	99 27       	eor	r25, r25
     c74:	8f b9       	out	0x0f, r24	; 15
     c76:	77 9b       	sbis	0x0e, 7	; 14
     c78:	fe cf       	rjmp	.-4      	; 0xc76 <rf_addr_decode_disable+0x22>
     c7a:	2f b9       	out	0x0f, r18	; 15
     c7c:	77 9b       	sbis	0x0e, 7	; 14
     c7e:	fe cf       	rjmp	.-4      	; 0xc7c <rf_addr_decode_disable+0x28>
     c80:	c0 9a       	sbi	0x18, 0	; 24
     c82:	08 95       	ret

00000c84 <rf_auto_ack_enable>:
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	80 93 cb 07 	sts	0x07CB, r24
     c8a:	20 91 be 07 	lds	r18, 0x07BE
     c8e:	30 91 bf 07 	lds	r19, 0x07BF
     c92:	20 61       	ori	r18, 0x10	; 16
     c94:	30 93 bf 07 	sts	0x07BF, r19
     c98:	20 93 be 07 	sts	0x07BE, r18
     c9c:	c0 98       	cbi	0x18, 0	; 24
     c9e:	81 e1       	ldi	r24, 0x11	; 17
     ca0:	8f b9       	out	0x0f, r24	; 15
     ca2:	77 9b       	sbis	0x0e, 7	; 14
     ca4:	fe cf       	rjmp	.-4      	; 0xca2 <rf_auto_ack_enable+0x1e>
     ca6:	83 2f       	mov	r24, r19
     ca8:	99 27       	eor	r25, r25
     caa:	8f b9       	out	0x0f, r24	; 15
     cac:	77 9b       	sbis	0x0e, 7	; 14
     cae:	fe cf       	rjmp	.-4      	; 0xcac <rf_auto_ack_enable+0x28>
     cb0:	2f b9       	out	0x0f, r18	; 15
     cb2:	77 9b       	sbis	0x0e, 7	; 14
     cb4:	fe cf       	rjmp	.-4      	; 0xcb2 <rf_auto_ack_enable+0x2e>
     cb6:	c0 9a       	sbi	0x18, 0	; 24
     cb8:	08 95       	ret

00000cba <rf_auto_ack_disable>:
     cba:	10 92 cb 07 	sts	0x07CB, r1
     cbe:	20 91 be 07 	lds	r18, 0x07BE
     cc2:	30 91 bf 07 	lds	r19, 0x07BF
     cc6:	2f 7e       	andi	r18, 0xEF	; 239
     cc8:	30 93 bf 07 	sts	0x07BF, r19
     ccc:	20 93 be 07 	sts	0x07BE, r18
     cd0:	c0 98       	cbi	0x18, 0	; 24
     cd2:	81 e1       	ldi	r24, 0x11	; 17
     cd4:	8f b9       	out	0x0f, r24	; 15
     cd6:	77 9b       	sbis	0x0e, 7	; 14
     cd8:	fe cf       	rjmp	.-4      	; 0xcd6 <rf_auto_ack_disable+0x1c>
     cda:	83 2f       	mov	r24, r19
     cdc:	99 27       	eor	r25, r25
     cde:	8f b9       	out	0x0f, r24	; 15
     ce0:	77 9b       	sbis	0x0e, 7	; 14
     ce2:	fe cf       	rjmp	.-4      	; 0xce0 <rf_auto_ack_disable+0x26>
     ce4:	2f b9       	out	0x0f, r18	; 15
     ce6:	77 9b       	sbis	0x0e, 7	; 14
     ce8:	fe cf       	rjmp	.-4      	; 0xce6 <rf_auto_ack_disable+0x2c>
     cea:	c0 9a       	sbi	0x18, 0	; 24
     cec:	08 95       	ret

00000cee <rf_rx_on>:
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	80 93 c8 07 	sts	0x07C8, r24
     cf4:	c0 98       	cbi	0x18, 0	; 24
     cf6:	83 e0       	ldi	r24, 0x03	; 3
     cf8:	8f b9       	out	0x0f, r24	; 15
     cfa:	77 9b       	sbis	0x0e, 7	; 14
     cfc:	fe cf       	rjmp	.-4      	; 0xcfa <rf_rx_on+0xc>
     cfe:	c0 9a       	sbi	0x18, 0	; 24
     d00:	c0 98       	cbi	0x18, 0	; 24
     d02:	88 e0       	ldi	r24, 0x08	; 8
     d04:	8f b9       	out	0x0f, r24	; 15
     d06:	77 9b       	sbis	0x0e, 7	; 14
     d08:	fe cf       	rjmp	.-4      	; 0xd06 <rf_rx_on+0x18>
     d0a:	c0 9a       	sbi	0x18, 0	; 24
     d0c:	10 92 d1 07 	sts	0x07D1, r1
     d10:	08 95       	ret

00000d12 <rf_polling_rx_on>:
     d12:	81 e0       	ldi	r24, 0x01	; 1
     d14:	80 93 c8 07 	sts	0x07C8, r24
     d18:	c0 98       	cbi	0x18, 0	; 24
     d1a:	83 e0       	ldi	r24, 0x03	; 3
     d1c:	8f b9       	out	0x0f, r24	; 15
     d1e:	77 9b       	sbis	0x0e, 7	; 14
     d20:	fe cf       	rjmp	.-4      	; 0xd1e <rf_polling_rx_on+0xc>
     d22:	c0 9a       	sbi	0x18, 0	; 24
     d24:	c0 98       	cbi	0x18, 0	; 24
     d26:	88 e0       	ldi	r24, 0x08	; 8
     d28:	8f b9       	out	0x0f, r24	; 15
     d2a:	77 9b       	sbis	0x0e, 7	; 14
     d2c:	fe cf       	rjmp	.-4      	; 0xd2a <rf_polling_rx_on+0x18>
     d2e:	c0 9a       	sbi	0x18, 0	; 24
     d30:	10 92 d1 07 	sts	0x07D1, r1
     d34:	08 95       	ret

00000d36 <rf_rx_off>:
     d36:	10 92 c8 07 	sts	0x07C8, r1
     d3a:	c0 98       	cbi	0x18, 0	; 24
     d3c:	86 e0       	ldi	r24, 0x06	; 6
     d3e:	8f b9       	out	0x0f, r24	; 15
     d40:	77 9b       	sbis	0x0e, 7	; 14
     d42:	fe cf       	rjmp	.-4      	; 0xd40 <rf_rx_off+0xa>
     d44:	c0 9a       	sbi	0x18, 0	; 24
     d46:	10 92 d1 07 	sts	0x07D1, r1
     d4a:	08 95       	ret

00000d4c <rf_busy>:
     d4c:	80 b3       	in	r24, 0x10	; 16
     d4e:	99 27       	eor	r25, r25
     d50:	74 e0       	ldi	r23, 0x04	; 4
     d52:	96 95       	lsr	r25
     d54:	87 95       	ror	r24
     d56:	7a 95       	dec	r23
     d58:	e1 f7       	brne	.-8      	; 0xd52 <rf_busy+0x6>
     d5a:	81 70       	andi	r24, 0x01	; 1
     d5c:	90 70       	andi	r25, 0x00	; 0
     d5e:	08 95       	ret

00000d60 <rf_rx_check_fifop>:
     d60:	81 b1       	in	r24, 0x01	; 1
     d62:	99 27       	eor	r25, r25
     d64:	e6 e0       	ldi	r30, 0x06	; 6
     d66:	96 95       	lsr	r25
     d68:	87 95       	ror	r24
     d6a:	ea 95       	dec	r30
     d6c:	e1 f7       	brne	.-8      	; 0xd66 <rf_rx_check_fifop+0x6>
     d6e:	81 70       	andi	r24, 0x01	; 1
     d70:	90 70       	andi	r25, 0x00	; 0
     d72:	08 95       	ret

00000d74 <rf_rx_check_sfd>:
     d74:	80 b3       	in	r24, 0x10	; 16
     d76:	99 27       	eor	r25, r25
     d78:	f4 e0       	ldi	r31, 0x04	; 4
     d7a:	96 95       	lsr	r25
     d7c:	87 95       	ror	r24
     d7e:	fa 95       	dec	r31
     d80:	e1 f7       	brne	.-8      	; 0xd7a <rf_rx_check_sfd+0x6>
     d82:	81 70       	andi	r24, 0x01	; 1
     d84:	90 70       	andi	r25, 0x00	; 0
     d86:	08 95       	ret

00000d88 <rf_polling_rx_packet>:
     d88:	cf 93       	push	r28
     d8a:	df 93       	push	r29
     d8c:	cd b7       	in	r28, 0x3d	; 61
     d8e:	de b7       	in	r29, 0x3e	; 62
     d90:	24 97       	sbiw	r28, 0x04	; 4
     d92:	0f b6       	in	r0, 0x3f	; 63
     d94:	f8 94       	cli
     d96:	de bf       	out	0x3e, r29	; 62
     d98:	0f be       	out	0x3f, r0	; 63
     d9a:	cd bf       	out	0x3d, r28	; 61
     d9c:	0e 99       	sbic	0x01, 6	; 1
     d9e:	03 c0       	rjmp	.+6      	; 0xda6 <rf_polling_rx_packet+0x1e>
     da0:	80 e0       	ldi	r24, 0x00	; 0
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	e0 c1       	rjmp	.+960    	; 0x1166 <__stack+0x67>
     da6:	10 92 cc 07 	sts	0x07CC, r1
     daa:	0e 9b       	sbis	0x01, 6	; 1
     dac:	1b c0       	rjmp	.+54     	; 0xde4 <rf_polling_rx_packet+0x5c>
     dae:	b7 99       	sbic	0x16, 7	; 22
     db0:	19 c0       	rjmp	.+50     	; 0xde4 <rf_polling_rx_packet+0x5c>
     db2:	c0 98       	cbi	0x18, 0	; 24
     db4:	8f e7       	ldi	r24, 0x7F	; 127
     db6:	8f b9       	out	0x0f, r24	; 15
     db8:	77 9b       	sbis	0x0e, 7	; 14
     dba:	fe cf       	rjmp	.-4      	; 0xdb8 <rf_polling_rx_packet+0x30>
     dbc:	1f b8       	out	0x0f, r1	; 15
     dbe:	77 9b       	sbis	0x0e, 7	; 14
     dc0:	fe cf       	rjmp	.-4      	; 0xdbe <rf_polling_rx_packet+0x36>
     dc2:	8f b1       	in	r24, 0x0f	; 15
     dc4:	c0 9a       	sbi	0x18, 0	; 24
     dc6:	c0 98       	cbi	0x18, 0	; 24
     dc8:	88 e0       	ldi	r24, 0x08	; 8
     dca:	8f b9       	out	0x0f, r24	; 15
     dcc:	77 9b       	sbis	0x0e, 7	; 14
     dce:	fe cf       	rjmp	.-4      	; 0xdcc <rf_polling_rx_packet+0x44>
     dd0:	c0 9a       	sbi	0x18, 0	; 24
     dd2:	c0 98       	cbi	0x18, 0	; 24
     dd4:	88 e0       	ldi	r24, 0x08	; 8
     dd6:	8f b9       	out	0x0f, r24	; 15
     dd8:	77 9b       	sbis	0x0e, 7	; 14
     dda:	fe cf       	rjmp	.-4      	; 0xdd8 <rf_polling_rx_packet+0x50>
     ddc:	c0 9a       	sbi	0x18, 0	; 24
     dde:	8f ef       	ldi	r24, 0xFF	; 255
     de0:	9f ef       	ldi	r25, 0xFF	; 255
     de2:	c1 c1       	rjmp	.+898    	; 0x1166 <__stack+0x67>
     de4:	c0 98       	cbi	0x18, 0	; 24
     de6:	8f e7       	ldi	r24, 0x7F	; 127
     de8:	8f b9       	out	0x0f, r24	; 15
     dea:	77 9b       	sbis	0x0e, 7	; 14
     dec:	fe cf       	rjmp	.-4      	; 0xdea <rf_polling_rx_packet+0x62>
     dee:	1f b8       	out	0x0f, r1	; 15
     df0:	77 9b       	sbis	0x0e, 7	; 14
     df2:	fe cf       	rjmp	.-4      	; 0xdf0 <rf_polling_rx_packet+0x68>
     df4:	4f b1       	in	r20, 0x0f	; 15
     df6:	c0 9a       	sbi	0x18, 0	; 24
     df8:	4f 77       	andi	r20, 0x7F	; 127
     dfa:	c9 f4       	brne	.+50     	; 0xe2e <rf_polling_rx_packet+0xa6>
     dfc:	c0 98       	cbi	0x18, 0	; 24
     dfe:	8f e7       	ldi	r24, 0x7F	; 127
     e00:	8f b9       	out	0x0f, r24	; 15
     e02:	77 9b       	sbis	0x0e, 7	; 14
     e04:	fe cf       	rjmp	.-4      	; 0xe02 <rf_polling_rx_packet+0x7a>
     e06:	1f b8       	out	0x0f, r1	; 15
     e08:	77 9b       	sbis	0x0e, 7	; 14
     e0a:	fe cf       	rjmp	.-4      	; 0xe08 <rf_polling_rx_packet+0x80>
     e0c:	8f b1       	in	r24, 0x0f	; 15
     e0e:	c0 9a       	sbi	0x18, 0	; 24
     e10:	c0 98       	cbi	0x18, 0	; 24
     e12:	88 e0       	ldi	r24, 0x08	; 8
     e14:	8f b9       	out	0x0f, r24	; 15
     e16:	77 9b       	sbis	0x0e, 7	; 14
     e18:	fe cf       	rjmp	.-4      	; 0xe16 <rf_polling_rx_packet+0x8e>
     e1a:	c0 9a       	sbi	0x18, 0	; 24
     e1c:	c0 98       	cbi	0x18, 0	; 24
     e1e:	88 e0       	ldi	r24, 0x08	; 8
     e20:	8f b9       	out	0x0f, r24	; 15
     e22:	77 9b       	sbis	0x0e, 7	; 14
     e24:	fe cf       	rjmp	.-4      	; 0xe22 <rf_polling_rx_packet+0x9a>
     e26:	c0 9a       	sbi	0x18, 0	; 24
     e28:	8e ef       	ldi	r24, 0xFE	; 254
     e2a:	9f ef       	ldi	r25, 0xFF	; 255
     e2c:	9c c1       	rjmp	.+824    	; 0x1166 <__stack+0x67>
     e2e:	4c 30       	cpi	r20, 0x0C	; 12
     e30:	8c f0       	brlt	.+34     	; 0xe54 <rf_polling_rx_packet+0xcc>
     e32:	e0 91 c0 07 	lds	r30, 0x07C0
     e36:	f0 91 c1 07 	lds	r31, 0x07C1
     e3a:	24 2f       	mov	r18, r20
     e3c:	33 27       	eor	r19, r19
     e3e:	27 fd       	sbrc	r18, 7
     e40:	30 95       	com	r19
     e42:	2b 50       	subi	r18, 0x0B	; 11
     e44:	30 40       	sbci	r19, 0x00	; 0
     e46:	84 81       	ldd	r24, Z+4	; 0x04
     e48:	99 27       	eor	r25, r25
     e4a:	87 fd       	sbrc	r24, 7
     e4c:	90 95       	com	r25
     e4e:	82 17       	cp	r24, r18
     e50:	93 07       	cpc	r25, r19
     e52:	94 f5       	brge	.+100    	; 0xeb8 <rf_polling_rx_packet+0x130>
     e54:	c0 98       	cbi	0x18, 0	; 24
     e56:	8f e7       	ldi	r24, 0x7F	; 127
     e58:	8f b9       	out	0x0f, r24	; 15
     e5a:	77 9b       	sbis	0x0e, 7	; 14
     e5c:	fe cf       	rjmp	.-4      	; 0xe5a <rf_polling_rx_packet+0xd2>
     e5e:	60 e0       	ldi	r22, 0x00	; 0
     e60:	70 e0       	ldi	r23, 0x00	; 0
     e62:	24 2f       	mov	r18, r20
     e64:	33 27       	eor	r19, r19
     e66:	27 fd       	sbrc	r18, 7
     e68:	30 95       	com	r19
     e6a:	05 c0       	rjmp	.+10     	; 0xe76 <rf_polling_rx_packet+0xee>
     e6c:	1f b8       	out	0x0f, r1	; 15
     e6e:	77 9b       	sbis	0x0e, 7	; 14
     e70:	fe cf       	rjmp	.-4      	; 0xe6e <rf_polling_rx_packet+0xe6>
     e72:	6f 5f       	subi	r22, 0xFF	; 255
     e74:	7f 4f       	sbci	r23, 0xFF	; 255
     e76:	86 2f       	mov	r24, r22
     e78:	99 27       	eor	r25, r25
     e7a:	82 17       	cp	r24, r18
     e7c:	93 07       	cpc	r25, r19
     e7e:	14 f4       	brge	.+4      	; 0xe84 <rf_polling_rx_packet+0xfc>
     e80:	b7 99       	sbic	0x16, 7	; 22
     e82:	f4 cf       	rjmp	.-24     	; 0xe6c <rf_polling_rx_packet+0xe4>
     e84:	c0 9a       	sbi	0x18, 0	; 24
     e86:	c0 98       	cbi	0x18, 0	; 24
     e88:	8f e7       	ldi	r24, 0x7F	; 127
     e8a:	8f b9       	out	0x0f, r24	; 15
     e8c:	77 9b       	sbis	0x0e, 7	; 14
     e8e:	fe cf       	rjmp	.-4      	; 0xe8c <rf_polling_rx_packet+0x104>
     e90:	1f b8       	out	0x0f, r1	; 15
     e92:	77 9b       	sbis	0x0e, 7	; 14
     e94:	fe cf       	rjmp	.-4      	; 0xe92 <rf_polling_rx_packet+0x10a>
     e96:	8f b1       	in	r24, 0x0f	; 15
     e98:	c0 9a       	sbi	0x18, 0	; 24
     e9a:	c0 98       	cbi	0x18, 0	; 24
     e9c:	88 e0       	ldi	r24, 0x08	; 8
     e9e:	8f b9       	out	0x0f, r24	; 15
     ea0:	77 9b       	sbis	0x0e, 7	; 14
     ea2:	fe cf       	rjmp	.-4      	; 0xea0 <rf_polling_rx_packet+0x118>
     ea4:	c0 9a       	sbi	0x18, 0	; 24
     ea6:	c0 98       	cbi	0x18, 0	; 24
     ea8:	88 e0       	ldi	r24, 0x08	; 8
     eaa:	8f b9       	out	0x0f, r24	; 15
     eac:	77 9b       	sbis	0x0e, 7	; 14
     eae:	fe cf       	rjmp	.-4      	; 0xeac <rf_polling_rx_packet+0x124>
     eb0:	c0 9a       	sbi	0x18, 0	; 24
     eb2:	8d ef       	ldi	r24, 0xFD	; 253
     eb4:	9f ef       	ldi	r25, 0xFF	; 255
     eb6:	57 c1       	rjmp	.+686    	; 0x1166 <__stack+0x67>
     eb8:	e0 91 c0 07 	lds	r30, 0x07C0
     ebc:	f0 91 c1 07 	lds	r31, 0x07C1
     ec0:	4c 50       	subi	r20, 0x0C	; 12
     ec2:	43 83       	std	Z+3, r20	; 0x03
     ec4:	c0 98       	cbi	0x18, 0	; 24
     ec6:	8f e7       	ldi	r24, 0x7F	; 127
     ec8:	8f b9       	out	0x0f, r24	; 15
     eca:	77 9b       	sbis	0x0e, 7	; 14
     ecc:	fe cf       	rjmp	.-4      	; 0xeca <rf_polling_rx_packet+0x142>
     ece:	fe 01       	movw	r30, r28
     ed0:	31 96       	adiw	r30, 0x01	; 1
     ed2:	9e 01       	movw	r18, r28
     ed4:	2d 5f       	subi	r18, 0xFD	; 253
     ed6:	3f 4f       	sbci	r19, 0xFF	; 255
     ed8:	1f b8       	out	0x0f, r1	; 15
     eda:	77 9b       	sbis	0x0e, 7	; 14
     edc:	fe cf       	rjmp	.-4      	; 0xeda <rf_polling_rx_packet+0x152>
     ede:	8f b1       	in	r24, 0x0f	; 15
     ee0:	81 93       	st	Z+, r24
     ee2:	e2 17       	cp	r30, r18
     ee4:	f3 07       	cpc	r31, r19
     ee6:	c1 f7       	brne	.-16     	; 0xed8 <rf_polling_rx_packet+0x150>
     ee8:	c0 9a       	sbi	0x18, 0	; 24
     eea:	e0 91 c0 07 	lds	r30, 0x07C0
     eee:	f0 91 c1 07 	lds	r31, 0x07C1
     ef2:	89 81       	ldd	r24, Y+1	; 0x01
     ef4:	9a 81       	ldd	r25, Y+2	; 0x02
     ef6:	a5 e0       	ldi	r26, 0x05	; 5
     ef8:	96 95       	lsr	r25
     efa:	87 95       	ror	r24
     efc:	aa 95       	dec	r26
     efe:	e1 f7       	brne	.-8      	; 0xef8 <rf_polling_rx_packet+0x170>
     f00:	81 70       	andi	r24, 0x01	; 1
     f02:	87 83       	std	Z+7, r24	; 0x07
     f04:	c0 98       	cbi	0x18, 0	; 24
     f06:	8f e7       	ldi	r24, 0x7F	; 127
     f08:	8f b9       	out	0x0f, r24	; 15
     f0a:	77 9b       	sbis	0x0e, 7	; 14
     f0c:	fe cf       	rjmp	.-4      	; 0xf0a <rf_polling_rx_packet+0x182>
     f0e:	1f b8       	out	0x0f, r1	; 15
     f10:	77 9b       	sbis	0x0e, 7	; 14
     f12:	fe cf       	rjmp	.-4      	; 0xf10 <rf_polling_rx_packet+0x188>
     f14:	e0 91 c0 07 	lds	r30, 0x07C0
     f18:	f0 91 c1 07 	lds	r31, 0x07C1
     f1c:	8f b1       	in	r24, 0x0f	; 15
     f1e:	80 83       	st	Z, r24
     f20:	c0 9a       	sbi	0x18, 0	; 24
     f22:	c0 98       	cbi	0x18, 0	; 24
     f24:	8f e7       	ldi	r24, 0x7F	; 127
     f26:	8f b9       	out	0x0f, r24	; 15
     f28:	77 9b       	sbis	0x0e, 7	; 14
     f2a:	fe cf       	rjmp	.-4      	; 0xf28 <rf_polling_rx_packet+0x1a0>
     f2c:	80 e0       	ldi	r24, 0x00	; 0
     f2e:	06 c0       	rjmp	.+12     	; 0xf3c <rf_polling_rx_packet+0x1b4>
     f30:	1f b8       	out	0x0f, r1	; 15
     f32:	77 9b       	sbis	0x0e, 7	; 14
     f34:	fe cf       	rjmp	.-4      	; 0xf32 <rf_polling_rx_packet+0x1aa>
     f36:	8f 5f       	subi	r24, 0xFF	; 255
     f38:	84 30       	cpi	r24, 0x04	; 4
     f3a:	11 f0       	breq	.+4      	; 0xf40 <rf_polling_rx_packet+0x1b8>
     f3c:	b7 99       	sbic	0x16, 7	; 22
     f3e:	f8 cf       	rjmp	.-16     	; 0xf30 <rf_polling_rx_packet+0x1a8>
     f40:	c0 9a       	sbi	0x18, 0	; 24
     f42:	c0 98       	cbi	0x18, 0	; 24
     f44:	8f e7       	ldi	r24, 0x7F	; 127
     f46:	8f b9       	out	0x0f, r24	; 15
     f48:	77 9b       	sbis	0x0e, 7	; 14
     f4a:	fe cf       	rjmp	.-4      	; 0xf48 <rf_polling_rx_packet+0x1c0>
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	1f b8       	out	0x0f, r1	; 15
     f52:	77 9b       	sbis	0x0e, 7	; 14
     f54:	fe cf       	rjmp	.-4      	; 0xf52 <rf_polling_rx_packet+0x1ca>
     f56:	e0 91 c0 07 	lds	r30, 0x07C0
     f5a:	f0 91 c1 07 	lds	r31, 0x07C1
     f5e:	e2 0f       	add	r30, r18
     f60:	f3 1f       	adc	r31, r19
     f62:	8f b1       	in	r24, 0x0f	; 15
     f64:	81 83       	std	Z+1, r24	; 0x01
     f66:	2f 5f       	subi	r18, 0xFF	; 255
     f68:	3f 4f       	sbci	r19, 0xFF	; 255
     f6a:	22 30       	cpi	r18, 0x02	; 2
     f6c:	31 05       	cpc	r19, r1
     f6e:	81 f7       	brne	.-32     	; 0xf50 <rf_polling_rx_packet+0x1c8>
     f70:	c0 9a       	sbi	0x18, 0	; 24
     f72:	89 81       	ldd	r24, Y+1	; 0x01
     f74:	9a 81       	ldd	r25, Y+2	; 0x02
     f76:	83 ff       	sbrs	r24, 3
     f78:	4d c0       	rjmp	.+154    	; 0x1014 <rf_polling_rx_packet+0x28c>
     f7a:	c0 98       	cbi	0x18, 0	; 24
     f7c:	8f e7       	ldi	r24, 0x7F	; 127
     f7e:	8f b9       	out	0x0f, r24	; 15
     f80:	77 9b       	sbis	0x0e, 7	; 14
     f82:	fe cf       	rjmp	.-4      	; 0xf80 <rf_polling_rx_packet+0x1f8>
     f84:	e7 eb       	ldi	r30, 0xB7	; 183
     f86:	f7 e0       	ldi	r31, 0x07	; 7
     f88:	1f b8       	out	0x0f, r1	; 15
     f8a:	77 9b       	sbis	0x0e, 7	; 14
     f8c:	fe cf       	rjmp	.-4      	; 0xf8a <rf_polling_rx_packet+0x202>
     f8e:	8f b1       	in	r24, 0x0f	; 15
     f90:	81 93       	st	Z+, r24
     f92:	87 e0       	ldi	r24, 0x07	; 7
     f94:	eb 3b       	cpi	r30, 0xBB	; 187
     f96:	f8 07       	cpc	r31, r24
     f98:	b9 f7       	brne	.-18     	; 0xf88 <rf_polling_rx_packet+0x200>
     f9a:	c0 9a       	sbi	0x18, 0	; 24
     f9c:	c0 98       	cbi	0x18, 0	; 24
     f9e:	89 e9       	ldi	r24, 0x99	; 153
     fa0:	8f b9       	out	0x0f, r24	; 15
     fa2:	77 9b       	sbis	0x0e, 7	; 14
     fa4:	fe cf       	rjmp	.-4      	; 0xfa2 <rf_polling_rx_packet+0x21a>
     fa6:	80 e8       	ldi	r24, 0x80	; 128
     fa8:	8f b9       	out	0x0f, r24	; 15
     faa:	77 9b       	sbis	0x0e, 7	; 14
     fac:	fe cf       	rjmp	.-4      	; 0xfaa <rf_polling_rx_packet+0x222>
     fae:	92 e0       	ldi	r25, 0x02	; 2
     fb0:	91 50       	subi	r25, 0x01	; 1
     fb2:	e9 2f       	mov	r30, r25
     fb4:	ff 27       	eor	r31, r31
     fb6:	e9 54       	subi	r30, 0x49	; 73
     fb8:	f8 4f       	sbci	r31, 0xF8	; 248
     fba:	80 81       	ld	r24, Z
     fbc:	8f b9       	out	0x0f, r24	; 15
     fbe:	77 9b       	sbis	0x0e, 7	; 14
     fc0:	fe cf       	rjmp	.-4      	; 0xfbe <rf_polling_rx_packet+0x236>
     fc2:	99 23       	and	r25, r25
     fc4:	a9 f7       	brne	.-22     	; 0xfb0 <rf_polling_rx_packet+0x228>
     fc6:	c0 9a       	sbi	0x18, 0	; 24
     fc8:	c0 98       	cbi	0x18, 0	; 24
     fca:	8b e9       	ldi	r24, 0x9B	; 155
     fcc:	8f b9       	out	0x0f, r24	; 15
     fce:	77 9b       	sbis	0x0e, 7	; 14
     fd0:	fe cf       	rjmp	.-4      	; 0xfce <rf_polling_rx_packet+0x246>
     fd2:	80 e8       	ldi	r24, 0x80	; 128
     fd4:	8f b9       	out	0x0f, r24	; 15
     fd6:	77 9b       	sbis	0x0e, 7	; 14
     fd8:	fe cf       	rjmp	.-4      	; 0xfd6 <rf_polling_rx_packet+0x24e>
     fda:	92 e0       	ldi	r25, 0x02	; 2
     fdc:	91 50       	subi	r25, 0x01	; 1
     fde:	e9 2f       	mov	r30, r25
     fe0:	ff 27       	eor	r31, r31
     fe2:	e7 54       	subi	r30, 0x47	; 71
     fe4:	f8 4f       	sbci	r31, 0xF8	; 248
     fe6:	80 81       	ld	r24, Z
     fe8:	8f b9       	out	0x0f, r24	; 15
     fea:	77 9b       	sbis	0x0e, 7	; 14
     fec:	fe cf       	rjmp	.-4      	; 0xfea <rf_polling_rx_packet+0x262>
     fee:	99 23       	and	r25, r25
     ff0:	a9 f7       	brne	.-22     	; 0xfdc <rf_polling_rx_packet+0x254>
     ff2:	c0 9a       	sbi	0x18, 0	; 24
     ff4:	c0 98       	cbi	0x18, 0	; 24
     ff6:	8c e0       	ldi	r24, 0x0C	; 12
     ff8:	8f b9       	out	0x0f, r24	; 15
     ffa:	77 9b       	sbis	0x0e, 7	; 14
     ffc:	fe cf       	rjmp	.-4      	; 0xffa <rf_polling_rx_packet+0x272>
     ffe:	c0 9a       	sbi	0x18, 0	; 24
    1000:	81 e0       	ldi	r24, 0x01	; 1
    1002:	80 93 cc 07 	sts	0x07CC, r24
    1006:	e0 91 c0 07 	lds	r30, 0x07C0
    100a:	f0 91 c1 07 	lds	r31, 0x07C1
    100e:	83 81       	ldd	r24, Z+3	; 0x03
    1010:	84 50       	subi	r24, 0x04	; 4
    1012:	83 83       	std	Z+3, r24	; 0x03
    1014:	c0 98       	cbi	0x18, 0	; 24
    1016:	8f e7       	ldi	r24, 0x7F	; 127
    1018:	8f b9       	out	0x0f, r24	; 15
    101a:	77 9b       	sbis	0x0e, 7	; 14
    101c:	fe cf       	rjmp	.-4      	; 0x101a <rf_polling_rx_packet+0x292>
    101e:	40 e0       	ldi	r20, 0x00	; 0
    1020:	50 e0       	ldi	r21, 0x00	; 0
    1022:	10 c0       	rjmp	.+32     	; 0x1044 <rf_polling_rx_packet+0x2bc>
    1024:	1f b8       	out	0x0f, r1	; 15
    1026:	77 9b       	sbis	0x0e, 7	; 14
    1028:	fe cf       	rjmp	.-4      	; 0x1026 <rf_polling_rx_packet+0x29e>
    102a:	e0 91 c0 07 	lds	r30, 0x07C0
    102e:	f0 91 c1 07 	lds	r31, 0x07C1
    1032:	05 80       	ldd	r0, Z+5	; 0x05
    1034:	f6 81       	ldd	r31, Z+6	; 0x06
    1036:	e0 2d       	mov	r30, r0
    1038:	e6 0f       	add	r30, r22
    103a:	f1 1d       	adc	r31, r1
    103c:	8f b1       	in	r24, 0x0f	; 15
    103e:	80 83       	st	Z, r24
    1040:	4f 5f       	subi	r20, 0xFF	; 255
    1042:	5f 4f       	sbci	r21, 0xFF	; 255
    1044:	64 2f       	mov	r22, r20
    1046:	e0 91 c0 07 	lds	r30, 0x07C0
    104a:	f0 91 c1 07 	lds	r31, 0x07C1
    104e:	24 2f       	mov	r18, r20
    1050:	33 27       	eor	r19, r19
    1052:	83 81       	ldd	r24, Z+3	; 0x03
    1054:	99 27       	eor	r25, r25
    1056:	87 fd       	sbrc	r24, 7
    1058:	90 95       	com	r25
    105a:	28 17       	cp	r18, r24
    105c:	39 07       	cpc	r19, r25
    105e:	14 f3       	brlt	.-60     	; 0x1024 <rf_polling_rx_packet+0x29c>
    1060:	c0 9a       	sbi	0x18, 0	; 24
    1062:	c0 98       	cbi	0x18, 0	; 24
    1064:	8f e7       	ldi	r24, 0x7F	; 127
    1066:	8f b9       	out	0x0f, r24	; 15
    1068:	77 99       	sbic	0x0e, 7	; 14
    106a:	09 c0       	rjmp	.+18     	; 0x107e <rf_polling_rx_packet+0x2f6>
    106c:	fd cf       	rjmp	.-6      	; 0x1068 <rf_polling_rx_packet+0x2e0>
    106e:	77 9b       	sbis	0x0e, 7	; 14
    1070:	fe cf       	rjmp	.-4      	; 0x106e <rf_polling_rx_packet+0x2e6>
    1072:	5f b1       	in	r21, 0x0f	; 15
    1074:	c0 9a       	sbi	0x18, 0	; 24
    1076:	c0 98       	cbi	0x18, 0	; 24
    1078:	8f e7       	ldi	r24, 0x7F	; 127
    107a:	8f b9       	out	0x0f, r24	; 15
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <rf_polling_rx_packet+0x2fa>
    107e:	1f b8       	out	0x0f, r1	; 15
    1080:	f6 cf       	rjmp	.-20     	; 0x106e <rf_polling_rx_packet+0x2e6>
    1082:	77 9b       	sbis	0x0e, 7	; 14
    1084:	fe cf       	rjmp	.-4      	; 0x1082 <rf_polling_rx_packet+0x2fa>
    1086:	fe 01       	movw	r30, r28
    1088:	33 96       	adiw	r30, 0x03	; 3
    108a:	9e 01       	movw	r18, r28
    108c:	2b 5f       	subi	r18, 0xFB	; 251
    108e:	3f 4f       	sbci	r19, 0xFF	; 255
    1090:	1f b8       	out	0x0f, r1	; 15
    1092:	77 9b       	sbis	0x0e, 7	; 14
    1094:	fe cf       	rjmp	.-4      	; 0x1092 <rf_polling_rx_packet+0x30a>
    1096:	8f b1       	in	r24, 0x0f	; 15
    1098:	81 93       	st	Z+, r24
    109a:	e2 17       	cp	r30, r18
    109c:	f3 07       	cpc	r31, r19
    109e:	c1 f7       	brne	.-16     	; 0x1090 <rf_polling_rx_packet+0x308>
    10a0:	c0 9a       	sbi	0x18, 0	; 24
    10a2:	e0 91 c0 07 	lds	r30, 0x07C0
    10a6:	f0 91 c1 07 	lds	r31, 0x07C1
    10aa:	8b 81       	ldd	r24, Y+3	; 0x03
    10ac:	80 87       	std	Z+8, r24	; 0x08
    10ae:	40 e0       	ldi	r20, 0x00	; 0
    10b0:	20 e0       	ldi	r18, 0x00	; 0
    10b2:	30 e0       	ldi	r19, 0x00	; 0
    10b4:	0a c0       	rjmp	.+20     	; 0x10ca <rf_polling_rx_packet+0x342>
    10b6:	e0 91 c0 07 	lds	r30, 0x07C0
    10ba:	f0 91 c1 07 	lds	r31, 0x07C1
    10be:	85 81       	ldd	r24, Z+5	; 0x05
    10c0:	96 81       	ldd	r25, Z+6	; 0x06
    10c2:	a8 0f       	add	r26, r24
    10c4:	b9 1f       	adc	r27, r25
    10c6:	8c 91       	ld	r24, X
    10c8:	48 0f       	add	r20, r24
    10ca:	82 2f       	mov	r24, r18
    10cc:	e0 91 c0 07 	lds	r30, 0x07C0
    10d0:	f0 91 c1 07 	lds	r31, 0x07C1
    10d4:	2f 5f       	subi	r18, 0xFF	; 255
    10d6:	3f 4f       	sbci	r19, 0xFF	; 255
    10d8:	a8 2f       	mov	r26, r24
    10da:	bb 27       	eor	r27, r27
    10dc:	83 81       	ldd	r24, Z+3	; 0x03
    10de:	99 27       	eor	r25, r25
    10e0:	87 fd       	sbrc	r24, 7
    10e2:	90 95       	com	r25
    10e4:	a8 17       	cp	r26, r24
    10e6:	b9 07       	cpc	r27, r25
    10e8:	34 f3       	brlt	.-52     	; 0x10b6 <rf_polling_rx_packet+0x32e>
    10ea:	45 17       	cp	r20, r21
    10ec:	c9 f0       	breq	.+50     	; 0x1120 <__stack+0x21>
    10ee:	c0 98       	cbi	0x18, 0	; 24
    10f0:	8f e7       	ldi	r24, 0x7F	; 127
    10f2:	8f b9       	out	0x0f, r24	; 15
    10f4:	77 9b       	sbis	0x0e, 7	; 14
    10f6:	fe cf       	rjmp	.-4      	; 0x10f4 <rf_polling_rx_packet+0x36c>
    10f8:	1f b8       	out	0x0f, r1	; 15
    10fa:	77 9b       	sbis	0x0e, 7	; 14
    10fc:	fe cf       	rjmp	.-4      	; 0x10fa <rf_polling_rx_packet+0x372>
    10fe:	8f b1       	in	r24, 0x0f	; 15
    1100:	c0 9a       	sbi	0x18, 0	; 24
    1102:	c0 98       	cbi	0x18, 0	; 24
    1104:	88 e0       	ldi	r24, 0x08	; 8
    1106:	8f b9       	out	0x0f, r24	; 15
    1108:	77 9b       	sbis	0x0e, 7	; 14
    110a:	fe cf       	rjmp	.-4      	; 0x1108 <__stack+0x9>
    110c:	c0 9a       	sbi	0x18, 0	; 24
    110e:	c0 98       	cbi	0x18, 0	; 24
    1110:	88 e0       	ldi	r24, 0x08	; 8
    1112:	8f b9       	out	0x0f, r24	; 15
    1114:	77 9b       	sbis	0x0e, 7	; 14
    1116:	fe cf       	rjmp	.-4      	; 0x1114 <__stack+0x15>
    1118:	c0 9a       	sbi	0x18, 0	; 24
    111a:	8c ef       	ldi	r24, 0xFC	; 252
    111c:	9f ef       	ldi	r25, 0xFF	; 255
    111e:	23 c0       	rjmp	.+70     	; 0x1166 <__stack+0x67>
    1120:	8c 81       	ldd	r24, Y+4	; 0x04
    1122:	87 ff       	sbrs	r24, 7
    1124:	08 c0       	rjmp	.+16     	; 0x1136 <__stack+0x37>
    1126:	80 91 d1 07 	lds	r24, 0x07D1
    112a:	8f 5f       	subi	r24, 0xFF	; 255
    112c:	80 93 d1 07 	sts	0x07D1, r24
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	18 c0       	rjmp	.+48     	; 0x1166 <__stack+0x67>
    1136:	c0 98       	cbi	0x18, 0	; 24
    1138:	8f e7       	ldi	r24, 0x7F	; 127
    113a:	8f b9       	out	0x0f, r24	; 15
    113c:	77 9b       	sbis	0x0e, 7	; 14
    113e:	fe cf       	rjmp	.-4      	; 0x113c <__stack+0x3d>
    1140:	1f b8       	out	0x0f, r1	; 15
    1142:	77 9b       	sbis	0x0e, 7	; 14
    1144:	fe cf       	rjmp	.-4      	; 0x1142 <__stack+0x43>
    1146:	8f b1       	in	r24, 0x0f	; 15
    1148:	c0 9a       	sbi	0x18, 0	; 24
    114a:	c0 98       	cbi	0x18, 0	; 24
    114c:	88 e0       	ldi	r24, 0x08	; 8
    114e:	8f b9       	out	0x0f, r24	; 15
    1150:	77 9b       	sbis	0x0e, 7	; 14
    1152:	fe cf       	rjmp	.-4      	; 0x1150 <__stack+0x51>
    1154:	c0 9a       	sbi	0x18, 0	; 24
    1156:	c0 98       	cbi	0x18, 0	; 24
    1158:	88 e0       	ldi	r24, 0x08	; 8
    115a:	8f b9       	out	0x0f, r24	; 15
    115c:	77 9b       	sbis	0x0e, 7	; 14
    115e:	fe cf       	rjmp	.-4      	; 0x115c <__stack+0x5d>
    1160:	c0 9a       	sbi	0x18, 0	; 24
    1162:	8b ef       	ldi	r24, 0xFB	; 251
    1164:	9f ef       	ldi	r25, 0xFF	; 255
    1166:	24 96       	adiw	r28, 0x04	; 4
    1168:	0f b6       	in	r0, 0x3f	; 63
    116a:	f8 94       	cli
    116c:	de bf       	out	0x3e, r29	; 62
    116e:	0f be       	out	0x3f, r0	; 63
    1170:	cd bf       	out	0x3d, r28	; 61
    1172:	df 91       	pop	r29
    1174:	cf 91       	pop	r28
    1176:	08 95       	ret

00001178 <rf_rx_packet>:
    1178:	80 91 d1 07 	lds	r24, 0x07D1
    117c:	88 23       	and	r24, r24
    117e:	19 f4       	brne	.+6      	; 0x1186 <rf_rx_packet+0xe>
    1180:	80 e0       	ldi	r24, 0x00	; 0
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	08 95       	ret
    1186:	80 91 d1 07 	lds	r24, 0x07D1
    118a:	10 92 d1 07 	sts	0x07D1, r1
    118e:	99 27       	eor	r25, r25
    1190:	87 fd       	sbrc	r24, 7
    1192:	90 95       	com	r25
    1194:	08 95       	ret

00001196 <rf_flush_rx_fifo>:
    1196:	c0 98       	cbi	0x18, 0	; 24
    1198:	88 e0       	ldi	r24, 0x08	; 8
    119a:	8f b9       	out	0x0f, r24	; 15
    119c:	77 9b       	sbis	0x0e, 7	; 14
    119e:	fe cf       	rjmp	.-4      	; 0x119c <rf_flush_rx_fifo+0x6>
    11a0:	c0 9a       	sbi	0x18, 0	; 24
    11a2:	c0 98       	cbi	0x18, 0	; 24
    11a4:	88 e0       	ldi	r24, 0x08	; 8
    11a6:	8f b9       	out	0x0f, r24	; 15
    11a8:	77 9b       	sbis	0x0e, 7	; 14
    11aa:	fe cf       	rjmp	.-4      	; 0x11a8 <rf_flush_rx_fifo+0x12>
    11ac:	c0 9a       	sbi	0x18, 0	; 24
    11ae:	08 95       	ret

000011b0 <rf_set_cca_thresh>:
    11b0:	99 27       	eor	r25, r25
    11b2:	87 fd       	sbrc	r24, 7
    11b4:	90 95       	com	r25
    11b6:	38 2f       	mov	r19, r24
    11b8:	22 27       	eor	r18, r18
    11ba:	20 68       	ori	r18, 0x80	; 128
    11bc:	c0 98       	cbi	0x18, 0	; 24
    11be:	83 e1       	ldi	r24, 0x13	; 19
    11c0:	8f b9       	out	0x0f, r24	; 15
    11c2:	77 9b       	sbis	0x0e, 7	; 14
    11c4:	fe cf       	rjmp	.-4      	; 0x11c2 <rf_set_cca_thresh+0x12>
    11c6:	83 2f       	mov	r24, r19
    11c8:	99 27       	eor	r25, r25
    11ca:	8f b9       	out	0x0f, r24	; 15
    11cc:	77 9b       	sbis	0x0e, 7	; 14
    11ce:	fe cf       	rjmp	.-4      	; 0x11cc <rf_set_cca_thresh+0x1c>
    11d0:	2f b9       	out	0x0f, r18	; 15
    11d2:	77 9b       	sbis	0x0e, 7	; 14
    11d4:	fe cf       	rjmp	.-4      	; 0x11d2 <rf_set_cca_thresh+0x22>
    11d6:	c0 9a       	sbi	0x18, 0	; 24
    11d8:	08 95       	ret

000011da <rf_test_mode>:
    11da:	c0 98       	cbi	0x18, 0	; 24
    11dc:	86 e0       	ldi	r24, 0x06	; 6
    11de:	8f b9       	out	0x0f, r24	; 15
    11e0:	77 9b       	sbis	0x0e, 7	; 14
    11e2:	fe cf       	rjmp	.-4      	; 0x11e0 <rf_test_mode+0x6>
    11e4:	c0 9a       	sbi	0x18, 0	; 24
    11e6:	c0 98       	cbi	0x18, 0	; 24
    11e8:	82 e1       	ldi	r24, 0x12	; 18
    11ea:	8f b9       	out	0x0f, r24	; 15
    11ec:	77 9b       	sbis	0x0e, 7	; 14
    11ee:	fe cf       	rjmp	.-4      	; 0x11ec <rf_test_mode+0x12>
    11f0:	85 e0       	ldi	r24, 0x05	; 5
    11f2:	8f b9       	out	0x0f, r24	; 15
    11f4:	77 9b       	sbis	0x0e, 7	; 14
    11f6:	fe cf       	rjmp	.-4      	; 0x11f4 <rf_test_mode+0x1a>
    11f8:	88 e0       	ldi	r24, 0x08	; 8
    11fa:	8f b9       	out	0x0f, r24	; 15
    11fc:	77 9b       	sbis	0x0e, 7	; 14
    11fe:	fe cf       	rjmp	.-4      	; 0x11fc <rf_test_mode+0x22>
    1200:	c0 9a       	sbi	0x18, 0	; 24
    1202:	c0 98       	cbi	0x18, 0	; 24
    1204:	8e e2       	ldi	r24, 0x2E	; 46
    1206:	8f b9       	out	0x0f, r24	; 15
    1208:	77 9b       	sbis	0x0e, 7	; 14
    120a:	fe cf       	rjmp	.-4      	; 0x1208 <rf_test_mode+0x2e>
    120c:	88 e1       	ldi	r24, 0x18	; 24
    120e:	8f b9       	out	0x0f, r24	; 15
    1210:	77 9b       	sbis	0x0e, 7	; 14
    1212:	fe cf       	rjmp	.-4      	; 0x1210 <rf_test_mode+0x36>
    1214:	1f b8       	out	0x0f, r1	; 15
    1216:	77 9b       	sbis	0x0e, 7	; 14
    1218:	fe cf       	rjmp	.-4      	; 0x1216 <rf_test_mode+0x3c>
    121a:	c0 9a       	sbi	0x18, 0	; 24
    121c:	0e 94 cb 08 	call	0x1196	; 0x1196 <rf_flush_rx_fifo>
    1220:	08 95       	ret

00001222 <rf_data_mode>:
    1222:	c0 98       	cbi	0x18, 0	; 24
    1224:	86 e0       	ldi	r24, 0x06	; 6
    1226:	8f b9       	out	0x0f, r24	; 15
    1228:	77 9b       	sbis	0x0e, 7	; 14
    122a:	fe cf       	rjmp	.-4      	; 0x1228 <rf_data_mode+0x6>
    122c:	c0 9a       	sbi	0x18, 0	; 24
    122e:	c0 98       	cbi	0x18, 0	; 24
    1230:	82 e1       	ldi	r24, 0x12	; 18
    1232:	8f b9       	out	0x0f, r24	; 15
    1234:	77 9b       	sbis	0x0e, 7	; 14
    1236:	fe cf       	rjmp	.-4      	; 0x1234 <rf_data_mode+0x12>
    1238:	85 e0       	ldi	r24, 0x05	; 5
    123a:	8f b9       	out	0x0f, r24	; 15
    123c:	77 9b       	sbis	0x0e, 7	; 14
    123e:	fe cf       	rjmp	.-4      	; 0x123c <rf_data_mode+0x1a>
    1240:	1f b8       	out	0x0f, r1	; 15
    1242:	77 9b       	sbis	0x0e, 7	; 14
    1244:	fe cf       	rjmp	.-4      	; 0x1242 <rf_data_mode+0x20>
    1246:	c0 9a       	sbi	0x18, 0	; 24
    1248:	c0 98       	cbi	0x18, 0	; 24
    124a:	8e e2       	ldi	r24, 0x2E	; 46
    124c:	8f b9       	out	0x0f, r24	; 15
    124e:	77 9b       	sbis	0x0e, 7	; 14
    1250:	fe cf       	rjmp	.-4      	; 0x124e <rf_data_mode+0x2c>
    1252:	1f b8       	out	0x0f, r1	; 15
    1254:	77 9b       	sbis	0x0e, 7	; 14
    1256:	fe cf       	rjmp	.-4      	; 0x1254 <rf_data_mode+0x32>
    1258:	1f b8       	out	0x0f, r1	; 15
    125a:	77 9b       	sbis	0x0e, 7	; 14
    125c:	fe cf       	rjmp	.-4      	; 0x125a <rf_data_mode+0x38>
    125e:	c0 9a       	sbi	0x18, 0	; 24
    1260:	0e 94 cb 08 	call	0x1196	; 0x1196 <rf_flush_rx_fifo>
    1264:	08 95       	ret

00001266 <rf_carrier_on>:
    1266:	c0 98       	cbi	0x18, 0	; 24
    1268:	84 e0       	ldi	r24, 0x04	; 4
    126a:	8f b9       	out	0x0f, r24	; 15
    126c:	77 9b       	sbis	0x0e, 7	; 14
    126e:	fe cf       	rjmp	.-4      	; 0x126c <rf_carrier_on+0x6>
    1270:	c0 9a       	sbi	0x18, 0	; 24
    1272:	08 95       	ret

00001274 <rf_carrier_off>:
    1274:	c0 98       	cbi	0x18, 0	; 24
    1276:	86 e0       	ldi	r24, 0x06	; 6
    1278:	8f b9       	out	0x0f, r24	; 15
    127a:	77 9b       	sbis	0x0e, 7	; 14
    127c:	fe cf       	rjmp	.-4      	; 0x127a <rf_carrier_off+0x6>
    127e:	c0 9a       	sbi	0x18, 0	; 24
    1280:	08 95       	ret

00001282 <rf_tx_packet>:
    1282:	ef 92       	push	r14
    1284:	ff 92       	push	r15
    1286:	0f 93       	push	r16
    1288:	1f 93       	push	r17
    128a:	cf 93       	push	r28
    128c:	df 93       	push	r29
    128e:	cd b7       	in	r28, 0x3d	; 61
    1290:	de b7       	in	r29, 0x3e	; 62
    1292:	22 97       	sbiw	r28, 0x02	; 2
    1294:	0f b6       	in	r0, 0x3f	; 63
    1296:	f8 94       	cli
    1298:	de bf       	out	0x3e, r29	; 62
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	cd bf       	out	0x3d, r28	; 61
    129e:	dc 01       	movw	r26, r24
    12a0:	50 91 bd 07 	lds	r21, 0x07BD
    12a4:	55 23       	and	r21, r21
    12a6:	31 f0       	breq	.+12     	; 0x12b4 <rf_tx_packet+0x32>
    12a8:	c0 98       	cbi	0x18, 0	; 24
    12aa:	8d e0       	ldi	r24, 0x0D	; 13
    12ac:	8f b9       	out	0x0f, r24	; 15
    12ae:	77 9b       	sbis	0x0e, 7	; 14
    12b0:	fe cf       	rjmp	.-4      	; 0x12ae <rf_tx_packet+0x2c>
    12b2:	c0 9a       	sbi	0x18, 0	; 24
    12b4:	fd 01       	movw	r30, r26
    12b6:	42 81       	ldd	r20, Z+2	; 0x02
    12b8:	64 2f       	mov	r22, r20
    12ba:	77 27       	eor	r23, r23
    12bc:	67 fd       	sbrc	r22, 7
    12be:	70 95       	com	r23
    12c0:	10 e0       	ldi	r17, 0x00	; 0
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	08 c0       	rjmp	.+16     	; 0x12d8 <rf_tx_packet+0x56>
    12c8:	fd 01       	movw	r30, r26
    12ca:	83 81       	ldd	r24, Z+3	; 0x03
    12cc:	94 81       	ldd	r25, Z+4	; 0x04
    12ce:	e8 0e       	add	r14, r24
    12d0:	f9 1e       	adc	r15, r25
    12d2:	f7 01       	movw	r30, r14
    12d4:	80 81       	ld	r24, Z
    12d6:	18 0f       	add	r17, r24
    12d8:	82 2f       	mov	r24, r18
    12da:	2f 5f       	subi	r18, 0xFF	; 255
    12dc:	3f 4f       	sbci	r19, 0xFF	; 255
    12de:	e8 2e       	mov	r14, r24
    12e0:	ff 24       	eor	r15, r15
    12e2:	e6 16       	cp	r14, r22
    12e4:	f7 06       	cpc	r15, r23
    12e6:	84 f3       	brlt	.-32     	; 0x12c8 <rf_tx_packet+0x46>
    12e8:	94 2f       	mov	r25, r20
    12ea:	94 5f       	subi	r25, 0xF4	; 244
    12ec:	51 11       	cpse	r21, r1
    12ee:	9c 5f       	subi	r25, 0xFC	; 252
    12f0:	0e 99       	sbic	0x01, 6	; 1
    12f2:	fe cf       	rjmp	.-4      	; 0x12f0 <rf_tx_packet+0x6e>
    12f4:	84 99       	sbic	0x10, 4	; 16
    12f6:	fc cf       	rjmp	.-8      	; 0x12f0 <rf_tx_packet+0x6e>
    12f8:	f8 94       	cli
    12fa:	c0 98       	cbi	0x18, 0	; 24
    12fc:	89 e0       	ldi	r24, 0x09	; 9
    12fe:	8f b9       	out	0x0f, r24	; 15
    1300:	77 9b       	sbis	0x0e, 7	; 14
    1302:	fe cf       	rjmp	.-4      	; 0x1300 <rf_tx_packet+0x7e>
    1304:	c0 9a       	sbi	0x18, 0	; 24
    1306:	c0 98       	cbi	0x18, 0	; 24
    1308:	89 e0       	ldi	r24, 0x09	; 9
    130a:	8f b9       	out	0x0f, r24	; 15
    130c:	77 9b       	sbis	0x0e, 7	; 14
    130e:	fe cf       	rjmp	.-4      	; 0x130c <rf_tx_packet+0x8a>
    1310:	c0 9a       	sbi	0x18, 0	; 24
    1312:	c0 98       	cbi	0x18, 0	; 24
    1314:	8e e3       	ldi	r24, 0x3E	; 62
    1316:	8f b9       	out	0x0f, r24	; 15
    1318:	77 99       	sbic	0x0e, 7	; 14
    131a:	04 c0       	rjmp	.+8      	; 0x1324 <rf_tx_packet+0xa2>
    131c:	fd cf       	rjmp	.-6      	; 0x1318 <rf_tx_packet+0x96>
    131e:	77 99       	sbic	0x0e, 7	; 14
    1320:	10 c1       	rjmp	.+544    	; 0x1542 <rf_tx_packet+0x2c0>
    1322:	fd cf       	rjmp	.-6      	; 0x131e <rf_tx_packet+0x9c>
    1324:	9f b9       	out	0x0f, r25	; 15
    1326:	fb cf       	rjmp	.-10     	; 0x131e <rf_tx_packet+0x9c>
    1328:	81 e6       	ldi	r24, 0x61	; 97
    132a:	98 e8       	ldi	r25, 0x88	; 136
    132c:	9a 83       	std	Y+2, r25	; 0x02
    132e:	89 83       	std	Y+1, r24	; 0x01
    1330:	55 23       	and	r21, r21
    1332:	29 f0       	breq	.+10     	; 0x133e <rf_tx_packet+0xbc>
    1334:	89 81       	ldd	r24, Y+1	; 0x01
    1336:	9a 81       	ldd	r25, Y+2	; 0x02
    1338:	88 60       	ori	r24, 0x08	; 8
    133a:	9a 83       	std	Y+2, r25	; 0x02
    133c:	89 83       	std	Y+1, r24	; 0x01
    133e:	c0 98       	cbi	0x18, 0	; 24
    1340:	8e e3       	ldi	r24, 0x3E	; 62
    1342:	8f b9       	out	0x0f, r24	; 15
    1344:	77 9b       	sbis	0x0e, 7	; 14
    1346:	fe cf       	rjmp	.-4      	; 0x1344 <rf_tx_packet+0xc2>
    1348:	fe 01       	movw	r30, r28
    134a:	31 96       	adiw	r30, 0x01	; 1
    134c:	9e 01       	movw	r18, r28
    134e:	2d 5f       	subi	r18, 0xFD	; 253
    1350:	3f 4f       	sbci	r19, 0xFF	; 255
    1352:	80 81       	ld	r24, Z
    1354:	8f b9       	out	0x0f, r24	; 15
    1356:	77 9b       	sbis	0x0e, 7	; 14
    1358:	fe cf       	rjmp	.-4      	; 0x1356 <rf_tx_packet+0xd4>
    135a:	31 96       	adiw	r30, 0x01	; 1
    135c:	e2 17       	cp	r30, r18
    135e:	f3 07       	cpc	r31, r19
    1360:	c1 f7       	brne	.-16     	; 0x1352 <rf_tx_packet+0xd0>
    1362:	c0 9a       	sbi	0x18, 0	; 24
    1364:	c0 98       	cbi	0x18, 0	; 24
    1366:	8e e3       	ldi	r24, 0x3E	; 62
    1368:	8f b9       	out	0x0f, r24	; 15
    136a:	77 99       	sbic	0x0e, 7	; 14
    136c:	04 c0       	rjmp	.+8      	; 0x1376 <rf_tx_packet+0xf4>
    136e:	fd cf       	rjmp	.-6      	; 0x136a <rf_tx_packet+0xe8>
    1370:	77 99       	sbic	0x0e, 7	; 14
    1372:	f2 c0       	rjmp	.+484    	; 0x1558 <rf_tx_packet+0x2d6>
    1374:	fd cf       	rjmp	.-6      	; 0x1370 <rf_tx_packet+0xee>
    1376:	80 91 c2 07 	lds	r24, 0x07C2
    137a:	8f b9       	out	0x0f, r24	; 15
    137c:	f9 cf       	rjmp	.-14     	; 0x1370 <rf_tx_packet+0xee>
    137e:	77 9b       	sbis	0x0e, 7	; 14
    1380:	fe cf       	rjmp	.-4      	; 0x137e <rf_tx_packet+0xfc>
    1382:	20 e0       	ldi	r18, 0x00	; 0
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	f9 01       	movw	r30, r18
    1388:	ec 53       	subi	r30, 0x3C	; 60
    138a:	f8 4f       	sbci	r31, 0xF8	; 248
    138c:	80 81       	ld	r24, Z
    138e:	8f b9       	out	0x0f, r24	; 15
    1390:	77 9b       	sbis	0x0e, 7	; 14
    1392:	fe cf       	rjmp	.-4      	; 0x1390 <rf_tx_packet+0x10e>
    1394:	2f 5f       	subi	r18, 0xFF	; 255
    1396:	3f 4f       	sbci	r19, 0xFF	; 255
    1398:	22 30       	cpi	r18, 0x02	; 2
    139a:	31 05       	cpc	r19, r1
    139c:	a1 f7       	brne	.-24     	; 0x1386 <rf_tx_packet+0x104>
    139e:	c0 9a       	sbi	0x18, 0	; 24
    13a0:	c0 98       	cbi	0x18, 0	; 24
    13a2:	8e e3       	ldi	r24, 0x3E	; 62
    13a4:	8f b9       	out	0x0f, r24	; 15
    13a6:	77 9b       	sbis	0x0e, 7	; 14
    13a8:	fe cf       	rjmp	.-4      	; 0x13a6 <rf_tx_packet+0x124>
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	fd 01       	movw	r30, r26
    13b0:	e2 0f       	add	r30, r18
    13b2:	f3 1f       	adc	r31, r19
    13b4:	80 81       	ld	r24, Z
    13b6:	8f b9       	out	0x0f, r24	; 15
    13b8:	77 9b       	sbis	0x0e, 7	; 14
    13ba:	fe cf       	rjmp	.-4      	; 0x13b8 <rf_tx_packet+0x136>
    13bc:	2f 5f       	subi	r18, 0xFF	; 255
    13be:	3f 4f       	sbci	r19, 0xFF	; 255
    13c0:	22 30       	cpi	r18, 0x02	; 2
    13c2:	31 05       	cpc	r19, r1
    13c4:	a1 f7       	brne	.-24     	; 0x13ae <rf_tx_packet+0x12c>
    13c6:	c0 9a       	sbi	0x18, 0	; 24
    13c8:	c0 98       	cbi	0x18, 0	; 24
    13ca:	8e e3       	ldi	r24, 0x3E	; 62
    13cc:	8f b9       	out	0x0f, r24	; 15
    13ce:	77 9b       	sbis	0x0e, 7	; 14
    13d0:	fe cf       	rjmp	.-4      	; 0x13ce <rf_tx_packet+0x14c>
    13d2:	20 e0       	ldi	r18, 0x00	; 0
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	f9 01       	movw	r30, r18
    13d8:	ea 53       	subi	r30, 0x3A	; 58
    13da:	f8 4f       	sbci	r31, 0xF8	; 248
    13dc:	80 81       	ld	r24, Z
    13de:	8f b9       	out	0x0f, r24	; 15
    13e0:	77 9b       	sbis	0x0e, 7	; 14
    13e2:	fe cf       	rjmp	.-4      	; 0x13e0 <rf_tx_packet+0x15e>
    13e4:	2f 5f       	subi	r18, 0xFF	; 255
    13e6:	3f 4f       	sbci	r19, 0xFF	; 255
    13e8:	22 30       	cpi	r18, 0x02	; 2
    13ea:	31 05       	cpc	r19, r1
    13ec:	a1 f7       	brne	.-24     	; 0x13d6 <rf_tx_packet+0x154>
    13ee:	c0 9a       	sbi	0x18, 0	; 24
    13f0:	55 23       	and	r21, r21
    13f2:	89 f0       	breq	.+34     	; 0x1416 <rf_tx_packet+0x194>
    13f4:	c0 98       	cbi	0x18, 0	; 24
    13f6:	8e e3       	ldi	r24, 0x3E	; 62
    13f8:	8f b9       	out	0x0f, r24	; 15
    13fa:	77 9b       	sbis	0x0e, 7	; 14
    13fc:	fe cf       	rjmp	.-4      	; 0x13fa <rf_tx_packet+0x178>
    13fe:	ed ec       	ldi	r30, 0xCD	; 205
    1400:	f7 e0       	ldi	r31, 0x07	; 7
    1402:	80 81       	ld	r24, Z
    1404:	8f b9       	out	0x0f, r24	; 15
    1406:	77 9b       	sbis	0x0e, 7	; 14
    1408:	fe cf       	rjmp	.-4      	; 0x1406 <rf_tx_packet+0x184>
    140a:	31 96       	adiw	r30, 0x01	; 1
    140c:	87 e0       	ldi	r24, 0x07	; 7
    140e:	e1 3d       	cpi	r30, 0xD1	; 209
    1410:	f8 07       	cpc	r31, r24
    1412:	b9 f7       	brne	.-18     	; 0x1402 <rf_tx_packet+0x180>
    1414:	c0 9a       	sbi	0x18, 0	; 24
    1416:	c0 98       	cbi	0x18, 0	; 24
    1418:	8e e3       	ldi	r24, 0x3E	; 62
    141a:	8f b9       	out	0x0f, r24	; 15
    141c:	77 9b       	sbis	0x0e, 7	; 14
    141e:	fe cf       	rjmp	.-4      	; 0x141c <rf_tx_packet+0x19a>
    1420:	20 e0       	ldi	r18, 0x00	; 0
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	0c c0       	rjmp	.+24     	; 0x143e <rf_tx_packet+0x1bc>
    1426:	fd 01       	movw	r30, r26
    1428:	83 81       	ldd	r24, Z+3	; 0x03
    142a:	94 81       	ldd	r25, Z+4	; 0x04
    142c:	48 0f       	add	r20, r24
    142e:	59 1f       	adc	r21, r25
    1430:	fa 01       	movw	r30, r20
    1432:	80 81       	ld	r24, Z
    1434:	8f b9       	out	0x0f, r24	; 15
    1436:	77 9b       	sbis	0x0e, 7	; 14
    1438:	fe cf       	rjmp	.-4      	; 0x1436 <rf_tx_packet+0x1b4>
    143a:	2f 5f       	subi	r18, 0xFF	; 255
    143c:	3f 4f       	sbci	r19, 0xFF	; 255
    143e:	42 2f       	mov	r20, r18
    1440:	55 27       	eor	r21, r21
    1442:	46 17       	cp	r20, r22
    1444:	57 07       	cpc	r21, r23
    1446:	7c f3       	brlt	.-34     	; 0x1426 <rf_tx_packet+0x1a4>
    1448:	c0 9a       	sbi	0x18, 0	; 24
    144a:	c0 98       	cbi	0x18, 0	; 24
    144c:	8e e3       	ldi	r24, 0x3E	; 62
    144e:	8f b9       	out	0x0f, r24	; 15
    1450:	77 99       	sbic	0x0e, 7	; 14
    1452:	04 c0       	rjmp	.+8      	; 0x145c <rf_tx_packet+0x1da>
    1454:	fd cf       	rjmp	.-6      	; 0x1450 <rf_tx_packet+0x1ce>
    1456:	77 99       	sbic	0x0e, 7	; 14
    1458:	84 c0       	rjmp	.+264    	; 0x1562 <rf_tx_packet+0x2e0>
    145a:	fd cf       	rjmp	.-6      	; 0x1456 <rf_tx_packet+0x1d4>
    145c:	1f b9       	out	0x0f, r17	; 15
    145e:	fb cf       	rjmp	.-10     	; 0x1456 <rf_tx_packet+0x1d4>
    1460:	80 91 c8 07 	lds	r24, 0x07C8
    1464:	88 23       	and	r24, r24
    1466:	31 f4       	brne	.+12     	; 0x1474 <rf_tx_packet+0x1f2>
    1468:	c0 98       	cbi	0x18, 0	; 24
    146a:	83 e0       	ldi	r24, 0x03	; 3
    146c:	8f b9       	out	0x0f, r24	; 15
    146e:	77 9b       	sbis	0x0e, 7	; 14
    1470:	fe cf       	rjmp	.-4      	; 0x146e <rf_tx_packet+0x1ec>
    1472:	c0 9a       	sbi	0x18, 0	; 24
    1474:	c0 98       	cbi	0x18, 0	; 24
    1476:	1f b8       	out	0x0f, r1	; 15
    1478:	77 9b       	sbis	0x0e, 7	; 14
    147a:	fe cf       	rjmp	.-4      	; 0x1478 <rf_tx_packet+0x1f6>
    147c:	8f b1       	in	r24, 0x0f	; 15
    147e:	c0 9a       	sbi	0x18, 0	; 24
    1480:	81 ff       	sbrs	r24, 1
    1482:	f8 cf       	rjmp	.-16     	; 0x1474 <rf_tx_packet+0x1f2>
    1484:	00 e0       	ldi	r16, 0x00	; 0
    1486:	c0 98       	cbi	0x18, 0	; 24
    1488:	85 e0       	ldi	r24, 0x05	; 5
    148a:	8f b9       	out	0x0f, r24	; 15
    148c:	77 9b       	sbis	0x0e, 7	; 14
    148e:	fe cf       	rjmp	.-4      	; 0x148c <rf_tx_packet+0x20a>
    1490:	c0 9a       	sbi	0x18, 0	; 24
    1492:	c0 98       	cbi	0x18, 0	; 24
    1494:	1f b8       	out	0x0f, r1	; 15
    1496:	77 9b       	sbis	0x0e, 7	; 14
    1498:	fe cf       	rjmp	.-4      	; 0x1496 <rf_tx_packet+0x214>
    149a:	1f b1       	in	r17, 0x0f	; 15
    149c:	c0 9a       	sbi	0x18, 0	; 24
    149e:	0f 5f       	subi	r16, 0xFF	; 255
    14a0:	05 36       	cpi	r16, 0x65	; 101
    14a2:	51 f4       	brne	.+20     	; 0x14b8 <rf_tx_packet+0x236>
    14a4:	78 94       	sei
    14a6:	80 91 bb 07 	lds	r24, 0x07BB
    14aa:	90 91 bc 07 	lds	r25, 0x07BC
    14ae:	0e 94 27 1a 	call	0x344e	; 0x344e <nrk_sem_post>
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	5c c0       	rjmp	.+184    	; 0x1570 <rf_tx_packet+0x2ee>
    14b8:	84 e6       	ldi	r24, 0x64	; 100
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	0e 94 aa 12 	call	0x2554	; 0x2554 <halWait>
    14c0:	13 fd       	sbrc	r17, 3
    14c2:	07 c0       	rjmp	.+14     	; 0x14d2 <rf_tx_packet+0x250>
    14c4:	e0 cf       	rjmp	.-64     	; 0x1486 <rf_tx_packet+0x204>
    14c6:	c0 98       	cbi	0x18, 0	; 24
    14c8:	84 e0       	ldi	r24, 0x04	; 4
    14ca:	8f b9       	out	0x0f, r24	; 15
    14cc:	77 9b       	sbis	0x0e, 7	; 14
    14ce:	fe cf       	rjmp	.-4      	; 0x14cc <rf_tx_packet+0x24a>
    14d0:	c0 9a       	sbi	0x18, 0	; 24
    14d2:	78 94       	sei
    14d4:	84 9b       	sbis	0x10, 4	; 16
    14d6:	fe cf       	rjmp	.-4      	; 0x14d4 <rf_tx_packet+0x252>
    14d8:	84 99       	sbic	0x10, 4	; 16
    14da:	fe cf       	rjmp	.-4      	; 0x14d8 <rf_tx_packet+0x256>
    14dc:	80 91 cb 07 	lds	r24, 0x07CB
    14e0:	88 23       	and	r24, r24
    14e2:	81 f0       	breq	.+32     	; 0x1504 <rf_tx_packet+0x282>
    14e4:	84 ea       	ldi	r24, 0xA4	; 164
    14e6:	92 e0       	ldi	r25, 0x02	; 2
    14e8:	0e 94 aa 12 	call	0x2554	; 0x2554 <halWait>
    14ec:	b7 9b       	sbis	0x16, 7	; 22
    14ee:	0c c0       	rjmp	.+24     	; 0x1508 <rf_tx_packet+0x286>
    14f0:	c0 98       	cbi	0x18, 0	; 24
    14f2:	8f e7       	ldi	r24, 0x7F	; 127
    14f4:	8f b9       	out	0x0f, r24	; 15
    14f6:	77 9b       	sbis	0x0e, 7	; 14
    14f8:	fe cf       	rjmp	.-4      	; 0x14f6 <rf_tx_packet+0x274>
    14fa:	1f b8       	out	0x0f, r1	; 15
    14fc:	77 9b       	sbis	0x0e, 7	; 14
    14fe:	fe cf       	rjmp	.-4      	; 0x14fc <rf_tx_packet+0x27a>
    1500:	8f b1       	in	r24, 0x0f	; 15
    1502:	c0 9a       	sbi	0x18, 0	; 24
    1504:	91 e0       	ldi	r25, 0x01	; 1
    1506:	0d c0       	rjmp	.+26     	; 0x1522 <rf_tx_packet+0x2a0>
    1508:	c0 98       	cbi	0x18, 0	; 24
    150a:	88 e0       	ldi	r24, 0x08	; 8
    150c:	8f b9       	out	0x0f, r24	; 15
    150e:	77 9b       	sbis	0x0e, 7	; 14
    1510:	fe cf       	rjmp	.-4      	; 0x150e <rf_tx_packet+0x28c>
    1512:	c0 9a       	sbi	0x18, 0	; 24
    1514:	c0 98       	cbi	0x18, 0	; 24
    1516:	88 e0       	ldi	r24, 0x08	; 8
    1518:	8f b9       	out	0x0f, r24	; 15
    151a:	77 9b       	sbis	0x0e, 7	; 14
    151c:	fe cf       	rjmp	.-4      	; 0x151a <rf_tx_packet+0x298>
    151e:	c0 9a       	sbi	0x18, 0	; 24
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	f8 94       	cli
    1524:	c0 98       	cbi	0x18, 0	; 24
    1526:	86 e0       	ldi	r24, 0x06	; 6
    1528:	8f b9       	out	0x0f, r24	; 15
    152a:	77 9b       	sbis	0x0e, 7	; 14
    152c:	fe cf       	rjmp	.-4      	; 0x152a <rf_tx_packet+0x2a8>
    152e:	c0 9a       	sbi	0x18, 0	; 24
    1530:	78 94       	sei
    1532:	80 91 c2 07 	lds	r24, 0x07C2
    1536:	8f 5f       	subi	r24, 0xFF	; 255
    1538:	80 93 c2 07 	sts	0x07C2, r24
    153c:	89 2f       	mov	r24, r25
    153e:	99 27       	eor	r25, r25
    1540:	17 c0       	rjmp	.+46     	; 0x1570 <rf_tx_packet+0x2ee>
    1542:	c0 9a       	sbi	0x18, 0	; 24
    1544:	81 e4       	ldi	r24, 0x41	; 65
    1546:	98 e8       	ldi	r25, 0x88	; 136
    1548:	9a 83       	std	Y+2, r25	; 0x02
    154a:	89 83       	std	Y+1, r24	; 0x01
    154c:	80 91 cb 07 	lds	r24, 0x07CB
    1550:	88 23       	and	r24, r24
    1552:	09 f0       	breq	.+2      	; 0x1556 <rf_tx_packet+0x2d4>
    1554:	e9 ce       	rjmp	.-558    	; 0x1328 <rf_tx_packet+0xa6>
    1556:	ec ce       	rjmp	.-552    	; 0x1330 <rf_tx_packet+0xae>
    1558:	c0 9a       	sbi	0x18, 0	; 24
    155a:	c0 98       	cbi	0x18, 0	; 24
    155c:	8e e3       	ldi	r24, 0x3E	; 62
    155e:	8f b9       	out	0x0f, r24	; 15
    1560:	0e cf       	rjmp	.-484    	; 0x137e <rf_tx_packet+0xfc>
    1562:	c0 9a       	sbi	0x18, 0	; 24
    1564:	fd 01       	movw	r30, r26
    1566:	85 81       	ldd	r24, Z+5	; 0x05
    1568:	88 23       	and	r24, r24
    156a:	09 f0       	breq	.+2      	; 0x156e <rf_tx_packet+0x2ec>
    156c:	79 cf       	rjmp	.-270    	; 0x1460 <rf_tx_packet+0x1de>
    156e:	ab cf       	rjmp	.-170    	; 0x14c6 <rf_tx_packet+0x244>
    1570:	22 96       	adiw	r28, 0x02	; 2
    1572:	0f b6       	in	r0, 0x3f	; 63
    1574:	f8 94       	cli
    1576:	de bf       	out	0x3e, r29	; 62
    1578:	0f be       	out	0x3f, r0	; 63
    157a:	cd bf       	out	0x3d, r28	; 61
    157c:	df 91       	pop	r29
    157e:	cf 91       	pop	r28
    1580:	1f 91       	pop	r17
    1582:	0f 91       	pop	r16
    1584:	ff 90       	pop	r15
    1586:	ef 90       	pop	r14
    1588:	08 95       	ret

0000158a <rf_tx_tdma_packet>:
    158a:	bf 92       	push	r11
    158c:	cf 92       	push	r12
    158e:	df 92       	push	r13
    1590:	ef 92       	push	r14
    1592:	ff 92       	push	r15
    1594:	0f 93       	push	r16
    1596:	1f 93       	push	r17
    1598:	cf 93       	push	r28
    159a:	df 93       	push	r29
    159c:	cd b7       	in	r28, 0x3d	; 61
    159e:	de b7       	in	r29, 0x3e	; 62
    15a0:	22 97       	sbiw	r28, 0x02	; 2
    15a2:	0f b6       	in	r0, 0x3f	; 63
    15a4:	f8 94       	cli
    15a6:	de bf       	out	0x3e, r29	; 62
    15a8:	0f be       	out	0x3f, r0	; 63
    15aa:	cd bf       	out	0x3d, r28	; 61
    15ac:	8c 01       	movw	r16, r24
    15ae:	6b 01       	movw	r12, r22
    15b0:	7a 01       	movw	r14, r20
    15b2:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    15b6:	c0 98       	cbi	0x18, 0	; 24
    15b8:	88 e0       	ldi	r24, 0x08	; 8
    15ba:	8f b9       	out	0x0f, r24	; 15
    15bc:	77 9b       	sbis	0x0e, 7	; 14
    15be:	fe cf       	rjmp	.-4      	; 0x15bc <rf_tx_tdma_packet+0x32>
    15c0:	c0 9a       	sbi	0x18, 0	; 24
    15c2:	c0 98       	cbi	0x18, 0	; 24
    15c4:	88 e0       	ldi	r24, 0x08	; 8
    15c6:	8f b9       	out	0x0f, r24	; 15
    15c8:	77 9b       	sbis	0x0e, 7	; 14
    15ca:	fe cf       	rjmp	.-4      	; 0x15c8 <rf_tx_tdma_packet+0x3e>
    15cc:	c0 9a       	sbi	0x18, 0	; 24
    15ce:	0e 99       	sbic	0x01, 6	; 1
    15d0:	fe cf       	rjmp	.-4      	; 0x15ce <rf_tx_tdma_packet+0x44>
    15d2:	84 99       	sbic	0x10, 4	; 16
    15d4:	fc cf       	rjmp	.-8      	; 0x15ce <rf_tx_tdma_packet+0x44>
    15d6:	f8 94       	cli
    15d8:	c0 98       	cbi	0x18, 0	; 24
    15da:	89 e0       	ldi	r24, 0x09	; 9
    15dc:	8f b9       	out	0x0f, r24	; 15
    15de:	77 9b       	sbis	0x0e, 7	; 14
    15e0:	fe cf       	rjmp	.-4      	; 0x15de <rf_tx_tdma_packet+0x54>
    15e2:	c0 9a       	sbi	0x18, 0	; 24
    15e4:	c0 98       	cbi	0x18, 0	; 24
    15e6:	89 e0       	ldi	r24, 0x09	; 9
    15e8:	8f b9       	out	0x0f, r24	; 15
    15ea:	77 9b       	sbis	0x0e, 7	; 14
    15ec:	fe cf       	rjmp	.-4      	; 0x15ea <rf_tx_tdma_packet+0x60>
    15ee:	c0 9a       	sbi	0x18, 0	; 24
    15f0:	f8 01       	movw	r30, r16
    15f2:	62 81       	ldd	r22, Z+2	; 0x02
    15f4:	46 2f       	mov	r20, r22
    15f6:	55 27       	eor	r21, r21
    15f8:	47 fd       	sbrc	r20, 7
    15fa:	50 95       	com	r21
    15fc:	bb 24       	eor	r11, r11
    15fe:	20 e0       	ldi	r18, 0x00	; 0
    1600:	30 e0       	ldi	r19, 0x00	; 0
    1602:	07 c0       	rjmp	.+14     	; 0x1612 <rf_tx_tdma_packet+0x88>
    1604:	f8 01       	movw	r30, r16
    1606:	83 81       	ldd	r24, Z+3	; 0x03
    1608:	94 81       	ldd	r25, Z+4	; 0x04
    160a:	a8 0f       	add	r26, r24
    160c:	b9 1f       	adc	r27, r25
    160e:	8c 91       	ld	r24, X
    1610:	b8 0e       	add	r11, r24
    1612:	82 2f       	mov	r24, r18
    1614:	2f 5f       	subi	r18, 0xFF	; 255
    1616:	3f 4f       	sbci	r19, 0xFF	; 255
    1618:	a8 2f       	mov	r26, r24
    161a:	bb 27       	eor	r27, r27
    161c:	a4 17       	cp	r26, r20
    161e:	b5 07       	cpc	r27, r21
    1620:	8c f3       	brlt	.-30     	; 0x1604 <rf_tx_tdma_packet+0x7a>
    1622:	96 2f       	mov	r25, r22
    1624:	94 5f       	subi	r25, 0xF4	; 244
    1626:	c0 98       	cbi	0x18, 0	; 24
    1628:	8e e3       	ldi	r24, 0x3E	; 62
    162a:	8f b9       	out	0x0f, r24	; 15
    162c:	77 99       	sbic	0x0e, 7	; 14
    162e:	04 c0       	rjmp	.+8      	; 0x1638 <rf_tx_tdma_packet+0xae>
    1630:	fd cf       	rjmp	.-6      	; 0x162c <rf_tx_tdma_packet+0xa2>
    1632:	77 99       	sbic	0x0e, 7	; 14
    1634:	f8 c0       	rjmp	.+496    	; 0x1826 <rf_tx_tdma_packet+0x29c>
    1636:	fd cf       	rjmp	.-6      	; 0x1632 <rf_tx_tdma_packet+0xa8>
    1638:	9f b9       	out	0x0f, r25	; 15
    163a:	fb cf       	rjmp	.-10     	; 0x1632 <rf_tx_tdma_packet+0xa8>
    163c:	81 e6       	ldi	r24, 0x61	; 97
    163e:	98 e8       	ldi	r25, 0x88	; 136
    1640:	9a 83       	std	Y+2, r25	; 0x02
    1642:	89 83       	std	Y+1, r24	; 0x01
    1644:	c0 98       	cbi	0x18, 0	; 24
    1646:	8e e3       	ldi	r24, 0x3E	; 62
    1648:	8f b9       	out	0x0f, r24	; 15
    164a:	77 9b       	sbis	0x0e, 7	; 14
    164c:	fe cf       	rjmp	.-4      	; 0x164a <rf_tx_tdma_packet+0xc0>
    164e:	fe 01       	movw	r30, r28
    1650:	31 96       	adiw	r30, 0x01	; 1
    1652:	9e 01       	movw	r18, r28
    1654:	2d 5f       	subi	r18, 0xFD	; 253
    1656:	3f 4f       	sbci	r19, 0xFF	; 255
    1658:	80 81       	ld	r24, Z
    165a:	8f b9       	out	0x0f, r24	; 15
    165c:	77 9b       	sbis	0x0e, 7	; 14
    165e:	fe cf       	rjmp	.-4      	; 0x165c <rf_tx_tdma_packet+0xd2>
    1660:	31 96       	adiw	r30, 0x01	; 1
    1662:	e2 17       	cp	r30, r18
    1664:	f3 07       	cpc	r31, r19
    1666:	c1 f7       	brne	.-16     	; 0x1658 <rf_tx_tdma_packet+0xce>
    1668:	c0 9a       	sbi	0x18, 0	; 24
    166a:	c0 98       	cbi	0x18, 0	; 24
    166c:	8e e3       	ldi	r24, 0x3E	; 62
    166e:	8f b9       	out	0x0f, r24	; 15
    1670:	77 99       	sbic	0x0e, 7	; 14
    1672:	04 c0       	rjmp	.+8      	; 0x167c <rf_tx_tdma_packet+0xf2>
    1674:	fd cf       	rjmp	.-6      	; 0x1670 <rf_tx_tdma_packet+0xe6>
    1676:	77 99       	sbic	0x0e, 7	; 14
    1678:	df c0       	rjmp	.+446    	; 0x1838 <rf_tx_tdma_packet+0x2ae>
    167a:	fd cf       	rjmp	.-6      	; 0x1676 <rf_tx_tdma_packet+0xec>
    167c:	80 91 c2 07 	lds	r24, 0x07C2
    1680:	8f b9       	out	0x0f, r24	; 15
    1682:	f9 cf       	rjmp	.-14     	; 0x1676 <rf_tx_tdma_packet+0xec>
    1684:	77 9b       	sbis	0x0e, 7	; 14
    1686:	fe cf       	rjmp	.-4      	; 0x1684 <rf_tx_tdma_packet+0xfa>
    1688:	20 e0       	ldi	r18, 0x00	; 0
    168a:	30 e0       	ldi	r19, 0x00	; 0
    168c:	f9 01       	movw	r30, r18
    168e:	ec 53       	subi	r30, 0x3C	; 60
    1690:	f8 4f       	sbci	r31, 0xF8	; 248
    1692:	80 81       	ld	r24, Z
    1694:	8f b9       	out	0x0f, r24	; 15
    1696:	77 9b       	sbis	0x0e, 7	; 14
    1698:	fe cf       	rjmp	.-4      	; 0x1696 <rf_tx_tdma_packet+0x10c>
    169a:	2f 5f       	subi	r18, 0xFF	; 255
    169c:	3f 4f       	sbci	r19, 0xFF	; 255
    169e:	22 30       	cpi	r18, 0x02	; 2
    16a0:	31 05       	cpc	r19, r1
    16a2:	a1 f7       	brne	.-24     	; 0x168c <rf_tx_tdma_packet+0x102>
    16a4:	c0 9a       	sbi	0x18, 0	; 24
    16a6:	c0 98       	cbi	0x18, 0	; 24
    16a8:	8e e3       	ldi	r24, 0x3E	; 62
    16aa:	8f b9       	out	0x0f, r24	; 15
    16ac:	77 9b       	sbis	0x0e, 7	; 14
    16ae:	fe cf       	rjmp	.-4      	; 0x16ac <rf_tx_tdma_packet+0x122>
    16b0:	20 e0       	ldi	r18, 0x00	; 0
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	f8 01       	movw	r30, r16
    16b6:	e2 0f       	add	r30, r18
    16b8:	f3 1f       	adc	r31, r19
    16ba:	80 81       	ld	r24, Z
    16bc:	8f b9       	out	0x0f, r24	; 15
    16be:	77 9b       	sbis	0x0e, 7	; 14
    16c0:	fe cf       	rjmp	.-4      	; 0x16be <rf_tx_tdma_packet+0x134>
    16c2:	2f 5f       	subi	r18, 0xFF	; 255
    16c4:	3f 4f       	sbci	r19, 0xFF	; 255
    16c6:	22 30       	cpi	r18, 0x02	; 2
    16c8:	31 05       	cpc	r19, r1
    16ca:	a1 f7       	brne	.-24     	; 0x16b4 <rf_tx_tdma_packet+0x12a>
    16cc:	c0 9a       	sbi	0x18, 0	; 24
    16ce:	c0 98       	cbi	0x18, 0	; 24
    16d0:	8e e3       	ldi	r24, 0x3E	; 62
    16d2:	8f b9       	out	0x0f, r24	; 15
    16d4:	77 9b       	sbis	0x0e, 7	; 14
    16d6:	fe cf       	rjmp	.-4      	; 0x16d4 <rf_tx_tdma_packet+0x14a>
    16d8:	20 e0       	ldi	r18, 0x00	; 0
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	f9 01       	movw	r30, r18
    16de:	ea 53       	subi	r30, 0x3A	; 58
    16e0:	f8 4f       	sbci	r31, 0xF8	; 248
    16e2:	80 81       	ld	r24, Z
    16e4:	8f b9       	out	0x0f, r24	; 15
    16e6:	77 9b       	sbis	0x0e, 7	; 14
    16e8:	fe cf       	rjmp	.-4      	; 0x16e6 <rf_tx_tdma_packet+0x15c>
    16ea:	2f 5f       	subi	r18, 0xFF	; 255
    16ec:	3f 4f       	sbci	r19, 0xFF	; 255
    16ee:	22 30       	cpi	r18, 0x02	; 2
    16f0:	31 05       	cpc	r19, r1
    16f2:	a1 f7       	brne	.-24     	; 0x16dc <rf_tx_tdma_packet+0x152>
    16f4:	c0 9a       	sbi	0x18, 0	; 24
    16f6:	b7 01       	movw	r22, r14
    16f8:	c6 01       	movw	r24, r12
    16fa:	0e 94 7c 27 	call	0x4ef8	; 0x4ef8 <nrk_high_speed_timer_wait>
    16fe:	f8 01       	movw	r30, r16
    1700:	85 81       	ldd	r24, Z+5	; 0x05
    1702:	88 23       	and	r24, r24
    1704:	a1 f1       	breq	.+104    	; 0x176e <rf_tx_tdma_packet+0x1e4>
    1706:	80 91 c8 07 	lds	r24, 0x07C8
    170a:	88 23       	and	r24, r24
    170c:	31 f4       	brne	.+12     	; 0x171a <rf_tx_tdma_packet+0x190>
    170e:	c0 98       	cbi	0x18, 0	; 24
    1710:	83 e0       	ldi	r24, 0x03	; 3
    1712:	8f b9       	out	0x0f, r24	; 15
    1714:	77 9b       	sbis	0x0e, 7	; 14
    1716:	fe cf       	rjmp	.-4      	; 0x1714 <rf_tx_tdma_packet+0x18a>
    1718:	c0 9a       	sbi	0x18, 0	; 24
    171a:	c0 98       	cbi	0x18, 0	; 24
    171c:	1f b8       	out	0x0f, r1	; 15
    171e:	77 9b       	sbis	0x0e, 7	; 14
    1720:	fe cf       	rjmp	.-4      	; 0x171e <rf_tx_tdma_packet+0x194>
    1722:	8f b1       	in	r24, 0x0f	; 15
    1724:	c0 9a       	sbi	0x18, 0	; 24
    1726:	81 ff       	sbrs	r24, 1
    1728:	f8 cf       	rjmp	.-16     	; 0x171a <rf_tx_tdma_packet+0x190>
    172a:	ee 24       	eor	r14, r14
    172c:	c0 98       	cbi	0x18, 0	; 24
    172e:	85 e0       	ldi	r24, 0x05	; 5
    1730:	8f b9       	out	0x0f, r24	; 15
    1732:	77 9b       	sbis	0x0e, 7	; 14
    1734:	fe cf       	rjmp	.-4      	; 0x1732 <rf_tx_tdma_packet+0x1a8>
    1736:	c0 9a       	sbi	0x18, 0	; 24
    1738:	c0 98       	cbi	0x18, 0	; 24
    173a:	1f b8       	out	0x0f, r1	; 15
    173c:	77 9b       	sbis	0x0e, 7	; 14
    173e:	fe cf       	rjmp	.-4      	; 0x173c <rf_tx_tdma_packet+0x1b2>
    1740:	ff b0       	in	r15, 0x0f	; 15
    1742:	c0 9a       	sbi	0x18, 0	; 24
    1744:	e3 94       	inc	r14
    1746:	f5 e6       	ldi	r31, 0x65	; 101
    1748:	ef 16       	cp	r14, r31
    174a:	51 f4       	brne	.+20     	; 0x1760 <rf_tx_tdma_packet+0x1d6>
    174c:	78 94       	sei
    174e:	80 91 bb 07 	lds	r24, 0x07BB
    1752:	90 91 bc 07 	lds	r25, 0x07BC
    1756:	0e 94 27 1a 	call	0x344e	; 0x344e <nrk_sem_post>
    175a:	80 e0       	ldi	r24, 0x00	; 0
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	73 c0       	rjmp	.+230    	; 0x1846 <rf_tx_tdma_packet+0x2bc>
    1760:	84 e6       	ldi	r24, 0x64	; 100
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	0e 94 aa 12 	call	0x2554	; 0x2554 <halWait>
    1768:	f3 fc       	sbrc	r15, 3
    176a:	07 c0       	rjmp	.+14     	; 0x177a <rf_tx_tdma_packet+0x1f0>
    176c:	df cf       	rjmp	.-66     	; 0x172c <rf_tx_tdma_packet+0x1a2>
    176e:	c0 98       	cbi	0x18, 0	; 24
    1770:	84 e0       	ldi	r24, 0x04	; 4
    1772:	8f b9       	out	0x0f, r24	; 15
    1774:	77 9b       	sbis	0x0e, 7	; 14
    1776:	fe cf       	rjmp	.-4      	; 0x1774 <rf_tx_tdma_packet+0x1ea>
    1778:	c0 9a       	sbi	0x18, 0	; 24
    177a:	c0 98       	cbi	0x18, 0	; 24
    177c:	8e e3       	ldi	r24, 0x3E	; 62
    177e:	8f b9       	out	0x0f, r24	; 15
    1780:	77 9b       	sbis	0x0e, 7	; 14
    1782:	fe cf       	rjmp	.-4      	; 0x1780 <rf_tx_tdma_packet+0x1f6>
    1784:	f8 01       	movw	r30, r16
    1786:	82 81       	ldd	r24, Z+2	; 0x02
    1788:	48 2f       	mov	r20, r24
    178a:	55 27       	eor	r21, r21
    178c:	47 fd       	sbrc	r20, 7
    178e:	50 95       	com	r21
    1790:	20 e0       	ldi	r18, 0x00	; 0
    1792:	30 e0       	ldi	r19, 0x00	; 0
    1794:	0b c0       	rjmp	.+22     	; 0x17ac <rf_tx_tdma_packet+0x222>
    1796:	f8 01       	movw	r30, r16
    1798:	83 81       	ldd	r24, Z+3	; 0x03
    179a:	94 81       	ldd	r25, Z+4	; 0x04
    179c:	a8 0f       	add	r26, r24
    179e:	b9 1f       	adc	r27, r25
    17a0:	8c 91       	ld	r24, X
    17a2:	8f b9       	out	0x0f, r24	; 15
    17a4:	77 9b       	sbis	0x0e, 7	; 14
    17a6:	fe cf       	rjmp	.-4      	; 0x17a4 <rf_tx_tdma_packet+0x21a>
    17a8:	2f 5f       	subi	r18, 0xFF	; 255
    17aa:	3f 4f       	sbci	r19, 0xFF	; 255
    17ac:	a2 2f       	mov	r26, r18
    17ae:	bb 27       	eor	r27, r27
    17b0:	a4 17       	cp	r26, r20
    17b2:	b5 07       	cpc	r27, r21
    17b4:	84 f3       	brlt	.-32     	; 0x1796 <rf_tx_tdma_packet+0x20c>
    17b6:	c0 9a       	sbi	0x18, 0	; 24
    17b8:	c0 98       	cbi	0x18, 0	; 24
    17ba:	8e e3       	ldi	r24, 0x3E	; 62
    17bc:	8f b9       	out	0x0f, r24	; 15
    17be:	77 99       	sbic	0x0e, 7	; 14
    17c0:	04 c0       	rjmp	.+8      	; 0x17ca <rf_tx_tdma_packet+0x240>
    17c2:	fd cf       	rjmp	.-6      	; 0x17be <rf_tx_tdma_packet+0x234>
    17c4:	77 99       	sbic	0x0e, 7	; 14
    17c6:	3d c0       	rjmp	.+122    	; 0x1842 <rf_tx_tdma_packet+0x2b8>
    17c8:	fd cf       	rjmp	.-6      	; 0x17c4 <rf_tx_tdma_packet+0x23a>
    17ca:	bf b8       	out	0x0f, r11	; 15
    17cc:	fb cf       	rjmp	.-10     	; 0x17c4 <rf_tx_tdma_packet+0x23a>
    17ce:	84 9b       	sbis	0x10, 4	; 16
    17d0:	fe cf       	rjmp	.-4      	; 0x17ce <rf_tx_tdma_packet+0x244>
    17d2:	f8 94       	cli
    17d4:	84 99       	sbic	0x10, 4	; 16
    17d6:	fe cf       	rjmp	.-4      	; 0x17d4 <rf_tx_tdma_packet+0x24a>
    17d8:	c0 98       	cbi	0x18, 0	; 24
    17da:	88 e0       	ldi	r24, 0x08	; 8
    17dc:	8f b9       	out	0x0f, r24	; 15
    17de:	77 9b       	sbis	0x0e, 7	; 14
    17e0:	fe cf       	rjmp	.-4      	; 0x17de <rf_tx_tdma_packet+0x254>
    17e2:	c0 9a       	sbi	0x18, 0	; 24
    17e4:	c0 98       	cbi	0x18, 0	; 24
    17e6:	88 e0       	ldi	r24, 0x08	; 8
    17e8:	8f b9       	out	0x0f, r24	; 15
    17ea:	77 9b       	sbis	0x0e, 7	; 14
    17ec:	fe cf       	rjmp	.-4      	; 0x17ea <rf_tx_tdma_packet+0x260>
    17ee:	c0 9a       	sbi	0x18, 0	; 24
    17f0:	c0 98       	cbi	0x18, 0	; 24
    17f2:	89 e0       	ldi	r24, 0x09	; 9
    17f4:	8f b9       	out	0x0f, r24	; 15
    17f6:	77 9b       	sbis	0x0e, 7	; 14
    17f8:	fe cf       	rjmp	.-4      	; 0x17f6 <rf_tx_tdma_packet+0x26c>
    17fa:	c0 9a       	sbi	0x18, 0	; 24
    17fc:	c0 98       	cbi	0x18, 0	; 24
    17fe:	89 e0       	ldi	r24, 0x09	; 9
    1800:	8f b9       	out	0x0f, r24	; 15
    1802:	77 9b       	sbis	0x0e, 7	; 14
    1804:	fe cf       	rjmp	.-4      	; 0x1802 <rf_tx_tdma_packet+0x278>
    1806:	c0 9a       	sbi	0x18, 0	; 24
    1808:	c0 98       	cbi	0x18, 0	; 24
    180a:	86 e0       	ldi	r24, 0x06	; 6
    180c:	8f b9       	out	0x0f, r24	; 15
    180e:	77 9b       	sbis	0x0e, 7	; 14
    1810:	fe cf       	rjmp	.-4      	; 0x180e <rf_tx_tdma_packet+0x284>
    1812:	c0 9a       	sbi	0x18, 0	; 24
    1814:	78 94       	sei
    1816:	80 91 c2 07 	lds	r24, 0x07C2
    181a:	8f 5f       	subi	r24, 0xFF	; 255
    181c:	80 93 c2 07 	sts	0x07C2, r24
    1820:	81 e0       	ldi	r24, 0x01	; 1
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	10 c0       	rjmp	.+32     	; 0x1846 <rf_tx_tdma_packet+0x2bc>
    1826:	c0 9a       	sbi	0x18, 0	; 24
    1828:	f8 01       	movw	r30, r16
    182a:	86 81       	ldd	r24, Z+6	; 0x06
    182c:	88 23       	and	r24, r24
    182e:	09 f0       	breq	.+2      	; 0x1832 <rf_tx_tdma_packet+0x2a8>
    1830:	05 cf       	rjmp	.-502    	; 0x163c <rf_tx_tdma_packet+0xb2>
    1832:	81 e4       	ldi	r24, 0x41	; 65
    1834:	98 e8       	ldi	r25, 0x88	; 136
    1836:	04 cf       	rjmp	.-504    	; 0x1640 <rf_tx_tdma_packet+0xb6>
    1838:	c0 9a       	sbi	0x18, 0	; 24
    183a:	c0 98       	cbi	0x18, 0	; 24
    183c:	8e e3       	ldi	r24, 0x3E	; 62
    183e:	8f b9       	out	0x0f, r24	; 15
    1840:	21 cf       	rjmp	.-446    	; 0x1684 <rf_tx_tdma_packet+0xfa>
    1842:	c0 9a       	sbi	0x18, 0	; 24
    1844:	c4 cf       	rjmp	.-120    	; 0x17ce <rf_tx_tdma_packet+0x244>
    1846:	22 96       	adiw	r28, 0x02	; 2
    1848:	0f b6       	in	r0, 0x3f	; 63
    184a:	f8 94       	cli
    184c:	de bf       	out	0x3e, r29	; 62
    184e:	0f be       	out	0x3f, r0	; 63
    1850:	cd bf       	out	0x3d, r28	; 61
    1852:	df 91       	pop	r29
    1854:	cf 91       	pop	r28
    1856:	1f 91       	pop	r17
    1858:	0f 91       	pop	r16
    185a:	ff 90       	pop	r15
    185c:	ef 90       	pop	r14
    185e:	df 90       	pop	r13
    1860:	cf 90       	pop	r12
    1862:	bf 90       	pop	r11
    1864:	08 95       	ret

00001866 <rf_addr_decode_set_my_mac>:
    1866:	cf 93       	push	r28
    1868:	df 93       	push	r29
    186a:	cd b7       	in	r28, 0x3d	; 61
    186c:	de b7       	in	r29, 0x3e	; 62
    186e:	22 97       	sbiw	r28, 0x02	; 2
    1870:	0f b6       	in	r0, 0x3f	; 63
    1872:	f8 94       	cli
    1874:	de bf       	out	0x3e, r29	; 62
    1876:	0f be       	out	0x3f, r0	; 63
    1878:	cd bf       	out	0x3d, r28	; 61
    187a:	9a 83       	std	Y+2, r25	; 0x02
    187c:	89 83       	std	Y+1, r24	; 0x01
    187e:	90 93 c7 07 	sts	0x07C7, r25
    1882:	80 93 c6 07 	sts	0x07C6, r24
    1886:	84 ef       	ldi	r24, 0xF4	; 244
    1888:	91 e0       	ldi	r25, 0x01	; 1
    188a:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    188e:	c0 98       	cbi	0x18, 0	; 24
    1890:	8a ee       	ldi	r24, 0xEA	; 234
    1892:	8f b9       	out	0x0f, r24	; 15
    1894:	77 9b       	sbis	0x0e, 7	; 14
    1896:	fe cf       	rjmp	.-4      	; 0x1894 <rf_addr_decode_set_my_mac+0x2e>
    1898:	80 e8       	ldi	r24, 0x80	; 128
    189a:	8f b9       	out	0x0f, r24	; 15
    189c:	77 9b       	sbis	0x0e, 7	; 14
    189e:	fe cf       	rjmp	.-4      	; 0x189c <rf_addr_decode_set_my_mac+0x36>
    18a0:	fe 01       	movw	r30, r28
    18a2:	31 96       	adiw	r30, 0x01	; 1
    18a4:	9e 01       	movw	r18, r28
    18a6:	2d 5f       	subi	r18, 0xFD	; 253
    18a8:	3f 4f       	sbci	r19, 0xFF	; 255
    18aa:	80 81       	ld	r24, Z
    18ac:	8f b9       	out	0x0f, r24	; 15
    18ae:	77 9b       	sbis	0x0e, 7	; 14
    18b0:	fe cf       	rjmp	.-4      	; 0x18ae <rf_addr_decode_set_my_mac+0x48>
    18b2:	31 96       	adiw	r30, 0x01	; 1
    18b4:	e2 17       	cp	r30, r18
    18b6:	f3 07       	cpc	r31, r19
    18b8:	c1 f7       	brne	.-16     	; 0x18aa <rf_addr_decode_set_my_mac+0x44>
    18ba:	c0 9a       	sbi	0x18, 0	; 24
    18bc:	84 ef       	ldi	r24, 0xF4	; 244
    18be:	91 e0       	ldi	r25, 0x01	; 1
    18c0:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    18c4:	22 96       	adiw	r28, 0x02	; 2
    18c6:	0f b6       	in	r0, 0x3f	; 63
    18c8:	f8 94       	cli
    18ca:	de bf       	out	0x3e, r29	; 62
    18cc:	0f be       	out	0x3f, r0	; 63
    18ce:	cd bf       	out	0x3d, r28	; 61
    18d0:	df 91       	pop	r29
    18d2:	cf 91       	pop	r28
    18d4:	08 95       	ret

000018d6 <rf_security_set_key>:
    18d6:	6f 92       	push	r6
    18d8:	7f 92       	push	r7
    18da:	8f 92       	push	r8
    18dc:	9f 92       	push	r9
    18de:	af 92       	push	r10
    18e0:	bf 92       	push	r11
    18e2:	cf 92       	push	r12
    18e4:	df 92       	push	r13
    18e6:	ef 92       	push	r14
    18e8:	ff 92       	push	r15
    18ea:	0f 93       	push	r16
    18ec:	1f 93       	push	r17
    18ee:	cf 93       	push	r28
    18f0:	df 93       	push	r29
    18f2:	cd b7       	in	r28, 0x3d	; 61
    18f4:	de b7       	in	r29, 0x3e	; 62
    18f6:	22 97       	sbiw	r28, 0x02	; 2
    18f8:	0f b6       	in	r0, 0x3f	; 63
    18fa:	f8 94       	cli
    18fc:	de bf       	out	0x3e, r29	; 62
    18fe:	0f be       	out	0x3f, r0	; 63
    1900:	cd bf       	out	0x3d, r28	; 61
    1902:	8c 01       	movw	r16, r24
    1904:	84 e6       	ldi	r24, 0x64	; 100
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    190c:	78 01       	movw	r14, r16
    190e:	c1 2c       	mov	r12, r1
    1910:	b1 e0       	ldi	r27, 0x01	; 1
    1912:	db 2e       	mov	r13, r27
    1914:	3e 01       	movw	r6, r28
    1916:	08 94       	sec
    1918:	61 1c       	adc	r6, r1
    191a:	71 1c       	adc	r7, r1
    191c:	a3 e0       	ldi	r26, 0x03	; 3
    191e:	8a 2e       	mov	r8, r26
    1920:	91 2c       	mov	r9, r1
    1922:	8c 0e       	add	r8, r28
    1924:	9d 1e       	adc	r9, r29
    1926:	f7 01       	movw	r30, r14
    1928:	80 81       	ld	r24, Z
    192a:	21 81       	ldd	r18, Z+1	; 0x01
    192c:	33 27       	eor	r19, r19
    192e:	99 27       	eor	r25, r25
    1930:	98 2f       	mov	r25, r24
    1932:	88 27       	eor	r24, r24
    1934:	28 2b       	or	r18, r24
    1936:	39 2b       	or	r19, r25
    1938:	3a 83       	std	Y+2, r19	; 0x02
    193a:	29 83       	std	Y+1, r18	; 0x01
    193c:	84 e6       	ldi	r24, 0x64	; 100
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    1944:	c0 98       	cbi	0x18, 0	; 24
    1946:	8c 2d       	mov	r24, r12
    1948:	80 68       	ori	r24, 0x80	; 128
    194a:	8f b9       	out	0x0f, r24	; 15
    194c:	77 9b       	sbis	0x0e, 7	; 14
    194e:	fe cf       	rjmp	.-4      	; 0x194c <rf_security_set_key+0x76>
    1950:	c6 01       	movw	r24, r12
    1952:	95 95       	asr	r25
    1954:	87 95       	ror	r24
    1956:	80 7c       	andi	r24, 0xC0	; 192
    1958:	8f b9       	out	0x0f, r24	; 15
    195a:	77 9b       	sbis	0x0e, 7	; 14
    195c:	fe cf       	rjmp	.-4      	; 0x195a <rf_security_set_key+0x84>
    195e:	83 01       	movw	r16, r6
    1960:	53 01       	movw	r10, r6
    1962:	f5 01       	movw	r30, r10
    1964:	80 81       	ld	r24, Z
    1966:	8f b9       	out	0x0f, r24	; 15
    1968:	77 9b       	sbis	0x0e, 7	; 14
    196a:	fe cf       	rjmp	.-4      	; 0x1968 <rf_security_set_key+0x92>
    196c:	08 94       	sec
    196e:	a1 1c       	adc	r10, r1
    1970:	b1 1c       	adc	r11, r1
    1972:	a8 14       	cp	r10, r8
    1974:	b9 04       	cpc	r11, r9
    1976:	a9 f7       	brne	.-22     	; 0x1962 <rf_security_set_key+0x8c>
    1978:	c0 9a       	sbi	0x18, 0	; 24
    197a:	08 94       	sec
    197c:	e1 1c       	adc	r14, r1
    197e:	f1 1c       	adc	r15, r1
    1980:	82 e0       	ldi	r24, 0x02	; 2
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	c8 0e       	add	r12, r24
    1986:	d9 1e       	adc	r13, r25
    1988:	90 e1       	ldi	r25, 0x10	; 16
    198a:	c9 16       	cp	r12, r25
    198c:	91 e0       	ldi	r25, 0x01	; 1
    198e:	d9 06       	cpc	r13, r25
    1990:	51 f6       	brne	.-108    	; 0x1926 <rf_security_set_key+0x50>
    1992:	84 e6       	ldi	r24, 0x64	; 100
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    199a:	20 e1       	ldi	r18, 0x10	; 16
    199c:	31 e0       	ldi	r19, 0x01	; 1
    199e:	40 e4       	ldi	r20, 0x40	; 64
    19a0:	51 e0       	ldi	r21, 0x01	; 1
    19a2:	1a 82       	std	Y+2, r1	; 0x02
    19a4:	19 82       	std	Y+1, r1	; 0x01
    19a6:	c0 98       	cbi	0x18, 0	; 24
    19a8:	84 2f       	mov	r24, r20
    19aa:	80 68       	ori	r24, 0x80	; 128
    19ac:	8f b9       	out	0x0f, r24	; 15
    19ae:	77 9b       	sbis	0x0e, 7	; 14
    19b0:	fe cf       	rjmp	.-4      	; 0x19ae <rf_security_set_key+0xd8>
    19b2:	ca 01       	movw	r24, r20
    19b4:	95 95       	asr	r25
    19b6:	87 95       	ror	r24
    19b8:	80 7c       	andi	r24, 0xC0	; 192
    19ba:	8f b9       	out	0x0f, r24	; 15
    19bc:	77 9b       	sbis	0x0e, 7	; 14
    19be:	fe cf       	rjmp	.-4      	; 0x19bc <rf_security_set_key+0xe6>
    19c0:	f8 01       	movw	r30, r16
    19c2:	80 81       	ld	r24, Z
    19c4:	8f b9       	out	0x0f, r24	; 15
    19c6:	77 9b       	sbis	0x0e, 7	; 14
    19c8:	fe cf       	rjmp	.-4      	; 0x19c6 <rf_security_set_key+0xf0>
    19ca:	31 96       	adiw	r30, 0x01	; 1
    19cc:	ea 15       	cp	r30, r10
    19ce:	fb 05       	cpc	r31, r11
    19d0:	c1 f7       	brne	.-16     	; 0x19c2 <rf_security_set_key+0xec>
    19d2:	c0 9a       	sbi	0x18, 0	; 24
    19d4:	c0 98       	cbi	0x18, 0	; 24
    19d6:	82 2f       	mov	r24, r18
    19d8:	80 68       	ori	r24, 0x80	; 128
    19da:	8f b9       	out	0x0f, r24	; 15
    19dc:	77 9b       	sbis	0x0e, 7	; 14
    19de:	fe cf       	rjmp	.-4      	; 0x19dc <rf_security_set_key+0x106>
    19e0:	c9 01       	movw	r24, r18
    19e2:	95 95       	asr	r25
    19e4:	87 95       	ror	r24
    19e6:	80 7c       	andi	r24, 0xC0	; 192
    19e8:	8f b9       	out	0x0f, r24	; 15
    19ea:	77 9b       	sbis	0x0e, 7	; 14
    19ec:	fe cf       	rjmp	.-4      	; 0x19ea <rf_security_set_key+0x114>
    19ee:	f8 01       	movw	r30, r16
    19f0:	80 81       	ld	r24, Z
    19f2:	8f b9       	out	0x0f, r24	; 15
    19f4:	77 9b       	sbis	0x0e, 7	; 14
    19f6:	fe cf       	rjmp	.-4      	; 0x19f4 <rf_security_set_key+0x11e>
    19f8:	31 96       	adiw	r30, 0x01	; 1
    19fa:	ea 15       	cp	r30, r10
    19fc:	fb 05       	cpc	r31, r11
    19fe:	c1 f7       	brne	.-16     	; 0x19f0 <rf_security_set_key+0x11a>
    1a00:	c0 9a       	sbi	0x18, 0	; 24
    1a02:	2e 5f       	subi	r18, 0xFE	; 254
    1a04:	3f 4f       	sbci	r19, 0xFF	; 255
    1a06:	4e 5f       	subi	r20, 0xFE	; 254
    1a08:	5f 4f       	sbci	r21, 0xFF	; 255
    1a0a:	e1 e0       	ldi	r30, 0x01	; 1
    1a0c:	2e 31       	cpi	r18, 0x1E	; 30
    1a0e:	3e 07       	cpc	r19, r30
    1a10:	41 f6       	brne	.-112    	; 0x19a2 <rf_security_set_key+0xcc>
    1a12:	81 e0       	ldi	r24, 0x01	; 1
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	9a 83       	std	Y+2, r25	; 0x02
    1a18:	89 83       	std	Y+1, r24	; 0x01
    1a1a:	c0 98       	cbi	0x18, 0	; 24
    1a1c:	8e ec       	ldi	r24, 0xCE	; 206
    1a1e:	8f b9       	out	0x0f, r24	; 15
    1a20:	77 9b       	sbis	0x0e, 7	; 14
    1a22:	fe cf       	rjmp	.-4      	; 0x1a20 <rf_security_set_key+0x14a>
    1a24:	80 e8       	ldi	r24, 0x80	; 128
    1a26:	8f b9       	out	0x0f, r24	; 15
    1a28:	77 9b       	sbis	0x0e, 7	; 14
    1a2a:	fe cf       	rjmp	.-4      	; 0x1a28 <rf_security_set_key+0x152>
    1a2c:	f8 01       	movw	r30, r16
    1a2e:	80 81       	ld	r24, Z
    1a30:	8f b9       	out	0x0f, r24	; 15
    1a32:	77 9b       	sbis	0x0e, 7	; 14
    1a34:	fe cf       	rjmp	.-4      	; 0x1a32 <rf_security_set_key+0x15c>
    1a36:	31 96       	adiw	r30, 0x01	; 1
    1a38:	ea 15       	cp	r30, r10
    1a3a:	fb 05       	cpc	r31, r11
    1a3c:	c1 f7       	brne	.-16     	; 0x1a2e <rf_security_set_key+0x158>
    1a3e:	c0 9a       	sbi	0x18, 0	; 24
    1a40:	c0 98       	cbi	0x18, 0	; 24
    1a42:	8e e9       	ldi	r24, 0x9E	; 158
    1a44:	8f b9       	out	0x0f, r24	; 15
    1a46:	77 9b       	sbis	0x0e, 7	; 14
    1a48:	fe cf       	rjmp	.-4      	; 0x1a46 <rf_security_set_key+0x170>
    1a4a:	80 e8       	ldi	r24, 0x80	; 128
    1a4c:	8f b9       	out	0x0f, r24	; 15
    1a4e:	77 9b       	sbis	0x0e, 7	; 14
    1a50:	fe cf       	rjmp	.-4      	; 0x1a4e <rf_security_set_key+0x178>
    1a52:	f8 01       	movw	r30, r16
    1a54:	80 81       	ld	r24, Z
    1a56:	8f b9       	out	0x0f, r24	; 15
    1a58:	77 9b       	sbis	0x0e, 7	; 14
    1a5a:	fe cf       	rjmp	.-4      	; 0x1a58 <rf_security_set_key+0x182>
    1a5c:	0f 5f       	subi	r16, 0xFF	; 255
    1a5e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a60:	0a 15       	cp	r16, r10
    1a62:	1b 05       	cpc	r17, r11
    1a64:	b1 f7       	brne	.-20     	; 0x1a52 <rf_security_set_key+0x17c>
    1a66:	c0 9a       	sbi	0x18, 0	; 24
    1a68:	22 96       	adiw	r28, 0x02	; 2
    1a6a:	0f b6       	in	r0, 0x3f	; 63
    1a6c:	f8 94       	cli
    1a6e:	de bf       	out	0x3e, r29	; 62
    1a70:	0f be       	out	0x3f, r0	; 63
    1a72:	cd bf       	out	0x3d, r28	; 61
    1a74:	df 91       	pop	r29
    1a76:	cf 91       	pop	r28
    1a78:	1f 91       	pop	r17
    1a7a:	0f 91       	pop	r16
    1a7c:	ff 90       	pop	r15
    1a7e:	ef 90       	pop	r14
    1a80:	df 90       	pop	r13
    1a82:	cf 90       	pop	r12
    1a84:	bf 90       	pop	r11
    1a86:	af 90       	pop	r10
    1a88:	9f 90       	pop	r9
    1a8a:	8f 90       	pop	r8
    1a8c:	7f 90       	pop	r7
    1a8e:	6f 90       	pop	r6
    1a90:	08 95       	ret

00001a92 <rf_set_rx>:
    1a92:	cf 93       	push	r28
    1a94:	df 93       	push	r29
    1a96:	ec 01       	movw	r28, r24
    1a98:	c0 98       	cbi	0x18, 0	; 24
    1a9a:	88 e0       	ldi	r24, 0x08	; 8
    1a9c:	8f b9       	out	0x0f, r24	; 15
    1a9e:	77 9b       	sbis	0x0e, 7	; 14
    1aa0:	fe cf       	rjmp	.-4      	; 0x1a9e <rf_set_rx+0xc>
    1aa2:	c0 9a       	sbi	0x18, 0	; 24
    1aa4:	c0 98       	cbi	0x18, 0	; 24
    1aa6:	88 e0       	ldi	r24, 0x08	; 8
    1aa8:	8f b9       	out	0x0f, r24	; 15
    1aaa:	77 9b       	sbis	0x0e, 7	; 14
    1aac:	fe cf       	rjmp	.-4      	; 0x1aaa <rf_set_rx+0x18>
    1aae:	c0 9a       	sbi	0x18, 0	; 24
    1ab0:	86 2f       	mov	r24, r22
    1ab2:	0e 94 5b 05 	call	0xab6	; 0xab6 <halRfSetChannel>
    1ab6:	d0 93 c1 07 	sts	0x07C1, r29
    1aba:	c0 93 c0 07 	sts	0x07C0, r28
    1abe:	df 91       	pop	r29
    1ac0:	cf 91       	pop	r28
    1ac2:	08 95       	ret

00001ac4 <rf_set_channel>:
    1ac4:	0e 94 5b 05 	call	0xab6	; 0xab6 <halRfSetChannel>
    1ac8:	08 95       	ret

00001aca <rf_init>:
    1aca:	df 92       	push	r13
    1acc:	ef 92       	push	r14
    1ace:	ff 92       	push	r15
    1ad0:	0f 93       	push	r16
    1ad2:	1f 93       	push	r17
    1ad4:	cf 93       	push	r28
    1ad6:	df 93       	push	r29
    1ad8:	cd b7       	in	r28, 0x3d	; 61
    1ada:	de b7       	in	r29, 0x3e	; 62
    1adc:	22 97       	sbiw	r28, 0x02	; 2
    1ade:	0f b6       	in	r0, 0x3f	; 63
    1ae0:	f8 94       	cli
    1ae2:	de bf       	out	0x3e, r29	; 62
    1ae4:	0f be       	out	0x3f, r0	; 63
    1ae6:	cd bf       	out	0x3d, r28	; 61
    1ae8:	8c 01       	movw	r16, r24
    1aea:	d6 2e       	mov	r13, r22
    1aec:	5a 83       	std	Y+2, r21	; 0x02
    1aee:	49 83       	std	Y+1, r20	; 0x01
    1af0:	79 01       	movw	r14, r18
    1af2:	dd 9a       	sbi	0x1b, 5	; 27
    1af4:	88 ee       	ldi	r24, 0xE8	; 232
    1af6:	93 e0       	ldi	r25, 0x03	; 3
    1af8:	0e 94 aa 12 	call	0x2554	; 0x2554 <halWait>
    1afc:	de 98       	cbi	0x1b, 6	; 27
    1afe:	81 e0       	ldi	r24, 0x01	; 1
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	0e 94 aa 12 	call	0x2554	; 0x2554 <halWait>
    1b06:	de 9a       	sbi	0x1b, 6	; 27
    1b08:	84 e6       	ldi	r24, 0x64	; 100
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	0e 94 aa 12 	call	0x2554	; 0x2554 <halWait>
    1b10:	f8 94       	cli
    1b12:	c0 98       	cbi	0x18, 0	; 24
    1b14:	81 e0       	ldi	r24, 0x01	; 1
    1b16:	8f b9       	out	0x0f, r24	; 15
    1b18:	77 9b       	sbis	0x0e, 7	; 14
    1b1a:	fe cf       	rjmp	.-4      	; 0x1b18 <rf_init+0x4e>
    1b1c:	c0 9a       	sbi	0x18, 0	; 24
    1b1e:	82 ee       	ldi	r24, 0xE2	; 226
    1b20:	92 e0       	ldi	r25, 0x02	; 2
    1b22:	90 93 bf 07 	sts	0x07BF, r25
    1b26:	80 93 be 07 	sts	0x07BE, r24
    1b2a:	c0 98       	cbi	0x18, 0	; 24
    1b2c:	81 e1       	ldi	r24, 0x11	; 17
    1b2e:	8f b9       	out	0x0f, r24	; 15
    1b30:	77 9b       	sbis	0x0e, 7	; 14
    1b32:	fe cf       	rjmp	.-4      	; 0x1b30 <rf_init+0x66>
    1b34:	82 e0       	ldi	r24, 0x02	; 2
    1b36:	8f b9       	out	0x0f, r24	; 15
    1b38:	77 9b       	sbis	0x0e, 7	; 14
    1b3a:	fe cf       	rjmp	.-4      	; 0x1b38 <rf_init+0x6e>
    1b3c:	82 ee       	ldi	r24, 0xE2	; 226
    1b3e:	8f b9       	out	0x0f, r24	; 15
    1b40:	77 9b       	sbis	0x0e, 7	; 14
    1b42:	fe cf       	rjmp	.-4      	; 0x1b40 <rf_init+0x76>
    1b44:	c0 9a       	sbi	0x18, 0	; 24
    1b46:	c0 98       	cbi	0x18, 0	; 24
    1b48:	82 e1       	ldi	r24, 0x12	; 18
    1b4a:	8f b9       	out	0x0f, r24	; 15
    1b4c:	77 9b       	sbis	0x0e, 7	; 14
    1b4e:	fe cf       	rjmp	.-4      	; 0x1b4c <rf_init+0x82>
    1b50:	85 e0       	ldi	r24, 0x05	; 5
    1b52:	8f b9       	out	0x0f, r24	; 15
    1b54:	77 9b       	sbis	0x0e, 7	; 14
    1b56:	fe cf       	rjmp	.-4      	; 0x1b54 <rf_init+0x8a>
    1b58:	1f b8       	out	0x0f, r1	; 15
    1b5a:	77 9b       	sbis	0x0e, 7	; 14
    1b5c:	fe cf       	rjmp	.-4      	; 0x1b5a <rf_init+0x90>
    1b5e:	c0 9a       	sbi	0x18, 0	; 24
    1b60:	c0 98       	cbi	0x18, 0	; 24
    1b62:	8c e1       	ldi	r24, 0x1C	; 28
    1b64:	8f b9       	out	0x0f, r24	; 15
    1b66:	77 9b       	sbis	0x0e, 7	; 14
    1b68:	fe cf       	rjmp	.-4      	; 0x1b66 <rf_init+0x9c>
    1b6a:	1f b8       	out	0x0f, r1	; 15
    1b6c:	77 9b       	sbis	0x0e, 7	; 14
    1b6e:	fe cf       	rjmp	.-4      	; 0x1b6c <rf_init+0xa2>
    1b70:	8f e7       	ldi	r24, 0x7F	; 127
    1b72:	8f b9       	out	0x0f, r24	; 15
    1b74:	77 9b       	sbis	0x0e, 7	; 14
    1b76:	fe cf       	rjmp	.-4      	; 0x1b74 <rf_init+0xaa>
    1b78:	c0 9a       	sbi	0x18, 0	; 24
    1b7a:	c0 98       	cbi	0x18, 0	; 24
    1b7c:	89 e1       	ldi	r24, 0x19	; 25
    1b7e:	8f b9       	out	0x0f, r24	; 15
    1b80:	77 9b       	sbis	0x0e, 7	; 14
    1b82:	fe cf       	rjmp	.-4      	; 0x1b80 <rf_init+0xb6>
    1b84:	81 e0       	ldi	r24, 0x01	; 1
    1b86:	8f b9       	out	0x0f, r24	; 15
    1b88:	77 9b       	sbis	0x0e, 7	; 14
    1b8a:	fe cf       	rjmp	.-4      	; 0x1b88 <rf_init+0xbe>
    1b8c:	84 ec       	ldi	r24, 0xC4	; 196
    1b8e:	8f b9       	out	0x0f, r24	; 15
    1b90:	77 9b       	sbis	0x0e, 7	; 14
    1b92:	fe cf       	rjmp	.-4      	; 0x1b90 <rf_init+0xc6>
    1b94:	c0 9a       	sbi	0x18, 0	; 24
    1b96:	c0 98       	cbi	0x18, 0	; 24
    1b98:	87 e1       	ldi	r24, 0x17	; 23
    1b9a:	8f b9       	out	0x0f, r24	; 15
    1b9c:	77 9b       	sbis	0x0e, 7	; 14
    1b9e:	fe cf       	rjmp	.-4      	; 0x1b9c <rf_init+0xd2>
    1ba0:	8a e1       	ldi	r24, 0x1A	; 26
    1ba2:	8f b9       	out	0x0f, r24	; 15
    1ba4:	77 9b       	sbis	0x0e, 7	; 14
    1ba6:	fe cf       	rjmp	.-4      	; 0x1ba4 <rf_init+0xda>
    1ba8:	86 e5       	ldi	r24, 0x56	; 86
    1baa:	8f b9       	out	0x0f, r24	; 15
    1bac:	77 9b       	sbis	0x0e, 7	; 14
    1bae:	fe cf       	rjmp	.-4      	; 0x1bac <rf_init+0xe2>
    1bb0:	c0 9a       	sbi	0x18, 0	; 24
    1bb2:	84 ef       	ldi	r24, 0xF4	; 244
    1bb4:	91 e0       	ldi	r25, 0x01	; 1
    1bb6:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    1bba:	c0 98       	cbi	0x18, 0	; 24
    1bbc:	88 ee       	ldi	r24, 0xE8	; 232
    1bbe:	8f b9       	out	0x0f, r24	; 15
    1bc0:	77 9b       	sbis	0x0e, 7	; 14
    1bc2:	fe cf       	rjmp	.-4      	; 0x1bc0 <rf_init+0xf6>
    1bc4:	80 e8       	ldi	r24, 0x80	; 128
    1bc6:	8f b9       	out	0x0f, r24	; 15
    1bc8:	77 9b       	sbis	0x0e, 7	; 14
    1bca:	fe cf       	rjmp	.-4      	; 0x1bc8 <rf_init+0xfe>
    1bcc:	fe 01       	movw	r30, r28
    1bce:	31 96       	adiw	r30, 0x01	; 1
    1bd0:	9e 01       	movw	r18, r28
    1bd2:	2d 5f       	subi	r18, 0xFD	; 253
    1bd4:	3f 4f       	sbci	r19, 0xFF	; 255
    1bd6:	80 81       	ld	r24, Z
    1bd8:	8f b9       	out	0x0f, r24	; 15
    1bda:	77 9b       	sbis	0x0e, 7	; 14
    1bdc:	fe cf       	rjmp	.-4      	; 0x1bda <rf_init+0x110>
    1bde:	31 96       	adiw	r30, 0x01	; 1
    1be0:	e2 17       	cp	r30, r18
    1be2:	f3 07       	cpc	r31, r19
    1be4:	c1 f7       	brne	.-16     	; 0x1bd6 <rf_init+0x10c>
    1be6:	c0 9a       	sbi	0x18, 0	; 24
    1be8:	84 ef       	ldi	r24, 0xF4	; 244
    1bea:	91 e0       	ldi	r25, 0x01	; 1
    1bec:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    1bf0:	78 94       	sei
    1bf2:	8d 2d       	mov	r24, r13
    1bf4:	0e 94 5b 05 	call	0xab6	; 0xab6 <halRfSetChannel>
    1bf8:	78 94       	sei
    1bfa:	10 93 c1 07 	sts	0x07C1, r17
    1bfe:	00 93 c0 07 	sts	0x07C0, r16
    1c02:	89 81       	ldd	r24, Y+1	; 0x01
    1c04:	9a 81       	ldd	r25, Y+2	; 0x02
    1c06:	90 93 c5 07 	sts	0x07C5, r25
    1c0a:	80 93 c4 07 	sts	0x07C4, r24
    1c0e:	f0 92 c7 07 	sts	0x07C7, r15
    1c12:	e0 92 c6 07 	sts	0x07C6, r14
    1c16:	10 92 c2 07 	sts	0x07C2, r1
    1c1a:	10 92 c8 07 	sts	0x07C8, r1
    1c1e:	0e 94 77 05 	call	0xaee	; 0xaee <halRfWaitForCrystalOscillator>
    1c22:	10 92 cb 07 	sts	0x07CB, r1
    1c26:	10 92 bd 07 	sts	0x07BD, r1
    1c2a:	10 92 cc 07 	sts	0x07CC, r1
    1c2e:	22 96       	adiw	r28, 0x02	; 2
    1c30:	0f b6       	in	r0, 0x3f	; 63
    1c32:	f8 94       	cli
    1c34:	de bf       	out	0x3e, r29	; 62
    1c36:	0f be       	out	0x3f, r0	; 63
    1c38:	cd bf       	out	0x3d, r28	; 61
    1c3a:	df 91       	pop	r29
    1c3c:	cf 91       	pop	r28
    1c3e:	1f 91       	pop	r17
    1c40:	0f 91       	pop	r16
    1c42:	ff 90       	pop	r15
    1c44:	ef 90       	pop	r14
    1c46:	df 90       	pop	r13
    1c48:	08 95       	ret

00001c4a <nrk_uart_rx_signal_get>:
    1c4a:	8f ef       	ldi	r24, 0xFF	; 255
    1c4c:	9f ef       	ldi	r25, 0xFF	; 255
    1c4e:	08 95       	ret

00001c50 <nrk_uart_data_ready>:
    1c50:	88 23       	and	r24, r24
    1c52:	49 f4       	brne	.+18     	; 0x1c66 <nrk_uart_data_ready+0x16>
    1c54:	8b b1       	in	r24, 0x0b	; 11
    1c56:	99 27       	eor	r25, r25
    1c58:	87 fd       	sbrc	r24, 7
    1c5a:	90 95       	com	r25
    1c5c:	88 27       	eor	r24, r24
    1c5e:	99 0f       	add	r25, r25
    1c60:	88 1f       	adc	r24, r24
    1c62:	99 27       	eor	r25, r25
    1c64:	08 95       	ret
    1c66:	81 30       	cpi	r24, 0x01	; 1
    1c68:	19 f0       	breq	.+6      	; 0x1c70 <nrk_uart_data_ready+0x20>
    1c6a:	80 e0       	ldi	r24, 0x00	; 0
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	08 95       	ret
    1c70:	80 91 9b 00 	lds	r24, 0x009B
    1c74:	99 27       	eor	r25, r25
    1c76:	87 fd       	sbrc	r24, 7
    1c78:	90 95       	com	r25
    1c7a:	88 27       	eor	r24, r24
    1c7c:	99 0f       	add	r25, r25
    1c7e:	88 1f       	adc	r24, r24
    1c80:	99 27       	eor	r25, r25
    1c82:	08 95       	ret

00001c84 <getc0>:
    1c84:	5f 9b       	sbis	0x0b, 7	; 11
    1c86:	fe cf       	rjmp	.-4      	; 0x1c84 <getc0>
    1c88:	5f 98       	cbi	0x0b, 7	; 11
    1c8a:	8c b1       	in	r24, 0x0c	; 12
    1c8c:	99 27       	eor	r25, r25
    1c8e:	08 95       	ret

00001c90 <nrk_setup_ports>:
    1c90:	80 b5       	in	r24, 0x20	; 32
    1c92:	84 60       	ori	r24, 0x04	; 4
    1c94:	80 bd       	out	0x20, r24	; 32
    1c96:	87 e0       	ldi	r24, 0x07	; 7
    1c98:	87 bb       	out	0x17, r24	; 23
    1c9a:	88 bb       	out	0x18, r24	; 24
    1c9c:	82 e0       	ldi	r24, 0x02	; 2
    1c9e:	82 b9       	out	0x02, r24	; 2
    1ca0:	87 e6       	ldi	r24, 0x67	; 103
    1ca2:	8a bb       	out	0x1a, r24	; 26
    1ca4:	80 e4       	ldi	r24, 0x40	; 64
    1ca6:	8b bb       	out	0x1b, r24	; 27
    1ca8:	80 e5       	ldi	r24, 0x50	; 80
    1caa:	8d b9       	out	0x0d, r24	; 13
    1cac:	81 e0       	ldi	r24, 0x01	; 1
    1cae:	8e b9       	out	0x0e, r24	; 14
    1cb0:	08 95       	ret

00001cb2 <nrk_gpio_set>:
    1cb2:	8f 3f       	cpi	r24, 0xFF	; 255
    1cb4:	09 f4       	brne	.+2      	; 0x1cb8 <nrk_gpio_set+0x6>
    1cb6:	81 c0       	rjmp	.+258    	; 0x1dba <nrk_gpio_set+0x108>
    1cb8:	48 2f       	mov	r20, r24
    1cba:	55 27       	eor	r21, r21
    1cbc:	9a 01       	movw	r18, r20
    1cbe:	27 70       	andi	r18, 0x07	; 7
    1cc0:	30 70       	andi	r19, 0x00	; 0
    1cc2:	22 30       	cpi	r18, 0x02	; 2
    1cc4:	31 05       	cpc	r19, r1
    1cc6:	a9 f1       	breq	.+106    	; 0x1d32 <nrk_gpio_set+0x80>
    1cc8:	23 30       	cpi	r18, 0x03	; 3
    1cca:	31 05       	cpc	r19, r1
    1ccc:	44 f4       	brge	.+16     	; 0x1cde <nrk_gpio_set+0x2c>
    1cce:	21 15       	cp	r18, r1
    1cd0:	31 05       	cpc	r19, r1
    1cd2:	89 f0       	breq	.+34     	; 0x1cf6 <nrk_gpio_set+0x44>
    1cd4:	21 30       	cpi	r18, 0x01	; 1
    1cd6:	31 05       	cpc	r19, r1
    1cd8:	09 f0       	breq	.+2      	; 0x1cdc <nrk_gpio_set+0x2a>
    1cda:	6f c0       	rjmp	.+222    	; 0x1dba <nrk_gpio_set+0x108>
    1cdc:	1c c0       	rjmp	.+56     	; 0x1d16 <nrk_gpio_set+0x64>
    1cde:	24 30       	cpi	r18, 0x04	; 4
    1ce0:	31 05       	cpc	r19, r1
    1ce2:	09 f4       	brne	.+2      	; 0x1ce6 <nrk_gpio_set+0x34>
    1ce4:	46 c0       	rjmp	.+140    	; 0x1d72 <nrk_gpio_set+0xc0>
    1ce6:	24 30       	cpi	r18, 0x04	; 4
    1ce8:	31 05       	cpc	r19, r1
    1cea:	9c f1       	brlt	.+102    	; 0x1d52 <nrk_gpio_set+0xa0>
    1cec:	25 30       	cpi	r18, 0x05	; 5
    1cee:	31 05       	cpc	r19, r1
    1cf0:	09 f0       	breq	.+2      	; 0x1cf4 <nrk_gpio_set+0x42>
    1cf2:	63 c0       	rjmp	.+198    	; 0x1dba <nrk_gpio_set+0x108>
    1cf4:	4e c0       	rjmp	.+156    	; 0x1d92 <nrk_gpio_set+0xe0>
    1cf6:	2b b3       	in	r18, 0x1b	; 27
    1cf8:	b3 e0       	ldi	r27, 0x03	; 3
    1cfa:	56 95       	lsr	r21
    1cfc:	47 95       	ror	r20
    1cfe:	ba 95       	dec	r27
    1d00:	e1 f7       	brne	.-8      	; 0x1cfa <nrk_gpio_set+0x48>
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	02 c0       	rjmp	.+4      	; 0x1d0c <nrk_gpio_set+0x5a>
    1d08:	88 0f       	add	r24, r24
    1d0a:	99 1f       	adc	r25, r25
    1d0c:	4a 95       	dec	r20
    1d0e:	e2 f7       	brpl	.-8      	; 0x1d08 <nrk_gpio_set+0x56>
    1d10:	28 2b       	or	r18, r24
    1d12:	2b bb       	out	0x1b, r18	; 27
    1d14:	4f c0       	rjmp	.+158    	; 0x1db4 <nrk_gpio_set+0x102>
    1d16:	88 b3       	in	r24, 0x18	; 24
    1d18:	a3 e0       	ldi	r26, 0x03	; 3
    1d1a:	56 95       	lsr	r21
    1d1c:	47 95       	ror	r20
    1d1e:	aa 95       	dec	r26
    1d20:	e1 f7       	brne	.-8      	; 0x1d1a <nrk_gpio_set+0x68>
    1d22:	02 c0       	rjmp	.+4      	; 0x1d28 <nrk_gpio_set+0x76>
    1d24:	22 0f       	add	r18, r18
    1d26:	33 1f       	adc	r19, r19
    1d28:	4a 95       	dec	r20
    1d2a:	e2 f7       	brpl	.-8      	; 0x1d24 <nrk_gpio_set+0x72>
    1d2c:	82 2b       	or	r24, r18
    1d2e:	88 bb       	out	0x18, r24	; 24
    1d30:	41 c0       	rjmp	.+130    	; 0x1db4 <nrk_gpio_set+0x102>
    1d32:	25 b3       	in	r18, 0x15	; 21
    1d34:	f3 e0       	ldi	r31, 0x03	; 3
    1d36:	56 95       	lsr	r21
    1d38:	47 95       	ror	r20
    1d3a:	fa 95       	dec	r31
    1d3c:	e1 f7       	brne	.-8      	; 0x1d36 <nrk_gpio_set+0x84>
    1d3e:	81 e0       	ldi	r24, 0x01	; 1
    1d40:	90 e0       	ldi	r25, 0x00	; 0
    1d42:	02 c0       	rjmp	.+4      	; 0x1d48 <nrk_gpio_set+0x96>
    1d44:	88 0f       	add	r24, r24
    1d46:	99 1f       	adc	r25, r25
    1d48:	4a 95       	dec	r20
    1d4a:	e2 f7       	brpl	.-8      	; 0x1d44 <nrk_gpio_set+0x92>
    1d4c:	28 2b       	or	r18, r24
    1d4e:	25 bb       	out	0x15, r18	; 21
    1d50:	31 c0       	rjmp	.+98     	; 0x1db4 <nrk_gpio_set+0x102>
    1d52:	22 b3       	in	r18, 0x12	; 18
    1d54:	e3 e0       	ldi	r30, 0x03	; 3
    1d56:	56 95       	lsr	r21
    1d58:	47 95       	ror	r20
    1d5a:	ea 95       	dec	r30
    1d5c:	e1 f7       	brne	.-8      	; 0x1d56 <nrk_gpio_set+0xa4>
    1d5e:	81 e0       	ldi	r24, 0x01	; 1
    1d60:	90 e0       	ldi	r25, 0x00	; 0
    1d62:	02 c0       	rjmp	.+4      	; 0x1d68 <nrk_gpio_set+0xb6>
    1d64:	88 0f       	add	r24, r24
    1d66:	99 1f       	adc	r25, r25
    1d68:	4a 95       	dec	r20
    1d6a:	e2 f7       	brpl	.-8      	; 0x1d64 <nrk_gpio_set+0xb2>
    1d6c:	28 2b       	or	r18, r24
    1d6e:	22 bb       	out	0x12, r18	; 18
    1d70:	21 c0       	rjmp	.+66     	; 0x1db4 <nrk_gpio_set+0x102>
    1d72:	23 b1       	in	r18, 0x03	; 3
    1d74:	73 e0       	ldi	r23, 0x03	; 3
    1d76:	56 95       	lsr	r21
    1d78:	47 95       	ror	r20
    1d7a:	7a 95       	dec	r23
    1d7c:	e1 f7       	brne	.-8      	; 0x1d76 <nrk_gpio_set+0xc4>
    1d7e:	81 e0       	ldi	r24, 0x01	; 1
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	02 c0       	rjmp	.+4      	; 0x1d88 <nrk_gpio_set+0xd6>
    1d84:	88 0f       	add	r24, r24
    1d86:	99 1f       	adc	r25, r25
    1d88:	4a 95       	dec	r20
    1d8a:	e2 f7       	brpl	.-8      	; 0x1d84 <nrk_gpio_set+0xd2>
    1d8c:	28 2b       	or	r18, r24
    1d8e:	23 b9       	out	0x03, r18	; 3
    1d90:	11 c0       	rjmp	.+34     	; 0x1db4 <nrk_gpio_set+0x102>
    1d92:	20 91 62 00 	lds	r18, 0x0062
    1d96:	63 e0       	ldi	r22, 0x03	; 3
    1d98:	56 95       	lsr	r21
    1d9a:	47 95       	ror	r20
    1d9c:	6a 95       	dec	r22
    1d9e:	e1 f7       	brne	.-8      	; 0x1d98 <nrk_gpio_set+0xe6>
    1da0:	81 e0       	ldi	r24, 0x01	; 1
    1da2:	90 e0       	ldi	r25, 0x00	; 0
    1da4:	02 c0       	rjmp	.+4      	; 0x1daa <nrk_gpio_set+0xf8>
    1da6:	88 0f       	add	r24, r24
    1da8:	99 1f       	adc	r25, r25
    1daa:	4a 95       	dec	r20
    1dac:	e2 f7       	brpl	.-8      	; 0x1da6 <nrk_gpio_set+0xf4>
    1dae:	28 2b       	or	r18, r24
    1db0:	20 93 62 00 	sts	0x0062, r18
    1db4:	81 e0       	ldi	r24, 0x01	; 1
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	08 95       	ret
    1dba:	8f ef       	ldi	r24, 0xFF	; 255
    1dbc:	9f ef       	ldi	r25, 0xFF	; 255
    1dbe:	08 95       	ret

00001dc0 <nrk_gpio_clr>:
    1dc0:	8f 3f       	cpi	r24, 0xFF	; 255
    1dc2:	09 f4       	brne	.+2      	; 0x1dc6 <nrk_gpio_clr+0x6>
    1dc4:	88 c0       	rjmp	.+272    	; 0x1ed6 <nrk_gpio_clr+0x116>
    1dc6:	48 2f       	mov	r20, r24
    1dc8:	55 27       	eor	r21, r21
    1dca:	9a 01       	movw	r18, r20
    1dcc:	27 70       	andi	r18, 0x07	; 7
    1dce:	30 70       	andi	r19, 0x00	; 0
    1dd0:	22 30       	cpi	r18, 0x02	; 2
    1dd2:	31 05       	cpc	r19, r1
    1dd4:	c1 f1       	breq	.+112    	; 0x1e46 <nrk_gpio_clr+0x86>
    1dd6:	23 30       	cpi	r18, 0x03	; 3
    1dd8:	31 05       	cpc	r19, r1
    1dda:	44 f4       	brge	.+16     	; 0x1dec <nrk_gpio_clr+0x2c>
    1ddc:	21 15       	cp	r18, r1
    1dde:	31 05       	cpc	r19, r1
    1de0:	89 f0       	breq	.+34     	; 0x1e04 <nrk_gpio_clr+0x44>
    1de2:	21 30       	cpi	r18, 0x01	; 1
    1de4:	31 05       	cpc	r19, r1
    1de6:	09 f0       	breq	.+2      	; 0x1dea <nrk_gpio_clr+0x2a>
    1de8:	76 c0       	rjmp	.+236    	; 0x1ed6 <nrk_gpio_clr+0x116>
    1dea:	1d c0       	rjmp	.+58     	; 0x1e26 <nrk_gpio_clr+0x66>
    1dec:	24 30       	cpi	r18, 0x04	; 4
    1dee:	31 05       	cpc	r19, r1
    1df0:	09 f4       	brne	.+2      	; 0x1df4 <nrk_gpio_clr+0x34>
    1df2:	4b c0       	rjmp	.+150    	; 0x1e8a <nrk_gpio_clr+0xca>
    1df4:	24 30       	cpi	r18, 0x04	; 4
    1df6:	31 05       	cpc	r19, r1
    1df8:	bc f1       	brlt	.+110    	; 0x1e68 <nrk_gpio_clr+0xa8>
    1dfa:	25 30       	cpi	r18, 0x05	; 5
    1dfc:	31 05       	cpc	r19, r1
    1dfe:	09 f0       	breq	.+2      	; 0x1e02 <nrk_gpio_clr+0x42>
    1e00:	6a c0       	rjmp	.+212    	; 0x1ed6 <nrk_gpio_clr+0x116>
    1e02:	54 c0       	rjmp	.+168    	; 0x1eac <nrk_gpio_clr+0xec>
    1e04:	2b b3       	in	r18, 0x1b	; 27
    1e06:	e3 e0       	ldi	r30, 0x03	; 3
    1e08:	56 95       	lsr	r21
    1e0a:	47 95       	ror	r20
    1e0c:	ea 95       	dec	r30
    1e0e:	e1 f7       	brne	.-8      	; 0x1e08 <nrk_gpio_clr+0x48>
    1e10:	81 e0       	ldi	r24, 0x01	; 1
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	02 c0       	rjmp	.+4      	; 0x1e1a <nrk_gpio_clr+0x5a>
    1e16:	88 0f       	add	r24, r24
    1e18:	99 1f       	adc	r25, r25
    1e1a:	4a 95       	dec	r20
    1e1c:	e2 f7       	brpl	.-8      	; 0x1e16 <nrk_gpio_clr+0x56>
    1e1e:	80 95       	com	r24
    1e20:	82 23       	and	r24, r18
    1e22:	8b bb       	out	0x1b, r24	; 27
    1e24:	55 c0       	rjmp	.+170    	; 0x1ed0 <nrk_gpio_clr+0x110>
    1e26:	98 b3       	in	r25, 0x18	; 24
    1e28:	73 e0       	ldi	r23, 0x03	; 3
    1e2a:	56 95       	lsr	r21
    1e2c:	47 95       	ror	r20
    1e2e:	7a 95       	dec	r23
    1e30:	e1 f7       	brne	.-8      	; 0x1e2a <nrk_gpio_clr+0x6a>
    1e32:	02 c0       	rjmp	.+4      	; 0x1e38 <nrk_gpio_clr+0x78>
    1e34:	22 0f       	add	r18, r18
    1e36:	33 1f       	adc	r19, r19
    1e38:	4a 95       	dec	r20
    1e3a:	e2 f7       	brpl	.-8      	; 0x1e34 <nrk_gpio_clr+0x74>
    1e3c:	82 2f       	mov	r24, r18
    1e3e:	80 95       	com	r24
    1e40:	89 23       	and	r24, r25
    1e42:	88 bb       	out	0x18, r24	; 24
    1e44:	45 c0       	rjmp	.+138    	; 0x1ed0 <nrk_gpio_clr+0x110>
    1e46:	25 b3       	in	r18, 0x15	; 21
    1e48:	63 e0       	ldi	r22, 0x03	; 3
    1e4a:	56 95       	lsr	r21
    1e4c:	47 95       	ror	r20
    1e4e:	6a 95       	dec	r22
    1e50:	e1 f7       	brne	.-8      	; 0x1e4a <nrk_gpio_clr+0x8a>
    1e52:	81 e0       	ldi	r24, 0x01	; 1
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	02 c0       	rjmp	.+4      	; 0x1e5c <nrk_gpio_clr+0x9c>
    1e58:	88 0f       	add	r24, r24
    1e5a:	99 1f       	adc	r25, r25
    1e5c:	4a 95       	dec	r20
    1e5e:	e2 f7       	brpl	.-8      	; 0x1e58 <nrk_gpio_clr+0x98>
    1e60:	80 95       	com	r24
    1e62:	82 23       	and	r24, r18
    1e64:	85 bb       	out	0x15, r24	; 21
    1e66:	34 c0       	rjmp	.+104    	; 0x1ed0 <nrk_gpio_clr+0x110>
    1e68:	22 b3       	in	r18, 0x12	; 18
    1e6a:	33 e0       	ldi	r19, 0x03	; 3
    1e6c:	56 95       	lsr	r21
    1e6e:	47 95       	ror	r20
    1e70:	3a 95       	dec	r19
    1e72:	e1 f7       	brne	.-8      	; 0x1e6c <nrk_gpio_clr+0xac>
    1e74:	81 e0       	ldi	r24, 0x01	; 1
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	02 c0       	rjmp	.+4      	; 0x1e7e <nrk_gpio_clr+0xbe>
    1e7a:	88 0f       	add	r24, r24
    1e7c:	99 1f       	adc	r25, r25
    1e7e:	4a 95       	dec	r20
    1e80:	e2 f7       	brpl	.-8      	; 0x1e7a <nrk_gpio_clr+0xba>
    1e82:	80 95       	com	r24
    1e84:	82 23       	and	r24, r18
    1e86:	82 bb       	out	0x12, r24	; 18
    1e88:	23 c0       	rjmp	.+70     	; 0x1ed0 <nrk_gpio_clr+0x110>
    1e8a:	23 b1       	in	r18, 0x03	; 3
    1e8c:	93 e0       	ldi	r25, 0x03	; 3
    1e8e:	56 95       	lsr	r21
    1e90:	47 95       	ror	r20
    1e92:	9a 95       	dec	r25
    1e94:	e1 f7       	brne	.-8      	; 0x1e8e <nrk_gpio_clr+0xce>
    1e96:	81 e0       	ldi	r24, 0x01	; 1
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	02 c0       	rjmp	.+4      	; 0x1ea0 <nrk_gpio_clr+0xe0>
    1e9c:	88 0f       	add	r24, r24
    1e9e:	99 1f       	adc	r25, r25
    1ea0:	4a 95       	dec	r20
    1ea2:	e2 f7       	brpl	.-8      	; 0x1e9c <nrk_gpio_clr+0xdc>
    1ea4:	80 95       	com	r24
    1ea6:	82 23       	and	r24, r18
    1ea8:	83 b9       	out	0x03, r24	; 3
    1eaa:	12 c0       	rjmp	.+36     	; 0x1ed0 <nrk_gpio_clr+0x110>
    1eac:	20 91 62 00 	lds	r18, 0x0062
    1eb0:	83 e0       	ldi	r24, 0x03	; 3
    1eb2:	56 95       	lsr	r21
    1eb4:	47 95       	ror	r20
    1eb6:	8a 95       	dec	r24
    1eb8:	e1 f7       	brne	.-8      	; 0x1eb2 <nrk_gpio_clr+0xf2>
    1eba:	81 e0       	ldi	r24, 0x01	; 1
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	02 c0       	rjmp	.+4      	; 0x1ec4 <nrk_gpio_clr+0x104>
    1ec0:	88 0f       	add	r24, r24
    1ec2:	99 1f       	adc	r25, r25
    1ec4:	4a 95       	dec	r20
    1ec6:	e2 f7       	brpl	.-8      	; 0x1ec0 <nrk_gpio_clr+0x100>
    1ec8:	80 95       	com	r24
    1eca:	82 23       	and	r24, r18
    1ecc:	80 93 62 00 	sts	0x0062, r24
    1ed0:	81 e0       	ldi	r24, 0x01	; 1
    1ed2:	90 e0       	ldi	r25, 0x00	; 0
    1ed4:	08 95       	ret
    1ed6:	8f ef       	ldi	r24, 0xFF	; 255
    1ed8:	9f ef       	ldi	r25, 0xFF	; 255
    1eda:	08 95       	ret

00001edc <nrk_gpio_get>:
    1edc:	8f 3f       	cpi	r24, 0xFF	; 255
    1ede:	a9 f1       	breq	.+106    	; 0x1f4a <nrk_gpio_get+0x6e>
    1ee0:	28 2f       	mov	r18, r24
    1ee2:	33 27       	eor	r19, r19
    1ee4:	c9 01       	movw	r24, r18
    1ee6:	87 70       	andi	r24, 0x07	; 7
    1ee8:	90 70       	andi	r25, 0x00	; 0
    1eea:	82 30       	cpi	r24, 0x02	; 2
    1eec:	91 05       	cpc	r25, r1
    1eee:	a9 f0       	breq	.+42     	; 0x1f1a <nrk_gpio_get+0x3e>
    1ef0:	83 30       	cpi	r24, 0x03	; 3
    1ef2:	91 05       	cpc	r25, r1
    1ef4:	2c f4       	brge	.+10     	; 0x1f00 <nrk_gpio_get+0x24>
    1ef6:	00 97       	sbiw	r24, 0x00	; 0
    1ef8:	61 f0       	breq	.+24     	; 0x1f12 <nrk_gpio_get+0x36>
    1efa:	01 97       	sbiw	r24, 0x01	; 1
    1efc:	31 f5       	brne	.+76     	; 0x1f4a <nrk_gpio_get+0x6e>
    1efe:	0b c0       	rjmp	.+22     	; 0x1f16 <nrk_gpio_get+0x3a>
    1f00:	84 30       	cpi	r24, 0x04	; 4
    1f02:	91 05       	cpc	r25, r1
    1f04:	71 f0       	breq	.+28     	; 0x1f22 <nrk_gpio_get+0x46>
    1f06:	84 30       	cpi	r24, 0x04	; 4
    1f08:	91 05       	cpc	r25, r1
    1f0a:	4c f0       	brlt	.+18     	; 0x1f1e <nrk_gpio_get+0x42>
    1f0c:	05 97       	sbiw	r24, 0x05	; 5
    1f0e:	e9 f4       	brne	.+58     	; 0x1f4a <nrk_gpio_get+0x6e>
    1f10:	0a c0       	rjmp	.+20     	; 0x1f26 <nrk_gpio_get+0x4a>
    1f12:	89 b3       	in	r24, 0x19	; 25
    1f14:	09 c0       	rjmp	.+18     	; 0x1f28 <nrk_gpio_get+0x4c>
    1f16:	86 b3       	in	r24, 0x16	; 22
    1f18:	07 c0       	rjmp	.+14     	; 0x1f28 <nrk_gpio_get+0x4c>
    1f1a:	83 b3       	in	r24, 0x13	; 19
    1f1c:	05 c0       	rjmp	.+10     	; 0x1f28 <nrk_gpio_get+0x4c>
    1f1e:	80 b3       	in	r24, 0x10	; 16
    1f20:	03 c0       	rjmp	.+6      	; 0x1f28 <nrk_gpio_get+0x4c>
    1f22:	81 b1       	in	r24, 0x01	; 1
    1f24:	01 c0       	rjmp	.+2      	; 0x1f28 <nrk_gpio_get+0x4c>
    1f26:	80 b1       	in	r24, 0x00	; 0
    1f28:	99 27       	eor	r25, r25
    1f2a:	f3 e0       	ldi	r31, 0x03	; 3
    1f2c:	36 95       	lsr	r19
    1f2e:	27 95       	ror	r18
    1f30:	fa 95       	dec	r31
    1f32:	e1 f7       	brne	.-8      	; 0x1f2c <nrk_gpio_get+0x50>
    1f34:	02 c0       	rjmp	.+4      	; 0x1f3a <nrk_gpio_get+0x5e>
    1f36:	95 95       	asr	r25
    1f38:	87 95       	ror	r24
    1f3a:	2a 95       	dec	r18
    1f3c:	e2 f7       	brpl	.-8      	; 0x1f36 <nrk_gpio_get+0x5a>
    1f3e:	99 27       	eor	r25, r25
    1f40:	87 fd       	sbrc	r24, 7
    1f42:	90 95       	com	r25
    1f44:	81 70       	andi	r24, 0x01	; 1
    1f46:	90 70       	andi	r25, 0x00	; 0
    1f48:	08 95       	ret
    1f4a:	8f ef       	ldi	r24, 0xFF	; 255
    1f4c:	9f ef       	ldi	r25, 0xFF	; 255
    1f4e:	08 95       	ret

00001f50 <nrk_gpio_pullups>:
    1f50:	88 23       	and	r24, r24
    1f52:	19 f0       	breq	.+6      	; 0x1f5a <nrk_gpio_pullups+0xa>
    1f54:	80 b5       	in	r24, 0x20	; 32
    1f56:	8b 7f       	andi	r24, 0xFB	; 251
    1f58:	02 c0       	rjmp	.+4      	; 0x1f5e <nrk_gpio_pullups+0xe>
    1f5a:	80 b5       	in	r24, 0x20	; 32
    1f5c:	84 60       	ori	r24, 0x04	; 4
    1f5e:	80 bd       	out	0x20, r24	; 32
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	08 95       	ret

00001f66 <nrk_gpio_toggle>:
    1f66:	8f 3f       	cpi	r24, 0xFF	; 255
    1f68:	09 f4       	brne	.+2      	; 0x1f6c <nrk_gpio_toggle+0x6>
    1f6a:	07 c1       	rjmp	.+526    	; 0x217a <nrk_gpio_toggle+0x214>
    1f6c:	28 2f       	mov	r18, r24
    1f6e:	33 27       	eor	r19, r19
    1f70:	a9 01       	movw	r20, r18
    1f72:	47 70       	andi	r20, 0x07	; 7
    1f74:	50 70       	andi	r21, 0x00	; 0
    1f76:	42 30       	cpi	r20, 0x02	; 2
    1f78:	51 05       	cpc	r21, r1
    1f7a:	09 f4       	brne	.+2      	; 0x1f7e <nrk_gpio_toggle+0x18>
    1f7c:	5c c0       	rjmp	.+184    	; 0x2036 <nrk_gpio_toggle+0xd0>
    1f7e:	43 30       	cpi	r20, 0x03	; 3
    1f80:	51 05       	cpc	r21, r1
    1f82:	44 f4       	brge	.+16     	; 0x1f94 <nrk_gpio_toggle+0x2e>
    1f84:	41 15       	cp	r20, r1
    1f86:	51 05       	cpc	r21, r1
    1f88:	91 f0       	breq	.+36     	; 0x1fae <nrk_gpio_toggle+0x48>
    1f8a:	41 30       	cpi	r20, 0x01	; 1
    1f8c:	51 05       	cpc	r21, r1
    1f8e:	09 f0       	breq	.+2      	; 0x1f92 <nrk_gpio_toggle+0x2c>
    1f90:	f4 c0       	rjmp	.+488    	; 0x217a <nrk_gpio_toggle+0x214>
    1f92:	34 c0       	rjmp	.+104    	; 0x1ffc <nrk_gpio_toggle+0x96>
    1f94:	44 30       	cpi	r20, 0x04	; 4
    1f96:	51 05       	cpc	r21, r1
    1f98:	09 f4       	brne	.+2      	; 0x1f9c <nrk_gpio_toggle+0x36>
    1f9a:	9b c0       	rjmp	.+310    	; 0x20d2 <nrk_gpio_toggle+0x16c>
    1f9c:	44 30       	cpi	r20, 0x04	; 4
    1f9e:	51 05       	cpc	r21, r1
    1fa0:	0c f4       	brge	.+2      	; 0x1fa4 <nrk_gpio_toggle+0x3e>
    1fa2:	70 c0       	rjmp	.+224    	; 0x2084 <nrk_gpio_toggle+0x11e>
    1fa4:	45 30       	cpi	r20, 0x05	; 5
    1fa6:	51 05       	cpc	r21, r1
    1fa8:	09 f0       	breq	.+2      	; 0x1fac <nrk_gpio_toggle+0x46>
    1faa:	e7 c0       	rjmp	.+462    	; 0x217a <nrk_gpio_toggle+0x214>
    1fac:	b9 c0       	rjmp	.+370    	; 0x2120 <nrk_gpio_toggle+0x1ba>
    1fae:	89 b3       	in	r24, 0x19	; 25
    1fb0:	a9 01       	movw	r20, r18
    1fb2:	73 e0       	ldi	r23, 0x03	; 3
    1fb4:	56 95       	lsr	r21
    1fb6:	47 95       	ror	r20
    1fb8:	7a 95       	dec	r23
    1fba:	e1 f7       	brne	.-8      	; 0x1fb4 <nrk_gpio_toggle+0x4e>
    1fbc:	99 27       	eor	r25, r25
    1fbe:	04 2e       	mov	r0, r20
    1fc0:	02 c0       	rjmp	.+4      	; 0x1fc6 <nrk_gpio_toggle+0x60>
    1fc2:	95 95       	asr	r25
    1fc4:	87 95       	ror	r24
    1fc6:	0a 94       	dec	r0
    1fc8:	e2 f7       	brpl	.-8      	; 0x1fc2 <nrk_gpio_toggle+0x5c>
    1fca:	80 fd       	sbrc	r24, 0
    1fcc:	0b c0       	rjmp	.+22     	; 0x1fe4 <nrk_gpio_toggle+0x7e>
    1fce:	2b b3       	in	r18, 0x1b	; 27
    1fd0:	81 e0       	ldi	r24, 0x01	; 1
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	02 c0       	rjmp	.+4      	; 0x1fda <nrk_gpio_toggle+0x74>
    1fd6:	88 0f       	add	r24, r24
    1fd8:	99 1f       	adc	r25, r25
    1fda:	4a 95       	dec	r20
    1fdc:	e2 f7       	brpl	.-8      	; 0x1fd6 <nrk_gpio_toggle+0x70>
    1fde:	28 2b       	or	r18, r24
    1fe0:	2b bb       	out	0x1b, r18	; 27
    1fe2:	c8 c0       	rjmp	.+400    	; 0x2174 <nrk_gpio_toggle+0x20e>
    1fe4:	2b b3       	in	r18, 0x1b	; 27
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	02 c0       	rjmp	.+4      	; 0x1ff0 <nrk_gpio_toggle+0x8a>
    1fec:	88 0f       	add	r24, r24
    1fee:	99 1f       	adc	r25, r25
    1ff0:	4a 95       	dec	r20
    1ff2:	e2 f7       	brpl	.-8      	; 0x1fec <nrk_gpio_toggle+0x86>
    1ff4:	80 95       	com	r24
    1ff6:	82 23       	and	r24, r18
    1ff8:	8b bb       	out	0x1b, r24	; 27
    1ffa:	bc c0       	rjmp	.+376    	; 0x2174 <nrk_gpio_toggle+0x20e>
    1ffc:	86 b3       	in	r24, 0x16	; 22
    1ffe:	63 e0       	ldi	r22, 0x03	; 3
    2000:	36 95       	lsr	r19
    2002:	27 95       	ror	r18
    2004:	6a 95       	dec	r22
    2006:	e1 f7       	brne	.-8      	; 0x2000 <nrk_gpio_toggle+0x9a>
    2008:	99 27       	eor	r25, r25
    200a:	02 2e       	mov	r0, r18
    200c:	02 c0       	rjmp	.+4      	; 0x2012 <nrk_gpio_toggle+0xac>
    200e:	95 95       	asr	r25
    2010:	87 95       	ror	r24
    2012:	0a 94       	dec	r0
    2014:	e2 f7       	brpl	.-8      	; 0x200e <nrk_gpio_toggle+0xa8>
    2016:	02 c0       	rjmp	.+4      	; 0x201c <nrk_gpio_toggle+0xb6>
    2018:	44 0f       	add	r20, r20
    201a:	55 1f       	adc	r21, r21
    201c:	2a 95       	dec	r18
    201e:	e2 f7       	brpl	.-8      	; 0x2018 <nrk_gpio_toggle+0xb2>
    2020:	80 fd       	sbrc	r24, 0
    2022:	03 c0       	rjmp	.+6      	; 0x202a <nrk_gpio_toggle+0xc4>
    2024:	88 b3       	in	r24, 0x18	; 24
    2026:	84 2b       	or	r24, r20
    2028:	04 c0       	rjmp	.+8      	; 0x2032 <nrk_gpio_toggle+0xcc>
    202a:	98 b3       	in	r25, 0x18	; 24
    202c:	84 2f       	mov	r24, r20
    202e:	80 95       	com	r24
    2030:	89 23       	and	r24, r25
    2032:	88 bb       	out	0x18, r24	; 24
    2034:	9f c0       	rjmp	.+318    	; 0x2174 <nrk_gpio_toggle+0x20e>
    2036:	83 b3       	in	r24, 0x13	; 19
    2038:	a9 01       	movw	r20, r18
    203a:	23 e0       	ldi	r18, 0x03	; 3
    203c:	56 95       	lsr	r21
    203e:	47 95       	ror	r20
    2040:	2a 95       	dec	r18
    2042:	e1 f7       	brne	.-8      	; 0x203c <nrk_gpio_toggle+0xd6>
    2044:	99 27       	eor	r25, r25
    2046:	04 2e       	mov	r0, r20
    2048:	02 c0       	rjmp	.+4      	; 0x204e <nrk_gpio_toggle+0xe8>
    204a:	95 95       	asr	r25
    204c:	87 95       	ror	r24
    204e:	0a 94       	dec	r0
    2050:	e2 f7       	brpl	.-8      	; 0x204a <nrk_gpio_toggle+0xe4>
    2052:	80 fd       	sbrc	r24, 0
    2054:	0b c0       	rjmp	.+22     	; 0x206c <nrk_gpio_toggle+0x106>
    2056:	25 b3       	in	r18, 0x15	; 21
    2058:	81 e0       	ldi	r24, 0x01	; 1
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	02 c0       	rjmp	.+4      	; 0x2062 <nrk_gpio_toggle+0xfc>
    205e:	88 0f       	add	r24, r24
    2060:	99 1f       	adc	r25, r25
    2062:	4a 95       	dec	r20
    2064:	e2 f7       	brpl	.-8      	; 0x205e <nrk_gpio_toggle+0xf8>
    2066:	28 2b       	or	r18, r24
    2068:	25 bb       	out	0x15, r18	; 21
    206a:	84 c0       	rjmp	.+264    	; 0x2174 <nrk_gpio_toggle+0x20e>
    206c:	25 b3       	in	r18, 0x15	; 21
    206e:	81 e0       	ldi	r24, 0x01	; 1
    2070:	90 e0       	ldi	r25, 0x00	; 0
    2072:	02 c0       	rjmp	.+4      	; 0x2078 <nrk_gpio_toggle+0x112>
    2074:	88 0f       	add	r24, r24
    2076:	99 1f       	adc	r25, r25
    2078:	4a 95       	dec	r20
    207a:	e2 f7       	brpl	.-8      	; 0x2074 <nrk_gpio_toggle+0x10e>
    207c:	80 95       	com	r24
    207e:	82 23       	and	r24, r18
    2080:	85 bb       	out	0x15, r24	; 21
    2082:	78 c0       	rjmp	.+240    	; 0x2174 <nrk_gpio_toggle+0x20e>
    2084:	80 b3       	in	r24, 0x10	; 16
    2086:	a9 01       	movw	r20, r18
    2088:	93 e0       	ldi	r25, 0x03	; 3
    208a:	56 95       	lsr	r21
    208c:	47 95       	ror	r20
    208e:	9a 95       	dec	r25
    2090:	e1 f7       	brne	.-8      	; 0x208a <nrk_gpio_toggle+0x124>
    2092:	99 27       	eor	r25, r25
    2094:	04 2e       	mov	r0, r20
    2096:	02 c0       	rjmp	.+4      	; 0x209c <nrk_gpio_toggle+0x136>
    2098:	95 95       	asr	r25
    209a:	87 95       	ror	r24
    209c:	0a 94       	dec	r0
    209e:	e2 f7       	brpl	.-8      	; 0x2098 <nrk_gpio_toggle+0x132>
    20a0:	80 fd       	sbrc	r24, 0
    20a2:	0b c0       	rjmp	.+22     	; 0x20ba <nrk_gpio_toggle+0x154>
    20a4:	22 b3       	in	r18, 0x12	; 18
    20a6:	81 e0       	ldi	r24, 0x01	; 1
    20a8:	90 e0       	ldi	r25, 0x00	; 0
    20aa:	02 c0       	rjmp	.+4      	; 0x20b0 <nrk_gpio_toggle+0x14a>
    20ac:	88 0f       	add	r24, r24
    20ae:	99 1f       	adc	r25, r25
    20b0:	4a 95       	dec	r20
    20b2:	e2 f7       	brpl	.-8      	; 0x20ac <nrk_gpio_toggle+0x146>
    20b4:	28 2b       	or	r18, r24
    20b6:	22 bb       	out	0x12, r18	; 18
    20b8:	5d c0       	rjmp	.+186    	; 0x2174 <nrk_gpio_toggle+0x20e>
    20ba:	22 b3       	in	r18, 0x12	; 18
    20bc:	81 e0       	ldi	r24, 0x01	; 1
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	02 c0       	rjmp	.+4      	; 0x20c6 <nrk_gpio_toggle+0x160>
    20c2:	88 0f       	add	r24, r24
    20c4:	99 1f       	adc	r25, r25
    20c6:	4a 95       	dec	r20
    20c8:	e2 f7       	brpl	.-8      	; 0x20c2 <nrk_gpio_toggle+0x15c>
    20ca:	80 95       	com	r24
    20cc:	82 23       	and	r24, r18
    20ce:	82 bb       	out	0x12, r24	; 18
    20d0:	51 c0       	rjmp	.+162    	; 0x2174 <nrk_gpio_toggle+0x20e>
    20d2:	81 b1       	in	r24, 0x01	; 1
    20d4:	a9 01       	movw	r20, r18
    20d6:	b3 e0       	ldi	r27, 0x03	; 3
    20d8:	56 95       	lsr	r21
    20da:	47 95       	ror	r20
    20dc:	ba 95       	dec	r27
    20de:	e1 f7       	brne	.-8      	; 0x20d8 <nrk_gpio_toggle+0x172>
    20e0:	99 27       	eor	r25, r25
    20e2:	04 2e       	mov	r0, r20
    20e4:	02 c0       	rjmp	.+4      	; 0x20ea <nrk_gpio_toggle+0x184>
    20e6:	95 95       	asr	r25
    20e8:	87 95       	ror	r24
    20ea:	0a 94       	dec	r0
    20ec:	e2 f7       	brpl	.-8      	; 0x20e6 <nrk_gpio_toggle+0x180>
    20ee:	80 fd       	sbrc	r24, 0
    20f0:	0b c0       	rjmp	.+22     	; 0x2108 <nrk_gpio_toggle+0x1a2>
    20f2:	23 b1       	in	r18, 0x03	; 3
    20f4:	81 e0       	ldi	r24, 0x01	; 1
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	02 c0       	rjmp	.+4      	; 0x20fe <nrk_gpio_toggle+0x198>
    20fa:	88 0f       	add	r24, r24
    20fc:	99 1f       	adc	r25, r25
    20fe:	4a 95       	dec	r20
    2100:	e2 f7       	brpl	.-8      	; 0x20fa <nrk_gpio_toggle+0x194>
    2102:	28 2b       	or	r18, r24
    2104:	23 b9       	out	0x03, r18	; 3
    2106:	36 c0       	rjmp	.+108    	; 0x2174 <nrk_gpio_toggle+0x20e>
    2108:	23 b1       	in	r18, 0x03	; 3
    210a:	81 e0       	ldi	r24, 0x01	; 1
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	02 c0       	rjmp	.+4      	; 0x2114 <nrk_gpio_toggle+0x1ae>
    2110:	88 0f       	add	r24, r24
    2112:	99 1f       	adc	r25, r25
    2114:	4a 95       	dec	r20
    2116:	e2 f7       	brpl	.-8      	; 0x2110 <nrk_gpio_toggle+0x1aa>
    2118:	80 95       	com	r24
    211a:	82 23       	and	r24, r18
    211c:	83 b9       	out	0x03, r24	; 3
    211e:	2a c0       	rjmp	.+84     	; 0x2174 <nrk_gpio_toggle+0x20e>
    2120:	80 b1       	in	r24, 0x00	; 0
    2122:	a9 01       	movw	r20, r18
    2124:	a3 e0       	ldi	r26, 0x03	; 3
    2126:	56 95       	lsr	r21
    2128:	47 95       	ror	r20
    212a:	aa 95       	dec	r26
    212c:	e1 f7       	brne	.-8      	; 0x2126 <nrk_gpio_toggle+0x1c0>
    212e:	99 27       	eor	r25, r25
    2130:	04 2e       	mov	r0, r20
    2132:	02 c0       	rjmp	.+4      	; 0x2138 <nrk_gpio_toggle+0x1d2>
    2134:	95 95       	asr	r25
    2136:	87 95       	ror	r24
    2138:	0a 94       	dec	r0
    213a:	e2 f7       	brpl	.-8      	; 0x2134 <nrk_gpio_toggle+0x1ce>
    213c:	80 fd       	sbrc	r24, 0
    213e:	0d c0       	rjmp	.+26     	; 0x215a <nrk_gpio_toggle+0x1f4>
    2140:	20 91 62 00 	lds	r18, 0x0062
    2144:	81 e0       	ldi	r24, 0x01	; 1
    2146:	90 e0       	ldi	r25, 0x00	; 0
    2148:	02 c0       	rjmp	.+4      	; 0x214e <nrk_gpio_toggle+0x1e8>
    214a:	88 0f       	add	r24, r24
    214c:	99 1f       	adc	r25, r25
    214e:	4a 95       	dec	r20
    2150:	e2 f7       	brpl	.-8      	; 0x214a <nrk_gpio_toggle+0x1e4>
    2152:	28 2b       	or	r18, r24
    2154:	20 93 62 00 	sts	0x0062, r18
    2158:	0d c0       	rjmp	.+26     	; 0x2174 <nrk_gpio_toggle+0x20e>
    215a:	20 91 62 00 	lds	r18, 0x0062
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	02 c0       	rjmp	.+4      	; 0x2168 <nrk_gpio_toggle+0x202>
    2164:	88 0f       	add	r24, r24
    2166:	99 1f       	adc	r25, r25
    2168:	4a 95       	dec	r20
    216a:	e2 f7       	brpl	.-8      	; 0x2164 <nrk_gpio_toggle+0x1fe>
    216c:	80 95       	com	r24
    216e:	82 23       	and	r24, r18
    2170:	80 93 62 00 	sts	0x0062, r24
    2174:	81 e0       	ldi	r24, 0x01	; 1
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	08 95       	ret
    217a:	8f ef       	ldi	r24, 0xFF	; 255
    217c:	9f ef       	ldi	r25, 0xFF	; 255
    217e:	08 95       	ret

00002180 <nrk_gpio_direction>:
    2180:	8f 3f       	cpi	r24, 0xFF	; 255
    2182:	09 f4       	brne	.+2      	; 0x2186 <nrk_gpio_direction+0x6>
    2184:	21 c1       	rjmp	.+578    	; 0x23c8 <nrk_gpio_direction+0x248>
    2186:	48 2f       	mov	r20, r24
    2188:	55 27       	eor	r21, r21
    218a:	66 23       	and	r22, r22
    218c:	09 f0       	breq	.+2      	; 0x2190 <nrk_gpio_direction+0x10>
    218e:	9d c0       	rjmp	.+314    	; 0x22ca <nrk_gpio_direction+0x14a>
    2190:	ca 01       	movw	r24, r20
    2192:	87 70       	andi	r24, 0x07	; 7
    2194:	90 70       	andi	r25, 0x00	; 0
    2196:	82 30       	cpi	r24, 0x02	; 2
    2198:	91 05       	cpc	r25, r1
    219a:	09 f4       	brne	.+2      	; 0x219e <nrk_gpio_direction+0x1e>
    219c:	3e c0       	rjmp	.+124    	; 0x221a <nrk_gpio_direction+0x9a>
    219e:	83 30       	cpi	r24, 0x03	; 3
    21a0:	91 05       	cpc	r25, r1
    21a2:	3c f4       	brge	.+14     	; 0x21b2 <nrk_gpio_direction+0x32>
    21a4:	00 97       	sbiw	r24, 0x00	; 0
    21a6:	89 f0       	breq	.+34     	; 0x21ca <nrk_gpio_direction+0x4a>
    21a8:	81 30       	cpi	r24, 0x01	; 1
    21aa:	91 05       	cpc	r25, r1
    21ac:	09 f0       	breq	.+2      	; 0x21b0 <nrk_gpio_direction+0x30>
    21ae:	0c c1       	rjmp	.+536    	; 0x23c8 <nrk_gpio_direction+0x248>
    21b0:	21 c0       	rjmp	.+66     	; 0x21f4 <nrk_gpio_direction+0x74>
    21b2:	84 30       	cpi	r24, 0x04	; 4
    21b4:	91 05       	cpc	r25, r1
    21b6:	09 f4       	brne	.+2      	; 0x21ba <nrk_gpio_direction+0x3a>
    21b8:	5a c0       	rjmp	.+180    	; 0x226e <nrk_gpio_direction+0xee>
    21ba:	84 30       	cpi	r24, 0x04	; 4
    21bc:	91 05       	cpc	r25, r1
    21be:	0c f4       	brge	.+2      	; 0x21c2 <nrk_gpio_direction+0x42>
    21c0:	41 c0       	rjmp	.+130    	; 0x2244 <nrk_gpio_direction+0xc4>
    21c2:	05 97       	sbiw	r24, 0x05	; 5
    21c4:	09 f0       	breq	.+2      	; 0x21c8 <nrk_gpio_direction+0x48>
    21c6:	00 c1       	rjmp	.+512    	; 0x23c8 <nrk_gpio_direction+0x248>
    21c8:	67 c0       	rjmp	.+206    	; 0x2298 <nrk_gpio_direction+0x118>
    21ca:	3a b3       	in	r19, 0x1a	; 26
    21cc:	b3 e0       	ldi	r27, 0x03	; 3
    21ce:	56 95       	lsr	r21
    21d0:	47 95       	ror	r20
    21d2:	ba 95       	dec	r27
    21d4:	e1 f7       	brne	.-8      	; 0x21ce <nrk_gpio_direction+0x4e>
    21d6:	81 e0       	ldi	r24, 0x01	; 1
    21d8:	90 e0       	ldi	r25, 0x00	; 0
    21da:	02 c0       	rjmp	.+4      	; 0x21e0 <nrk_gpio_direction+0x60>
    21dc:	88 0f       	add	r24, r24
    21de:	99 1f       	adc	r25, r25
    21e0:	4a 95       	dec	r20
    21e2:	e2 f7       	brpl	.-8      	; 0x21dc <nrk_gpio_direction+0x5c>
    21e4:	28 2f       	mov	r18, r24
    21e6:	20 95       	com	r18
    21e8:	23 23       	and	r18, r19
    21ea:	2a bb       	out	0x1a, r18	; 26
    21ec:	2b b3       	in	r18, 0x1b	; 27
    21ee:	82 2b       	or	r24, r18
    21f0:	8b bb       	out	0x1b, r24	; 27
    21f2:	e7 c0       	rjmp	.+462    	; 0x23c2 <nrk_gpio_direction+0x242>
    21f4:	27 b3       	in	r18, 0x17	; 23
    21f6:	a3 e0       	ldi	r26, 0x03	; 3
    21f8:	56 95       	lsr	r21
    21fa:	47 95       	ror	r20
    21fc:	aa 95       	dec	r26
    21fe:	e1 f7       	brne	.-8      	; 0x21f8 <nrk_gpio_direction+0x78>
    2200:	02 c0       	rjmp	.+4      	; 0x2206 <nrk_gpio_direction+0x86>
    2202:	88 0f       	add	r24, r24
    2204:	99 1f       	adc	r25, r25
    2206:	4a 95       	dec	r20
    2208:	e2 f7       	brpl	.-8      	; 0x2202 <nrk_gpio_direction+0x82>
    220a:	98 2f       	mov	r25, r24
    220c:	80 95       	com	r24
    220e:	82 23       	and	r24, r18
    2210:	87 bb       	out	0x17, r24	; 23
    2212:	88 b3       	in	r24, 0x18	; 24
    2214:	98 2b       	or	r25, r24
    2216:	98 bb       	out	0x18, r25	; 24
    2218:	d4 c0       	rjmp	.+424    	; 0x23c2 <nrk_gpio_direction+0x242>
    221a:	34 b3       	in	r19, 0x14	; 20
    221c:	f3 e0       	ldi	r31, 0x03	; 3
    221e:	56 95       	lsr	r21
    2220:	47 95       	ror	r20
    2222:	fa 95       	dec	r31
    2224:	e1 f7       	brne	.-8      	; 0x221e <nrk_gpio_direction+0x9e>
    2226:	81 e0       	ldi	r24, 0x01	; 1
    2228:	90 e0       	ldi	r25, 0x00	; 0
    222a:	02 c0       	rjmp	.+4      	; 0x2230 <nrk_gpio_direction+0xb0>
    222c:	88 0f       	add	r24, r24
    222e:	99 1f       	adc	r25, r25
    2230:	4a 95       	dec	r20
    2232:	e2 f7       	brpl	.-8      	; 0x222c <nrk_gpio_direction+0xac>
    2234:	28 2f       	mov	r18, r24
    2236:	20 95       	com	r18
    2238:	23 23       	and	r18, r19
    223a:	24 bb       	out	0x14, r18	; 20
    223c:	25 b3       	in	r18, 0x15	; 21
    223e:	82 2b       	or	r24, r18
    2240:	85 bb       	out	0x15, r24	; 21
    2242:	bf c0       	rjmp	.+382    	; 0x23c2 <nrk_gpio_direction+0x242>
    2244:	31 b3       	in	r19, 0x11	; 17
    2246:	e3 e0       	ldi	r30, 0x03	; 3
    2248:	56 95       	lsr	r21
    224a:	47 95       	ror	r20
    224c:	ea 95       	dec	r30
    224e:	e1 f7       	brne	.-8      	; 0x2248 <nrk_gpio_direction+0xc8>
    2250:	81 e0       	ldi	r24, 0x01	; 1
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	02 c0       	rjmp	.+4      	; 0x225a <nrk_gpio_direction+0xda>
    2256:	88 0f       	add	r24, r24
    2258:	99 1f       	adc	r25, r25
    225a:	4a 95       	dec	r20
    225c:	e2 f7       	brpl	.-8      	; 0x2256 <nrk_gpio_direction+0xd6>
    225e:	28 2f       	mov	r18, r24
    2260:	20 95       	com	r18
    2262:	23 23       	and	r18, r19
    2264:	21 bb       	out	0x11, r18	; 17
    2266:	22 b3       	in	r18, 0x12	; 18
    2268:	82 2b       	or	r24, r18
    226a:	82 bb       	out	0x12, r24	; 18
    226c:	aa c0       	rjmp	.+340    	; 0x23c2 <nrk_gpio_direction+0x242>
    226e:	32 b1       	in	r19, 0x02	; 2
    2270:	73 e0       	ldi	r23, 0x03	; 3
    2272:	56 95       	lsr	r21
    2274:	47 95       	ror	r20
    2276:	7a 95       	dec	r23
    2278:	e1 f7       	brne	.-8      	; 0x2272 <nrk_gpio_direction+0xf2>
    227a:	81 e0       	ldi	r24, 0x01	; 1
    227c:	90 e0       	ldi	r25, 0x00	; 0
    227e:	02 c0       	rjmp	.+4      	; 0x2284 <nrk_gpio_direction+0x104>
    2280:	88 0f       	add	r24, r24
    2282:	99 1f       	adc	r25, r25
    2284:	4a 95       	dec	r20
    2286:	e2 f7       	brpl	.-8      	; 0x2280 <nrk_gpio_direction+0x100>
    2288:	28 2f       	mov	r18, r24
    228a:	20 95       	com	r18
    228c:	23 23       	and	r18, r19
    228e:	22 b9       	out	0x02, r18	; 2
    2290:	23 b1       	in	r18, 0x03	; 3
    2292:	82 2b       	or	r24, r18
    2294:	83 b9       	out	0x03, r24	; 3
    2296:	95 c0       	rjmp	.+298    	; 0x23c2 <nrk_gpio_direction+0x242>
    2298:	30 91 61 00 	lds	r19, 0x0061
    229c:	63 e0       	ldi	r22, 0x03	; 3
    229e:	56 95       	lsr	r21
    22a0:	47 95       	ror	r20
    22a2:	6a 95       	dec	r22
    22a4:	e1 f7       	brne	.-8      	; 0x229e <nrk_gpio_direction+0x11e>
    22a6:	81 e0       	ldi	r24, 0x01	; 1
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	02 c0       	rjmp	.+4      	; 0x22b0 <nrk_gpio_direction+0x130>
    22ac:	88 0f       	add	r24, r24
    22ae:	99 1f       	adc	r25, r25
    22b0:	4a 95       	dec	r20
    22b2:	e2 f7       	brpl	.-8      	; 0x22ac <nrk_gpio_direction+0x12c>
    22b4:	28 2f       	mov	r18, r24
    22b6:	20 95       	com	r18
    22b8:	23 23       	and	r18, r19
    22ba:	20 93 61 00 	sts	0x0061, r18
    22be:	20 91 62 00 	lds	r18, 0x0062
    22c2:	82 2b       	or	r24, r18
    22c4:	80 93 62 00 	sts	0x0062, r24
    22c8:	7c c0       	rjmp	.+248    	; 0x23c2 <nrk_gpio_direction+0x242>
    22ca:	9a 01       	movw	r18, r20
    22cc:	27 70       	andi	r18, 0x07	; 7
    22ce:	30 70       	andi	r19, 0x00	; 0
    22d0:	22 30       	cpi	r18, 0x02	; 2
    22d2:	31 05       	cpc	r19, r1
    22d4:	a9 f1       	breq	.+106    	; 0x2340 <nrk_gpio_direction+0x1c0>
    22d6:	23 30       	cpi	r18, 0x03	; 3
    22d8:	31 05       	cpc	r19, r1
    22da:	44 f4       	brge	.+16     	; 0x22ec <nrk_gpio_direction+0x16c>
    22dc:	21 15       	cp	r18, r1
    22de:	31 05       	cpc	r19, r1
    22e0:	89 f0       	breq	.+34     	; 0x2304 <nrk_gpio_direction+0x184>
    22e2:	21 30       	cpi	r18, 0x01	; 1
    22e4:	31 05       	cpc	r19, r1
    22e6:	09 f0       	breq	.+2      	; 0x22ea <nrk_gpio_direction+0x16a>
    22e8:	6f c0       	rjmp	.+222    	; 0x23c8 <nrk_gpio_direction+0x248>
    22ea:	1c c0       	rjmp	.+56     	; 0x2324 <nrk_gpio_direction+0x1a4>
    22ec:	24 30       	cpi	r18, 0x04	; 4
    22ee:	31 05       	cpc	r19, r1
    22f0:	09 f4       	brne	.+2      	; 0x22f4 <nrk_gpio_direction+0x174>
    22f2:	46 c0       	rjmp	.+140    	; 0x2380 <nrk_gpio_direction+0x200>
    22f4:	24 30       	cpi	r18, 0x04	; 4
    22f6:	31 05       	cpc	r19, r1
    22f8:	9c f1       	brlt	.+102    	; 0x2360 <nrk_gpio_direction+0x1e0>
    22fa:	25 30       	cpi	r18, 0x05	; 5
    22fc:	31 05       	cpc	r19, r1
    22fe:	09 f0       	breq	.+2      	; 0x2302 <nrk_gpio_direction+0x182>
    2300:	63 c0       	rjmp	.+198    	; 0x23c8 <nrk_gpio_direction+0x248>
    2302:	4e c0       	rjmp	.+156    	; 0x23a0 <nrk_gpio_direction+0x220>
    2304:	2a b3       	in	r18, 0x1a	; 26
    2306:	33 e0       	ldi	r19, 0x03	; 3
    2308:	56 95       	lsr	r21
    230a:	47 95       	ror	r20
    230c:	3a 95       	dec	r19
    230e:	e1 f7       	brne	.-8      	; 0x2308 <nrk_gpio_direction+0x188>
    2310:	81 e0       	ldi	r24, 0x01	; 1
    2312:	90 e0       	ldi	r25, 0x00	; 0
    2314:	02 c0       	rjmp	.+4      	; 0x231a <nrk_gpio_direction+0x19a>
    2316:	88 0f       	add	r24, r24
    2318:	99 1f       	adc	r25, r25
    231a:	4a 95       	dec	r20
    231c:	e2 f7       	brpl	.-8      	; 0x2316 <nrk_gpio_direction+0x196>
    231e:	28 2b       	or	r18, r24
    2320:	2a bb       	out	0x1a, r18	; 26
    2322:	4f c0       	rjmp	.+158    	; 0x23c2 <nrk_gpio_direction+0x242>
    2324:	87 b3       	in	r24, 0x17	; 23
    2326:	93 e0       	ldi	r25, 0x03	; 3
    2328:	56 95       	lsr	r21
    232a:	47 95       	ror	r20
    232c:	9a 95       	dec	r25
    232e:	e1 f7       	brne	.-8      	; 0x2328 <nrk_gpio_direction+0x1a8>
    2330:	02 c0       	rjmp	.+4      	; 0x2336 <nrk_gpio_direction+0x1b6>
    2332:	22 0f       	add	r18, r18
    2334:	33 1f       	adc	r19, r19
    2336:	4a 95       	dec	r20
    2338:	e2 f7       	brpl	.-8      	; 0x2332 <nrk_gpio_direction+0x1b2>
    233a:	82 2b       	or	r24, r18
    233c:	87 bb       	out	0x17, r24	; 23
    233e:	41 c0       	rjmp	.+130    	; 0x23c2 <nrk_gpio_direction+0x242>
    2340:	24 b3       	in	r18, 0x14	; 20
    2342:	b3 e0       	ldi	r27, 0x03	; 3
    2344:	56 95       	lsr	r21
    2346:	47 95       	ror	r20
    2348:	ba 95       	dec	r27
    234a:	e1 f7       	brne	.-8      	; 0x2344 <nrk_gpio_direction+0x1c4>
    234c:	81 e0       	ldi	r24, 0x01	; 1
    234e:	90 e0       	ldi	r25, 0x00	; 0
    2350:	02 c0       	rjmp	.+4      	; 0x2356 <nrk_gpio_direction+0x1d6>
    2352:	88 0f       	add	r24, r24
    2354:	99 1f       	adc	r25, r25
    2356:	4a 95       	dec	r20
    2358:	e2 f7       	brpl	.-8      	; 0x2352 <nrk_gpio_direction+0x1d2>
    235a:	28 2b       	or	r18, r24
    235c:	24 bb       	out	0x14, r18	; 20
    235e:	31 c0       	rjmp	.+98     	; 0x23c2 <nrk_gpio_direction+0x242>
    2360:	21 b3       	in	r18, 0x11	; 17
    2362:	a3 e0       	ldi	r26, 0x03	; 3
    2364:	56 95       	lsr	r21
    2366:	47 95       	ror	r20
    2368:	aa 95       	dec	r26
    236a:	e1 f7       	brne	.-8      	; 0x2364 <nrk_gpio_direction+0x1e4>
    236c:	81 e0       	ldi	r24, 0x01	; 1
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	02 c0       	rjmp	.+4      	; 0x2376 <nrk_gpio_direction+0x1f6>
    2372:	88 0f       	add	r24, r24
    2374:	99 1f       	adc	r25, r25
    2376:	4a 95       	dec	r20
    2378:	e2 f7       	brpl	.-8      	; 0x2372 <nrk_gpio_direction+0x1f2>
    237a:	28 2b       	or	r18, r24
    237c:	21 bb       	out	0x11, r18	; 17
    237e:	21 c0       	rjmp	.+66     	; 0x23c2 <nrk_gpio_direction+0x242>
    2380:	22 b1       	in	r18, 0x02	; 2
    2382:	f3 e0       	ldi	r31, 0x03	; 3
    2384:	56 95       	lsr	r21
    2386:	47 95       	ror	r20
    2388:	fa 95       	dec	r31
    238a:	e1 f7       	brne	.-8      	; 0x2384 <nrk_gpio_direction+0x204>
    238c:	81 e0       	ldi	r24, 0x01	; 1
    238e:	90 e0       	ldi	r25, 0x00	; 0
    2390:	02 c0       	rjmp	.+4      	; 0x2396 <nrk_gpio_direction+0x216>
    2392:	88 0f       	add	r24, r24
    2394:	99 1f       	adc	r25, r25
    2396:	4a 95       	dec	r20
    2398:	e2 f7       	brpl	.-8      	; 0x2392 <nrk_gpio_direction+0x212>
    239a:	28 2b       	or	r18, r24
    239c:	22 b9       	out	0x02, r18	; 2
    239e:	11 c0       	rjmp	.+34     	; 0x23c2 <nrk_gpio_direction+0x242>
    23a0:	20 91 61 00 	lds	r18, 0x0061
    23a4:	e3 e0       	ldi	r30, 0x03	; 3
    23a6:	56 95       	lsr	r21
    23a8:	47 95       	ror	r20
    23aa:	ea 95       	dec	r30
    23ac:	e1 f7       	brne	.-8      	; 0x23a6 <nrk_gpio_direction+0x226>
    23ae:	81 e0       	ldi	r24, 0x01	; 1
    23b0:	90 e0       	ldi	r25, 0x00	; 0
    23b2:	02 c0       	rjmp	.+4      	; 0x23b8 <nrk_gpio_direction+0x238>
    23b4:	88 0f       	add	r24, r24
    23b6:	99 1f       	adc	r25, r25
    23b8:	4a 95       	dec	r20
    23ba:	e2 f7       	brpl	.-8      	; 0x23b4 <nrk_gpio_direction+0x234>
    23bc:	28 2b       	or	r18, r24
    23be:	20 93 61 00 	sts	0x0061, r18
    23c2:	81 e0       	ldi	r24, 0x01	; 1
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	08 95       	ret
    23c8:	8f ef       	ldi	r24, 0xFF	; 255
    23ca:	9f ef       	ldi	r25, 0xFF	; 255
    23cc:	08 95       	ret

000023ce <nrk_get_button>:
    23ce:	8f ef       	ldi	r24, 0xFF	; 255
    23d0:	9f ef       	ldi	r25, 0xFF	; 255
    23d2:	08 95       	ret

000023d4 <nrk_led_toggle>:
    23d4:	00 97       	sbiw	r24, 0x00	; 0
    23d6:	11 f4       	brne	.+4      	; 0x23dc <nrk_led_toggle+0x8>
    23d8:	80 e0       	ldi	r24, 0x00	; 0
    23da:	04 c0       	rjmp	.+8      	; 0x23e4 <nrk_led_toggle+0x10>
    23dc:	81 30       	cpi	r24, 0x01	; 1
    23de:	91 05       	cpc	r25, r1
    23e0:	31 f4       	brne	.+12     	; 0x23ee <nrk_led_toggle+0x1a>
    23e2:	88 e0       	ldi	r24, 0x08	; 8
    23e4:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <nrk_gpio_toggle>
    23e8:	81 e0       	ldi	r24, 0x01	; 1
    23ea:	90 e0       	ldi	r25, 0x00	; 0
    23ec:	08 95       	ret
    23ee:	02 97       	sbiw	r24, 0x02	; 2
    23f0:	19 f0       	breq	.+6      	; 0x23f8 <nrk_led_toggle+0x24>
    23f2:	8f ef       	ldi	r24, 0xFF	; 255
    23f4:	9f ef       	ldi	r25, 0xFF	; 255
    23f6:	08 95       	ret
    23f8:	80 e1       	ldi	r24, 0x10	; 16
    23fa:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <nrk_gpio_toggle>
    23fe:	81 e0       	ldi	r24, 0x01	; 1
    2400:	90 e0       	ldi	r25, 0x00	; 0
    2402:	08 95       	ret

00002404 <nrk_led_clr>:
    2404:	00 97       	sbiw	r24, 0x00	; 0
    2406:	11 f4       	brne	.+4      	; 0x240c <nrk_led_clr+0x8>
    2408:	80 e0       	ldi	r24, 0x00	; 0
    240a:	04 c0       	rjmp	.+8      	; 0x2414 <nrk_led_clr+0x10>
    240c:	81 30       	cpi	r24, 0x01	; 1
    240e:	91 05       	cpc	r25, r1
    2410:	31 f4       	brne	.+12     	; 0x241e <nrk_led_clr+0x1a>
    2412:	88 e0       	ldi	r24, 0x08	; 8
    2414:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <nrk_gpio_set>
    2418:	81 e0       	ldi	r24, 0x01	; 1
    241a:	90 e0       	ldi	r25, 0x00	; 0
    241c:	08 95       	ret
    241e:	02 97       	sbiw	r24, 0x02	; 2
    2420:	19 f0       	breq	.+6      	; 0x2428 <nrk_led_clr+0x24>
    2422:	8f ef       	ldi	r24, 0xFF	; 255
    2424:	9f ef       	ldi	r25, 0xFF	; 255
    2426:	08 95       	ret
    2428:	80 e1       	ldi	r24, 0x10	; 16
    242a:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <nrk_gpio_set>
    242e:	81 e0       	ldi	r24, 0x01	; 1
    2430:	90 e0       	ldi	r25, 0x00	; 0
    2432:	08 95       	ret

00002434 <nrk_led_set>:
    2434:	00 97       	sbiw	r24, 0x00	; 0
    2436:	11 f4       	brne	.+4      	; 0x243c <nrk_led_set+0x8>
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	04 c0       	rjmp	.+8      	; 0x2444 <nrk_led_set+0x10>
    243c:	81 30       	cpi	r24, 0x01	; 1
    243e:	91 05       	cpc	r25, r1
    2440:	31 f4       	brne	.+12     	; 0x244e <nrk_led_set+0x1a>
    2442:	88 e0       	ldi	r24, 0x08	; 8
    2444:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <nrk_gpio_clr>
    2448:	81 e0       	ldi	r24, 0x01	; 1
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	08 95       	ret
    244e:	02 97       	sbiw	r24, 0x02	; 2
    2450:	19 f0       	breq	.+6      	; 0x2458 <nrk_led_set+0x24>
    2452:	8f ef       	ldi	r24, 0xFF	; 255
    2454:	9f ef       	ldi	r25, 0xFF	; 255
    2456:	08 95       	ret
    2458:	80 e1       	ldi	r24, 0x10	; 16
    245a:	0e 94 e0 0e 	call	0x1dc0	; 0x1dc0 <nrk_gpio_clr>
    245e:	81 e0       	ldi	r24, 0x01	; 1
    2460:	90 e0       	ldi	r25, 0x00	; 0
    2462:	08 95       	ret

00002464 <putc0>:
    2464:	5d 9b       	sbis	0x0b, 5	; 11
    2466:	fe cf       	rjmp	.-4      	; 0x2464 <putc0>
    2468:	5d 98       	cbi	0x0b, 5	; 11
    246a:	8c b9       	out	0x0c, r24	; 12
    246c:	08 95       	ret

0000246e <putc1>:
    246e:	98 2f       	mov	r25, r24
    2470:	80 91 9b 00 	lds	r24, 0x009B
    2474:	85 ff       	sbrs	r24, 5
    2476:	fc cf       	rjmp	.-8      	; 0x2470 <putc1+0x2>
    2478:	80 91 9b 00 	lds	r24, 0x009B
    247c:	8f 7d       	andi	r24, 0xDF	; 223
    247e:	80 93 9b 00 	sts	0x009B, r24
    2482:	90 93 9c 00 	sts	0x009C, r25
    2486:	08 95       	ret

00002488 <setup_uart0>:
    2488:	29 2f       	mov	r18, r25
    248a:	33 27       	eor	r19, r19
    248c:	20 93 90 00 	sts	0x0090, r18
    2490:	89 b9       	out	0x09, r24	; 9
    2492:	86 e0       	ldi	r24, 0x06	; 6
    2494:	80 93 95 00 	sts	0x0095, r24
    2498:	52 98       	cbi	0x0a, 2	; 10
    249a:	59 9a       	sbi	0x0b, 1	; 11
    249c:	8a b1       	in	r24, 0x0a	; 10
    249e:	88 61       	ori	r24, 0x18	; 24
    24a0:	8a b9       	out	0x0a, r24	; 10
    24a2:	08 95       	ret

000024a4 <setup_uart1>:
    24a4:	29 2f       	mov	r18, r25
    24a6:	33 27       	eor	r19, r19
    24a8:	20 93 98 00 	sts	0x0098, r18
    24ac:	80 93 99 00 	sts	0x0099, r24
    24b0:	86 e0       	ldi	r24, 0x06	; 6
    24b2:	80 93 9d 00 	sts	0x009D, r24
    24b6:	ea e9       	ldi	r30, 0x9A	; 154
    24b8:	f0 e0       	ldi	r31, 0x00	; 0
    24ba:	80 81       	ld	r24, Z
    24bc:	8b 7f       	andi	r24, 0xFB	; 251
    24be:	80 83       	st	Z, r24
    24c0:	ab e9       	ldi	r26, 0x9B	; 155
    24c2:	b0 e0       	ldi	r27, 0x00	; 0
    24c4:	8c 91       	ld	r24, X
    24c6:	82 60       	ori	r24, 0x02	; 2
    24c8:	8c 93       	st	X, r24
    24ca:	80 81       	ld	r24, Z
    24cc:	88 61       	ori	r24, 0x18	; 24
    24ce:	80 83       	st	Z, r24
    24d0:	08 95       	ret

000024d2 <getc1>:
    24d2:	80 91 9b 00 	lds	r24, 0x009B
    24d6:	87 ff       	sbrs	r24, 7
    24d8:	fc cf       	rjmp	.-8      	; 0x24d2 <getc1>
    24da:	80 91 9b 00 	lds	r24, 0x009B
    24de:	8f 77       	andi	r24, 0x7F	; 127
    24e0:	80 93 9b 00 	sts	0x009B, r24
    24e4:	80 91 9c 00 	lds	r24, 0x009C
    24e8:	99 27       	eor	r25, r25
    24ea:	08 95       	ret

000024ec <nrk_setup_uart>:
    24ec:	ef 92       	push	r14
    24ee:	ff 92       	push	r15
    24f0:	0f 93       	push	r16
    24f2:	1f 93       	push	r17
    24f4:	0e 94 44 12 	call	0x2488	; 0x2488 <setup_uart0>
    24f8:	02 e4       	ldi	r16, 0x42	; 66
    24fa:	1e e0       	ldi	r17, 0x0E	; 14
    24fc:	42 e3       	ldi	r20, 0x32	; 50
    24fe:	e4 2e       	mov	r14, r20
    2500:	42 e1       	ldi	r20, 0x12	; 18
    2502:	f4 2e       	mov	r15, r20
    2504:	b8 01       	movw	r22, r16
    2506:	c7 01       	movw	r24, r14
    2508:	0e 94 10 2a 	call	0x5420	; 0x5420 <fdevopen>
    250c:	90 93 a2 09 	sts	0x09A2, r25
    2510:	80 93 a1 09 	sts	0x09A1, r24
    2514:	b8 01       	movw	r22, r16
    2516:	c7 01       	movw	r24, r14
    2518:	0e 94 10 2a 	call	0x5420	; 0x5420 <fdevopen>
    251c:	90 93 a0 09 	sts	0x09A0, r25
    2520:	80 93 9f 09 	sts	0x099F, r24
    2524:	1f 91       	pop	r17
    2526:	0f 91       	pop	r16
    2528:	ff 90       	pop	r15
    252a:	ef 90       	pop	r14
    252c:	08 95       	ret

0000252e <nrk_kprintf>:
    252e:	cf 93       	push	r28
    2530:	df 93       	push	r29
    2532:	ec 01       	movw	r28, r24
    2534:	07 c0       	rjmp	.+14     	; 0x2544 <nrk_kprintf+0x16>
    2536:	60 91 a1 09 	lds	r22, 0x09A1
    253a:	70 91 a2 09 	lds	r23, 0x09A2
    253e:	99 27       	eor	r25, r25
    2540:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
    2544:	fe 01       	movw	r30, r28
    2546:	21 96       	adiw	r28, 0x01	; 1
    2548:	84 91       	lpm	r24, Z
    254a:	88 23       	and	r24, r24
    254c:	a1 f7       	brne	.-24     	; 0x2536 <nrk_kprintf+0x8>
    254e:	df 91       	pop	r29
    2550:	cf 91       	pop	r28
    2552:	08 95       	ret

00002554 <halWait>:
	...
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
    255c:	01 97       	sbiw	r24, 0x01	; 1
    255e:	d1 f7       	brne	.-12     	; 0x2554 <halWait>
    2560:	08 95       	ret

00002562 <read_eeprom_mac_address>:
*  Nano-RK, a real-time operating system for sensor networks.
*  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
*  All rights reserved.
*
*  This is the Open Source Version of Nano-RK included as part of a Dual
*  Licensing Model. If you are unsure which license to use please refer to:
    2562:	fc 01       	movw	r30, r24

uint8_t 
eeprom_read_byte (const uint8_t *addr) 
{
  uint8_t result;
  __asm__ __volatile__
    2564:	a0 e0       	ldi	r26, 0x00	; 0
    2566:	b0 e0       	ldi	r27, 0x00	; 0
    2568:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__eeprom_read_byte_1C1D1E>
    256c:	40 2d       	mov	r20, r0
*  http://www.nanork.org/nano-RK/wiki/Licensing
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, version 2.0 of the License.
    256e:	43 83       	std	Z+3, r20	; 0x03
    2570:	a1 e0       	ldi	r26, 0x01	; 1
    2572:	b0 e0       	ldi	r27, 0x00	; 0
    2574:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__eeprom_read_byte_1C1D1E>
    2578:	80 2d       	mov	r24, r0
*
    257a:	82 83       	std	Z+2, r24	; 0x02
    257c:	a2 e0       	ldi	r26, 0x02	; 2
    257e:	b0 e0       	ldi	r27, 0x00	; 0
    2580:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__eeprom_read_byte_1C1D1E>
    2584:	30 2d       	mov	r19, r0
*  This program is distributed in the hope that it will be useful,
    2586:	31 83       	std	Z+1, r19	; 0x01
    2588:	a3 e0       	ldi	r26, 0x03	; 3
    258a:	b0 e0       	ldi	r27, 0x00	; 0
    258c:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__eeprom_read_byte_1C1D1E>
    2590:	90 2d       	mov	r25, r0
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
    2592:	90 83       	st	Z, r25
    2594:	a4 e0       	ldi	r26, 0x04	; 4
    2596:	b0 e0       	ldi	r27, 0x00	; 0
    2598:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <__eeprom_read_byte_1C1D1E>
    259c:	20 2d       	mov	r18, r0
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
    259e:	83 0f       	add	r24, r19
*  You should have received a copy of the GNU General Public License
    25a0:	84 0f       	add	r24, r20
*  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
    25a2:	89 0f       	add	r24, r25
    25a4:	28 17       	cp	r18, r24
    25a6:	19 f4       	brne	.+6      	; 0x25ae <read_eeprom_mac_address+0x4c>
    25a8:	81 e0       	ldi	r24, 0x01	; 1
    25aa:	90 e0       	ldi	r25, 0x00	; 0
    25ac:	08 95       	ret
    25ae:	8f ef       	ldi	r24, 0xFF	; 255
    25b0:	9f ef       	ldi	r25, 0xFF	; 255
*  Contributing Authors (specific to this file):
*  Chipcon Development Team 
*******************************************************************************/
    25b2:	08 95       	ret

000025b4 <nrk_int_disable>:
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
    25b4:	f8 94       	cli
    25b6:	08 95       	ret

000025b8 <nrk_int_enable>:
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
	
    // Write it to the CC2420
    25b8:	78 94       	sei
    25ba:	08 95       	ret

000025bc <nrk_version>:
    25bc:	85 e6       	ldi	r24, 0x65	; 101
    25be:	90 e0       	ldi	r25, 0x00	; 0
    25c0:	08 95       	ret

000025c2 <_nrk_timer_tick>:
    25c2:	0e 94 97 22 	call	0x452e	; 0x452e <_nrk_scheduler>
    25c6:	08 95       	ret

000025c8 <nrk_TCB_init>:
    25c8:	af 92       	push	r10
    25ca:	bf 92       	push	r11
    25cc:	cf 92       	push	r12
    25ce:	df 92       	push	r13
    25d0:	ef 92       	push	r14
    25d2:	ff 92       	push	r15
    25d4:	0f 93       	push	r16
    25d6:	1f 93       	push	r17
    25d8:	cf 93       	push	r28
    25da:	df 93       	push	r29
    25dc:	ec 01       	movw	r28, r24
    25de:	6b 01       	movw	r12, r22
    25e0:	5a 01       	movw	r10, r20
    25e2:	8a 85       	ldd	r24, Y+10	; 0x0a
    25e4:	82 30       	cpi	r24, 0x02	; 2
    25e6:	21 f0       	breq	.+8      	; 0x25f0 <nrk_TCB_init+0x28>
    25e8:	80 91 59 09 	lds	r24, 0x0959
    25ec:	88 83       	st	Y, r24
    25ee:	01 c0       	rjmp	.+2      	; 0x25f2 <nrk_TCB_init+0x2a>
    25f0:	18 82       	st	Y, r1
    25f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    25f4:	28 81       	ld	r18, Y
    25f6:	83 30       	cpi	r24, 0x03	; 3
    25f8:	09 f0       	breq	.+2      	; 0x25fc <nrk_TCB_init+0x34>
    25fa:	4b c0       	rjmp	.+150    	; 0x2692 <nrk_TCB_init+0xca>
    25fc:	82 2f       	mov	r24, r18
    25fe:	99 27       	eor	r25, r25
    2600:	87 fd       	sbrc	r24, 7
    2602:	90 95       	com	r25
    2604:	38 e2       	ldi	r19, 0x28	; 40
    2606:	e3 2e       	mov	r14, r19
    2608:	f1 2c       	mov	r15, r1
    260a:	8e 9d       	mul	r24, r14
    260c:	f0 01       	movw	r30, r0
    260e:	8f 9d       	mul	r24, r15
    2610:	f0 0d       	add	r31, r0
    2612:	9e 9d       	mul	r25, r14
    2614:	f0 0d       	add	r31, r0
    2616:	11 24       	eor	r1, r1
    2618:	ec 52       	subi	r30, 0x2C	; 44
    261a:	f8 4f       	sbci	r31, 0xF8	; 248
    261c:	81 e0       	ldi	r24, 0x01	; 1
    261e:	87 a3       	std	Z+39, r24	; 0x27
    2620:	08 81       	ld	r16, Y
    2622:	11 27       	eor	r17, r17
    2624:	07 fd       	sbrc	r16, 7
    2626:	10 95       	com	r17
    2628:	2c 89       	ldd	r18, Y+20	; 0x14
    262a:	3d 89       	ldd	r19, Y+21	; 0x15
    262c:	4e 89       	ldd	r20, Y+22	; 0x16
    262e:	5f 89       	ldd	r21, Y+23	; 0x17
    2630:	68 8d       	ldd	r22, Y+24	; 0x18
    2632:	79 8d       	ldd	r23, Y+25	; 0x19
    2634:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2636:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2638:	0e 94 b2 20 	call	0x4164	; 0x4164 <_nrk_time_to_ticks>
    263c:	0e 9d       	mul	r16, r14
    263e:	f0 01       	movw	r30, r0
    2640:	0f 9d       	mul	r16, r15
    2642:	f0 0d       	add	r31, r0
    2644:	1e 9d       	mul	r17, r14
    2646:	f0 0d       	add	r31, r0
    2648:	11 24       	eor	r1, r1
    264a:	ec 52       	subi	r30, 0x2C	; 44
    264c:	f8 4f       	sbci	r31, 0xF8	; 248
    264e:	95 a3       	std	Z+37, r25	; 0x25
    2650:	84 a3       	std	Z+36, r24	; 0x24
    2652:	88 81       	ld	r24, Y
    2654:	99 27       	eor	r25, r25
    2656:	87 fd       	sbrc	r24, 7
    2658:	90 95       	com	r25
    265a:	8e 9d       	mul	r24, r14
    265c:	f0 01       	movw	r30, r0
    265e:	8f 9d       	mul	r24, r15
    2660:	f0 0d       	add	r31, r0
    2662:	9e 9d       	mul	r25, r14
    2664:	f0 0d       	add	r31, r0
    2666:	11 24       	eor	r1, r1
    2668:	ec 52       	subi	r30, 0x2C	; 44
    266a:	f8 4f       	sbci	r31, 0xF8	; 248
    266c:	84 a1       	ldd	r24, Z+36	; 0x24
    266e:	95 a1       	ldd	r25, Z+37	; 0x25
    2670:	93 a3       	std	Z+35, r25	; 0x23
    2672:	82 a3       	std	Z+34, r24	; 0x22
    2674:	88 81       	ld	r24, Y
    2676:	99 27       	eor	r25, r25
    2678:	87 fd       	sbrc	r24, 7
    267a:	90 95       	com	r25
    267c:	8e 9d       	mul	r24, r14
    267e:	f0 01       	movw	r30, r0
    2680:	8f 9d       	mul	r24, r15
    2682:	f0 0d       	add	r31, r0
    2684:	9e 9d       	mul	r25, r14
    2686:	f0 0d       	add	r31, r0
    2688:	11 24       	eor	r1, r1
    268a:	ec 52       	subi	r30, 0x2C	; 44
    268c:	f8 4f       	sbci	r31, 0xF8	; 248
    268e:	16 a2       	std	Z+38, r1	; 0x26
    2690:	0f c0       	rjmp	.+30     	; 0x26b0 <nrk_TCB_init+0xe8>
    2692:	33 27       	eor	r19, r19
    2694:	27 fd       	sbrc	r18, 7
    2696:	30 95       	com	r19
    2698:	88 e2       	ldi	r24, 0x28	; 40
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	28 9f       	mul	r18, r24
    269e:	f0 01       	movw	r30, r0
    26a0:	29 9f       	mul	r18, r25
    26a2:	f0 0d       	add	r31, r0
    26a4:	38 9f       	mul	r19, r24
    26a6:	f0 0d       	add	r31, r0
    26a8:	11 24       	eor	r1, r1
    26aa:	ec 52       	subi	r30, 0x2C	; 44
    26ac:	f8 4f       	sbci	r31, 0xF8	; 248
    26ae:	17 a2       	std	Z+39, r1	; 0x27
    26b0:	80 91 59 09 	lds	r24, 0x0959
    26b4:	89 30       	cpi	r24, 0x09	; 9
    26b6:	20 f0       	brcs	.+8      	; 0x26c0 <nrk_TCB_init+0xf8>
    26b8:	60 e0       	ldi	r22, 0x00	; 0
    26ba:	87 e0       	ldi	r24, 0x07	; 7
    26bc:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    26c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    26c2:	82 30       	cpi	r24, 0x02	; 2
    26c4:	29 f0       	breq	.+10     	; 0x26d0 <nrk_TCB_init+0x108>
    26c6:	80 91 59 09 	lds	r24, 0x0959
    26ca:	8f 5f       	subi	r24, 0xFF	; 255
    26cc:	80 93 59 09 	sts	0x0959, r24
    26d0:	80 91 59 09 	lds	r24, 0x0959
    26d4:	88 23       	and	r24, r24
    26d6:	19 f4       	brne	.+6      	; 0x26de <nrk_TCB_init+0x116>
    26d8:	81 e0       	ldi	r24, 0x01	; 1
    26da:	80 93 59 09 	sts	0x0959, r24
    26de:	88 81       	ld	r24, Y
    26e0:	99 27       	eor	r25, r25
    26e2:	87 fd       	sbrc	r24, 7
    26e4:	90 95       	com	r25
    26e6:	28 e2       	ldi	r18, 0x28	; 40
    26e8:	e2 2e       	mov	r14, r18
    26ea:	f1 2c       	mov	r15, r1
    26ec:	8e 9d       	mul	r24, r14
    26ee:	f0 01       	movw	r30, r0
    26f0:	8f 9d       	mul	r24, r15
    26f2:	f0 0d       	add	r31, r0
    26f4:	9e 9d       	mul	r25, r14
    26f6:	f0 0d       	add	r31, r0
    26f8:	11 24       	eor	r1, r1
    26fa:	ec 52       	subi	r30, 0x2C	; 44
    26fc:	f8 4f       	sbci	r31, 0xF8	; 248
    26fe:	d1 82       	std	Z+1, r13	; 0x01
    2700:	c0 82       	st	Z, r12
    2702:	88 81       	ld	r24, Y
    2704:	99 27       	eor	r25, r25
    2706:	87 fd       	sbrc	r24, 7
    2708:	90 95       	com	r25
    270a:	8e 9d       	mul	r24, r14
    270c:	f0 01       	movw	r30, r0
    270e:	8f 9d       	mul	r24, r15
    2710:	f0 0d       	add	r31, r0
    2712:	9e 9d       	mul	r25, r14
    2714:	f0 0d       	add	r31, r0
    2716:	11 24       	eor	r1, r1
    2718:	ec 52       	subi	r30, 0x2C	; 44
    271a:	f8 4f       	sbci	r31, 0xF8	; 248
    271c:	88 85       	ldd	r24, Y+8	; 0x08
    271e:	82 87       	std	Z+10, r24	; 0x0a
    2720:	88 81       	ld	r24, Y
    2722:	99 27       	eor	r25, r25
    2724:	87 fd       	sbrc	r24, 7
    2726:	90 95       	com	r25
    2728:	8e 9d       	mul	r24, r14
    272a:	f0 01       	movw	r30, r0
    272c:	8f 9d       	mul	r24, r15
    272e:	f0 0d       	add	r31, r0
    2730:	9e 9d       	mul	r25, r14
    2732:	f0 0d       	add	r31, r0
    2734:	11 24       	eor	r1, r1
    2736:	ec 52       	subi	r30, 0x2C	; 44
    2738:	f8 4f       	sbci	r31, 0xF8	; 248
    273a:	83 e0       	ldi	r24, 0x03	; 3
    273c:	81 87       	std	Z+9, r24	; 0x09
    273e:	88 81       	ld	r24, Y
    2740:	99 27       	eor	r25, r25
    2742:	87 fd       	sbrc	r24, 7
    2744:	90 95       	com	r25
    2746:	8e 9d       	mul	r24, r14
    2748:	f0 01       	movw	r30, r0
    274a:	8f 9d       	mul	r24, r15
    274c:	f0 0d       	add	r31, r0
    274e:	9e 9d       	mul	r25, r14
    2750:	f0 0d       	add	r31, r0
    2752:	11 24       	eor	r1, r1
    2754:	ec 52       	subi	r30, 0x2C	; 44
    2756:	f8 4f       	sbci	r31, 0xF8	; 248
    2758:	89 85       	ldd	r24, Y+9	; 0x09
    275a:	83 87       	std	Z+11, r24	; 0x0b
    275c:	28 81       	ld	r18, Y
    275e:	82 2f       	mov	r24, r18
    2760:	99 27       	eor	r25, r25
    2762:	87 fd       	sbrc	r24, 7
    2764:	90 95       	com	r25
    2766:	8e 9d       	mul	r24, r14
    2768:	f0 01       	movw	r30, r0
    276a:	8f 9d       	mul	r24, r15
    276c:	f0 0d       	add	r31, r0
    276e:	9e 9d       	mul	r25, r14
    2770:	f0 0d       	add	r31, r0
    2772:	11 24       	eor	r1, r1
    2774:	ec 52       	subi	r30, 0x2C	; 44
    2776:	f8 4f       	sbci	r31, 0xF8	; 248
    2778:	20 87       	std	Z+8, r18	; 0x08
    277a:	88 81       	ld	r24, Y
    277c:	99 27       	eor	r25, r25
    277e:	87 fd       	sbrc	r24, 7
    2780:	90 95       	com	r25
    2782:	8e 9d       	mul	r24, r14
    2784:	f0 01       	movw	r30, r0
    2786:	8f 9d       	mul	r24, r15
    2788:	f0 0d       	add	r31, r0
    278a:	9e 9d       	mul	r25, r14
    278c:	f0 0d       	add	r31, r0
    278e:	11 24       	eor	r1, r1
    2790:	ec 52       	subi	r30, 0x2C	; 44
    2792:	f8 4f       	sbci	r31, 0xF8	; 248
    2794:	15 82       	std	Z+5, r1	; 0x05
    2796:	08 81       	ld	r16, Y
    2798:	11 27       	eor	r17, r17
    279a:	07 fd       	sbrc	r16, 7
    279c:	10 95       	com	r17
    279e:	2c 85       	ldd	r18, Y+12	; 0x0c
    27a0:	3d 85       	ldd	r19, Y+13	; 0x0d
    27a2:	4e 85       	ldd	r20, Y+14	; 0x0e
    27a4:	5f 85       	ldd	r21, Y+15	; 0x0f
    27a6:	68 89       	ldd	r22, Y+16	; 0x10
    27a8:	79 89       	ldd	r23, Y+17	; 0x11
    27aa:	8a 89       	ldd	r24, Y+18	; 0x12
    27ac:	9b 89       	ldd	r25, Y+19	; 0x13
    27ae:	0e 94 b2 20 	call	0x4164	; 0x4164 <_nrk_time_to_ticks>
    27b2:	0e 9d       	mul	r16, r14
    27b4:	f0 01       	movw	r30, r0
    27b6:	0f 9d       	mul	r16, r15
    27b8:	f0 0d       	add	r31, r0
    27ba:	1e 9d       	mul	r17, r14
    27bc:	f0 0d       	add	r31, r0
    27be:	11 24       	eor	r1, r1
    27c0:	ec 52       	subi	r30, 0x2C	; 44
    27c2:	f8 4f       	sbci	r31, 0xF8	; 248
    27c4:	95 8f       	std	Z+29, r25	; 0x1d
    27c6:	84 8f       	std	Z+28, r24	; 0x1c
    27c8:	08 81       	ld	r16, Y
    27ca:	11 27       	eor	r17, r17
    27cc:	07 fd       	sbrc	r16, 7
    27ce:	10 95       	com	r17
    27d0:	2c 8d       	ldd	r18, Y+28	; 0x1c
    27d2:	3d 8d       	ldd	r19, Y+29	; 0x1d
    27d4:	4e 8d       	ldd	r20, Y+30	; 0x1e
    27d6:	5f 8d       	ldd	r21, Y+31	; 0x1f
    27d8:	68 a1       	ldd	r22, Y+32	; 0x20
    27da:	79 a1       	ldd	r23, Y+33	; 0x21
    27dc:	8a a1       	ldd	r24, Y+34	; 0x22
    27de:	9b a1       	ldd	r25, Y+35	; 0x23
    27e0:	0e 94 b2 20 	call	0x4164	; 0x4164 <_nrk_time_to_ticks>
    27e4:	0e 9d       	mul	r16, r14
    27e6:	f0 01       	movw	r30, r0
    27e8:	0f 9d       	mul	r16, r15
    27ea:	f0 0d       	add	r31, r0
    27ec:	1e 9d       	mul	r17, r14
    27ee:	f0 0d       	add	r31, r0
    27f0:	11 24       	eor	r1, r1
    27f2:	ec 52       	subi	r30, 0x2C	; 44
    27f4:	f8 4f       	sbci	r31, 0xF8	; 248
    27f6:	97 8b       	std	Z+23, r25	; 0x17
    27f8:	86 8b       	std	Z+22, r24	; 0x16
    27fa:	88 81       	ld	r24, Y
    27fc:	99 27       	eor	r25, r25
    27fe:	87 fd       	sbrc	r24, 7
    2800:	90 95       	com	r25
    2802:	8e 9d       	mul	r24, r14
    2804:	f0 01       	movw	r30, r0
    2806:	8f 9d       	mul	r24, r15
    2808:	f0 0d       	add	r31, r0
    280a:	9e 9d       	mul	r25, r14
    280c:	f0 0d       	add	r31, r0
    280e:	11 24       	eor	r1, r1
    2810:	ec 52       	subi	r30, 0x2C	; 44
    2812:	f8 4f       	sbci	r31, 0xF8	; 248
    2814:	86 89       	ldd	r24, Z+22	; 0x16
    2816:	97 89       	ldd	r25, Z+23	; 0x17
    2818:	24 8d       	ldd	r18, Z+28	; 0x1c
    281a:	35 8d       	ldd	r19, Z+29	; 0x1d
    281c:	82 0f       	add	r24, r18
    281e:	93 1f       	adc	r25, r19
    2820:	91 8f       	std	Z+25, r25	; 0x19
    2822:	80 8f       	std	Z+24, r24	; 0x18
    2824:	08 81       	ld	r16, Y
    2826:	11 27       	eor	r17, r17
    2828:	07 fd       	sbrc	r16, 7
    282a:	10 95       	com	r17
    282c:	2c 89       	ldd	r18, Y+20	; 0x14
    282e:	3d 89       	ldd	r19, Y+21	; 0x15
    2830:	4e 89       	ldd	r20, Y+22	; 0x16
    2832:	5f 89       	ldd	r21, Y+23	; 0x17
    2834:	68 8d       	ldd	r22, Y+24	; 0x18
    2836:	79 8d       	ldd	r23, Y+25	; 0x19
    2838:	8a 8d       	ldd	r24, Y+26	; 0x1a
    283a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    283c:	0e 94 b2 20 	call	0x4164	; 0x4164 <_nrk_time_to_ticks>
    2840:	0e 9d       	mul	r16, r14
    2842:	f0 01       	movw	r30, r0
    2844:	0f 9d       	mul	r16, r15
    2846:	f0 0d       	add	r31, r0
    2848:	1e 9d       	mul	r17, r14
    284a:	f0 0d       	add	r31, r0
    284c:	11 24       	eor	r1, r1
    284e:	ec 52       	subi	r30, 0x2C	; 44
    2850:	f8 4f       	sbci	r31, 0xF8	; 248
    2852:	97 8f       	std	Z+31, r25	; 0x1f
    2854:	86 8f       	std	Z+30, r24	; 0x1e
    2856:	88 81       	ld	r24, Y
    2858:	99 27       	eor	r25, r25
    285a:	87 fd       	sbrc	r24, 7
    285c:	90 95       	com	r25
    285e:	8e 9d       	mul	r24, r14
    2860:	f0 01       	movw	r30, r0
    2862:	8f 9d       	mul	r24, r15
    2864:	f0 0d       	add	r31, r0
    2866:	9e 9d       	mul	r25, r14
    2868:	f0 0d       	add	r31, r0
    286a:	11 24       	eor	r1, r1
    286c:	ec 52       	subi	r30, 0x2C	; 44
    286e:	f8 4f       	sbci	r31, 0xF8	; 248
    2870:	86 8d       	ldd	r24, Z+30	; 0x1e
    2872:	97 8d       	ldd	r25, Z+31	; 0x1f
    2874:	93 8f       	std	Z+27, r25	; 0x1b
    2876:	82 8f       	std	Z+26, r24	; 0x1a
    2878:	88 81       	ld	r24, Y
    287a:	99 27       	eor	r25, r25
    287c:	87 fd       	sbrc	r24, 7
    287e:	90 95       	com	r25
    2880:	8e 9d       	mul	r24, r14
    2882:	f0 01       	movw	r30, r0
    2884:	8f 9d       	mul	r24, r15
    2886:	f0 0d       	add	r31, r0
    2888:	9e 9d       	mul	r25, r14
    288a:	f0 0d       	add	r31, r0
    288c:	11 24       	eor	r1, r1
    288e:	ec 52       	subi	r30, 0x2C	; 44
    2890:	f8 4f       	sbci	r31, 0xF8	; 248
    2892:	81 e0       	ldi	r24, 0x01	; 1
    2894:	90 e0       	ldi	r25, 0x00	; 0
    2896:	91 a3       	std	Z+33, r25	; 0x21
    2898:	80 a3       	std	Z+32, r24	; 0x20
    289a:	88 81       	ld	r24, Y
    289c:	99 27       	eor	r25, r25
    289e:	87 fd       	sbrc	r24, 7
    28a0:	90 95       	com	r25
    28a2:	8e 9d       	mul	r24, r14
    28a4:	f0 01       	movw	r30, r0
    28a6:	8f 9d       	mul	r24, r15
    28a8:	f0 0d       	add	r31, r0
    28aa:	9e 9d       	mul	r25, r14
    28ac:	f0 0d       	add	r31, r0
    28ae:	11 24       	eor	r1, r1
    28b0:	ec 52       	subi	r30, 0x2C	; 44
    28b2:	f8 4f       	sbci	r31, 0xF8	; 248
    28b4:	b3 82       	std	Z+3, r11	; 0x03
    28b6:	a2 82       	std	Z+2, r10	; 0x02
    28b8:	88 81       	ld	r24, Y
    28ba:	99 27       	eor	r25, r25
    28bc:	87 fd       	sbrc	r24, 7
    28be:	90 95       	com	r25
    28c0:	8e 9d       	mul	r24, r14
    28c2:	f0 01       	movw	r30, r0
    28c4:	8f 9d       	mul	r24, r15
    28c6:	f0 0d       	add	r31, r0
    28c8:	9e 9d       	mul	r25, r14
    28ca:	f0 0d       	add	r31, r0
    28cc:	11 24       	eor	r1, r1
    28ce:	ec 52       	subi	r30, 0x2C	; 44
    28d0:	f8 4f       	sbci	r31, 0xF8	; 248
    28d2:	81 e0       	ldi	r24, 0x01	; 1
    28d4:	85 87       	std	Z+13, r24	; 0x0d
    28d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    28d8:	82 30       	cpi	r24, 0x02	; 2
    28da:	79 f4       	brne	.+30     	; 0x28fa <nrk_TCB_init+0x332>
    28dc:	19 86       	std	Y+9, r1	; 0x09
    28de:	88 81       	ld	r24, Y
    28e0:	99 27       	eor	r25, r25
    28e2:	87 fd       	sbrc	r24, 7
    28e4:	90 95       	com	r25
    28e6:	8e 9d       	mul	r24, r14
    28e8:	f0 01       	movw	r30, r0
    28ea:	8f 9d       	mul	r24, r15
    28ec:	f0 0d       	add	r31, r0
    28ee:	9e 9d       	mul	r25, r14
    28f0:	f0 0d       	add	r31, r0
    28f2:	11 24       	eor	r1, r1
    28f4:	ec 52       	subi	r30, 0x2C	; 44
    28f6:	f8 4f       	sbci	r31, 0xF8	; 248
    28f8:	13 86       	std	Z+11, r1	; 0x0b
    28fa:	28 81       	ld	r18, Y
    28fc:	33 27       	eor	r19, r19
    28fe:	27 fd       	sbrc	r18, 7
    2900:	30 95       	com	r19
    2902:	89 85       	ldd	r24, Y+9	; 0x09
    2904:	99 27       	eor	r25, r25
    2906:	9f 93       	push	r25
    2908:	8f 93       	push	r24
    290a:	2e 9d       	mul	r18, r14
    290c:	f0 01       	movw	r30, r0
    290e:	2f 9d       	mul	r18, r15
    2910:	f0 0d       	add	r31, r0
    2912:	3e 9d       	mul	r19, r14
    2914:	f0 0d       	add	r31, r0
    2916:	11 24       	eor	r1, r1
    2918:	ec 52       	subi	r30, 0x2C	; 44
    291a:	f8 4f       	sbci	r31, 0xF8	; 248
    291c:	83 85       	ldd	r24, Z+11	; 0x0b
    291e:	99 27       	eor	r25, r25
    2920:	9f 93       	push	r25
    2922:	8f 93       	push	r24
    2924:	3f 93       	push	r19
    2926:	2f 93       	push	r18
    2928:	86 e4       	ldi	r24, 0x46	; 70
    292a:	93 e0       	ldi	r25, 0x03	; 3
    292c:	9f 93       	push	r25
    292e:	8f 93       	push	r24
    2930:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    2934:	8d b7       	in	r24, 0x3d	; 61
    2936:	9e b7       	in	r25, 0x3e	; 62
    2938:	08 96       	adiw	r24, 0x08	; 8
    293a:	0f b6       	in	r0, 0x3f	; 63
    293c:	f8 94       	cli
    293e:	9e bf       	out	0x3e, r25	; 62
    2940:	0f be       	out	0x3f, r0	; 63
    2942:	8d bf       	out	0x3d, r24	; 61
    2944:	81 e0       	ldi	r24, 0x01	; 1
    2946:	90 e0       	ldi	r25, 0x00	; 0
    2948:	df 91       	pop	r29
    294a:	cf 91       	pop	r28
    294c:	1f 91       	pop	r17
    294e:	0f 91       	pop	r16
    2950:	ff 90       	pop	r15
    2952:	ef 90       	pop	r14
    2954:	df 90       	pop	r13
    2956:	cf 90       	pop	r12
    2958:	bf 90       	pop	r11
    295a:	af 90       	pop	r10
    295c:	08 95       	ret

0000295e <nrk_start>:
    295e:	8f 92       	push	r8
    2960:	9f 92       	push	r9
    2962:	af 92       	push	r10
    2964:	bf 92       	push	r11
    2966:	cf 92       	push	r12
    2968:	df 92       	push	r13
    296a:	ef 92       	push	r14
    296c:	ff 92       	push	r15
    296e:	0f 93       	push	r16
    2970:	1f 93       	push	r17
    2972:	cf 93       	push	r28
    2974:	df 93       	push	r29
    2976:	4c ed       	ldi	r20, 0xDC	; 220
    2978:	a4 2e       	mov	r10, r20
    297a:	47 e0       	ldi	r20, 0x07	; 7
    297c:	b4 2e       	mov	r11, r20
    297e:	cc 24       	eor	r12, r12
    2980:	dd 24       	eor	r13, r13
    2982:	45 01       	movw	r8, r10
    2984:	ec 2c       	mov	r14, r12
    2986:	f5 01       	movw	r30, r10
    2988:	f0 80       	ld	r15, Z
    298a:	ff ef       	ldi	r31, 0xFF	; 255
    298c:	ff 16       	cp	r15, r31
    298e:	91 f0       	breq	.+36     	; 0x29b4 <nrk_start+0x56>
    2990:	e4 01       	movw	r28, r8
    2992:	00 e0       	ldi	r16, 0x00	; 0
    2994:	10 e0       	ldi	r17, 0x00	; 0
    2996:	e0 16       	cp	r14, r16
    2998:	39 f0       	breq	.+14     	; 0x29a8 <nrk_start+0x4a>
    299a:	88 81       	ld	r24, Y
    299c:	f8 16       	cp	r15, r24
    299e:	21 f4       	brne	.+8      	; 0x29a8 <nrk_start+0x4a>
    29a0:	6f 2d       	mov	r22, r15
    29a2:	85 e0       	ldi	r24, 0x05	; 5
    29a4:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    29a8:	0f 5f       	subi	r16, 0xFF	; 255
    29aa:	1f 4f       	sbci	r17, 0xFF	; 255
    29ac:	a8 96       	adiw	r28, 0x28	; 40
    29ae:	09 30       	cpi	r16, 0x09	; 9
    29b0:	11 05       	cpc	r17, r1
    29b2:	89 f7       	brne	.-30     	; 0x2996 <nrk_start+0x38>
    29b4:	08 94       	sec
    29b6:	c1 1c       	adc	r12, r1
    29b8:	d1 1c       	adc	r13, r1
    29ba:	88 e2       	ldi	r24, 0x28	; 40
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	a8 0e       	add	r10, r24
    29c0:	b9 1e       	adc	r11, r25
    29c2:	99 e0       	ldi	r25, 0x09	; 9
    29c4:	c9 16       	cp	r12, r25
    29c6:	d1 04       	cpc	r13, r1
    29c8:	e9 f6       	brne	.-70     	; 0x2984 <nrk_start+0x26>
    29ca:	0e 94 1c 1c 	call	0x3838	; 0x3838 <nrk_get_high_ready_task_ID>
    29ce:	48 2f       	mov	r20, r24
    29d0:	55 27       	eor	r21, r21
    29d2:	47 fd       	sbrc	r20, 7
    29d4:	50 95       	com	r21
    29d6:	28 e2       	ldi	r18, 0x28	; 40
    29d8:	30 e0       	ldi	r19, 0x00	; 0
    29da:	42 9f       	mul	r20, r18
    29dc:	f0 01       	movw	r30, r0
    29de:	43 9f       	mul	r20, r19
    29e0:	f0 0d       	add	r31, r0
    29e2:	52 9f       	mul	r21, r18
    29e4:	f0 0d       	add	r31, r0
    29e6:	11 24       	eor	r1, r1
    29e8:	ec 52       	subi	r30, 0x2C	; 44
    29ea:	f8 4f       	sbci	r31, 0xF8	; 248
    29ec:	32 85       	ldd	r19, Z+10	; 0x0a
    29ee:	30 93 6c 09 	sts	0x096C, r19
    29f2:	28 e2       	ldi	r18, 0x28	; 40
    29f4:	82 02       	muls	r24, r18
    29f6:	c0 01       	movw	r24, r0
    29f8:	11 24       	eor	r1, r1
    29fa:	8c 52       	subi	r24, 0x2C	; 44
    29fc:	98 4f       	sbci	r25, 0xF8	; 248
    29fe:	90 93 6b 09 	sts	0x096B, r25
    2a02:	80 93 6a 09 	sts	0x096A, r24
    2a06:	90 93 5c 09 	sts	0x095C, r25
    2a0a:	80 93 5b 09 	sts	0x095B, r24
    2a0e:	30 93 5d 09 	sts	0x095D, r19
    2a12:	0e 94 86 28 	call	0x510c	; 0x510c <nrk_target_start>
    2a16:	0e 94 75 28 	call	0x50ea	; 0x50ea <nrk_stack_pointer_init>
    2a1a:	0e 94 aa 28 	call	0x5154	; 0x5154 <nrk_start_high_ready_task>
    2a1e:	ff cf       	rjmp	.-2      	; 0x2a1e <nrk_start+0xc0>

00002a20 <nrk_init>:
    2a20:	0f 93       	push	r16
    2a22:	1f 93       	push	r17
    2a24:	cf 93       	push	r28
    2a26:	df 93       	push	r29
    2a28:	cd b7       	in	r28, 0x3d	; 61
    2a2a:	de b7       	in	r29, 0x3e	; 62
    2a2c:	a4 97       	sbiw	r28, 0x24	; 36
    2a2e:	0f b6       	in	r0, 0x3f	; 63
    2a30:	f8 94       	cli
    2a32:	de bf       	out	0x3e, r29	; 62
    2a34:	0f be       	out	0x3f, r0	; 63
    2a36:	cd bf       	out	0x3d, r28	; 61
    2a38:	0e 94 e6 18 	call	0x31cc	; 0x31cc <nrk_signal_create>
    2a3c:	80 93 5a 09 	sts	0x095A, r24
    2a40:	8f 3f       	cpi	r24, 0xFF	; 255
    2a42:	21 f4       	brne	.+8      	; 0x2a4c <nrk_init+0x2c>
    2a44:	60 e0       	ldi	r22, 0x00	; 0
    2a46:	8e e0       	ldi	r24, 0x0E	; 14
    2a48:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    2a4c:	0e 94 e3 27 	call	0x4fc6	; 0x4fc6 <_nrk_startup_ok>
    2a50:	88 23       	and	r24, r24
    2a52:	21 f4       	brne	.+8      	; 0x2a5c <nrk_init+0x3c>
    2a54:	60 e0       	ldi	r22, 0x00	; 0
    2a56:	86 e0       	ldi	r24, 0x06	; 6
    2a58:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    2a5c:	0e 94 ec 27 	call	0x4fd8	; 0x4fd8 <nrk_watchdog_check>
    2a60:	8f 3f       	cpi	r24, 0xFF	; 255
    2a62:	31 f4       	brne	.+12     	; 0x2a70 <nrk_init+0x50>
    2a64:	0e 94 f7 27 	call	0x4fee	; 0x4fee <nrk_watchdog_disable>
    2a68:	60 e0       	ldi	r22, 0x00	; 0
    2a6a:	80 e1       	ldi	r24, 0x10	; 16
    2a6c:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    2a70:	0e 94 04 28 	call	0x5008	; 0x5008 <nrk_watchdog_enable>
    2a74:	10 92 5d 09 	sts	0x095D, r1
    2a78:	10 92 6b 09 	sts	0x096B, r1
    2a7c:	10 92 6a 09 	sts	0x096A, r1
    2a80:	10 92 5c 09 	sts	0x095C, r1
    2a84:	10 92 5b 09 	sts	0x095B, r1
    2a88:	10 92 6c 09 	sts	0x096C, r1
    2a8c:	10 92 69 09 	sts	0x0969, r1
    2a90:	ee e3       	ldi	r30, 0x3E	; 62
    2a92:	f9 e0       	ldi	r31, 0x09	; 9
    2a94:	8f ef       	ldi	r24, 0xFF	; 255
    2a96:	80 83       	st	Z, r24
    2a98:	82 83       	std	Z+2, r24	; 0x02
    2a9a:	81 83       	std	Z+1, r24	; 0x01
    2a9c:	33 96       	adiw	r30, 0x03	; 3
    2a9e:	29 e0       	ldi	r18, 0x09	; 9
    2aa0:	e9 35       	cpi	r30, 0x59	; 89
    2aa2:	f2 07       	cpc	r31, r18
    2aa4:	b9 f7       	brne	.-18     	; 0x2a94 <nrk_init+0x74>
    2aa6:	e4 ed       	ldi	r30, 0xD4	; 212
    2aa8:	f7 e0       	ldi	r31, 0x07	; 7
    2aaa:	83 e6       	ldi	r24, 0x63	; 99
    2aac:	82 87       	std	Z+10, r24	; 0x0a
    2aae:	8f ef       	ldi	r24, 0xFF	; 255
    2ab0:	80 87       	std	Z+8, r24	; 0x08
    2ab2:	b8 96       	adiw	r30, 0x28	; 40
    2ab4:	89 e0       	ldi	r24, 0x09	; 9
    2ab6:	ec 33       	cpi	r30, 0x3C	; 60
    2ab8:	f8 07       	cpc	r31, r24
    2aba:	b9 f7       	brne	.-18     	; 0x2aaa <nrk_init+0x8a>
    2abc:	ed e6       	ldi	r30, 0x6D	; 109
    2abe:	f9 e0       	ldi	r31, 0x09	; 9
    2ac0:	cf 01       	movw	r24, r30
    2ac2:	05 96       	adiw	r24, 0x05	; 5
    2ac4:	94 83       	std	Z+4, r25	; 0x04
    2ac6:	83 83       	std	Z+3, r24	; 0x03
    2ac8:	f7 83       	std	Z+7, r31	; 0x07
    2aca:	e6 83       	std	Z+6, r30	; 0x06
    2acc:	fc 01       	movw	r30, r24
    2ace:	29 e0       	ldi	r18, 0x09	; 9
    2ad0:	8a 39       	cpi	r24, 0x9A	; 154
    2ad2:	92 07       	cpc	r25, r18
    2ad4:	a9 f7       	brne	.-22     	; 0x2ac0 <nrk_init+0xa0>
    2ad6:	10 92 6f 09 	sts	0x096F, r1
    2ada:	10 92 6e 09 	sts	0x096E, r1
    2ade:	10 92 9e 09 	sts	0x099E, r1
    2ae2:	10 92 9d 09 	sts	0x099D, r1
    2ae6:	10 92 60 09 	sts	0x0960, r1
    2aea:	10 92 5f 09 	sts	0x095F, r1
    2aee:	8d 97       	sbiw	r24, 0x2d	; 45
    2af0:	90 93 d3 07 	sts	0x07D3, r25
    2af4:	80 93 d2 07 	sts	0x07D2, r24
    2af8:	63 e7       	ldi	r22, 0x73	; 115
    2afa:	72 e2       	ldi	r23, 0x22	; 34
    2afc:	8e 01       	movw	r16, r28
    2afe:	0f 5f       	subi	r16, 0xFF	; 255
    2b00:	1f 4f       	sbci	r17, 0xFF	; 255
    2b02:	c8 01       	movw	r24, r16
    2b04:	0e 94 13 28 	call	0x5026	; 0x5026 <nrk_task_set_entry_function>
    2b08:	40 e8       	ldi	r20, 0x80	; 128
    2b0a:	50 e0       	ldi	r21, 0x00	; 0
    2b0c:	63 e1       	ldi	r22, 0x13	; 19
    2b0e:	77 e0       	ldi	r23, 0x07	; 7
    2b10:	c8 01       	movw	r24, r16
    2b12:	0e 94 8b 28 	call	0x5116	; 0x5116 <nrk_task_set_stk>
    2b16:	85 e5       	ldi	r24, 0x55	; 85
    2b18:	80 93 13 07 	sts	0x0713, r24
    2b1c:	19 86       	std	Y+9, r1	; 0x09
    2b1e:	1d 8e       	std	Y+29, r1	; 0x1d
    2b20:	1e 8e       	std	Y+30, r1	; 0x1e
    2b22:	1f 8e       	std	Y+31, r1	; 0x1f
    2b24:	18 a2       	std	Y+32, r1	; 0x20
    2b26:	19 a2       	std	Y+33, r1	; 0x21
    2b28:	1a a2       	std	Y+34, r1	; 0x22
    2b2a:	1b a2       	std	Y+35, r1	; 0x23
    2b2c:	1c a2       	std	Y+36, r1	; 0x24
    2b2e:	91 e0       	ldi	r25, 0x01	; 1
    2b30:	98 87       	std	Y+8, r25	; 0x08
    2b32:	82 e0       	ldi	r24, 0x02	; 2
    2b34:	8b 87       	std	Y+11, r24	; 0x0b
    2b36:	9c 87       	std	Y+12, r25	; 0x0c
    2b38:	c8 01       	movw	r24, r16
    2b3a:	0e 94 3b 1f 	call	0x3e76	; 0x3e76 <nrk_activate_task>
    2b3e:	a4 96       	adiw	r28, 0x24	; 36
    2b40:	0f b6       	in	r0, 0x3f	; 63
    2b42:	f8 94       	cli
    2b44:	de bf       	out	0x3e, r29	; 62
    2b46:	0f be       	out	0x3f, r0	; 63
    2b48:	cd bf       	out	0x3d, r28	; 61
    2b4a:	df 91       	pop	r29
    2b4c:	cf 91       	pop	r28
    2b4e:	1f 91       	pop	r17
    2b50:	0f 91       	pop	r16
    2b52:	08 95       	ret

00002b54 <nrk_halt>:
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
    2b54:	f8 94       	cli
    2b56:	ff cf       	rjmp	.-2      	; 0x2b56 <nrk_halt+0x2>

00002b58 <_nrk_errno_set>:
//	DESCRIPTION:
//		Programs CC2420 for a given IEEE 802.15.4 channel. 
//		Note that SRXON, STXON or STXONCCA must be run for the new channel selection to take full effect.
//
//	PARAMETERS:
//		UINT8 channel
    2b58:	e0 91 6a 09 	lds	r30, 0x096A
    2b5c:	f0 91 6b 09 	lds	r31, 0x096B
    2b60:	85 87       	std	Z+13, r24	; 0x0d
    2b62:	08 95       	ret

00002b64 <nrk_errno_get>:
//			The channel number (11-26)
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
    2b64:	e0 91 6a 09 	lds	r30, 0x096A
    2b68:	f0 91 6b 09 	lds	r31, 0x096B
    2b6c:	85 85       	ldd	r24, Z+13	; 0x0d
	
	// Derive frequency programming from the given channel number
    2b6e:	99 27       	eor	r25, r25
    2b70:	08 95       	ret

00002b72 <nrk_error_get>:
    2b72:	dc 01       	movw	r26, r24
    2b74:	fb 01       	movw	r30, r22
    2b76:	80 91 12 07 	lds	r24, 0x0712
    2b7a:	88 23       	and	r24, r24
    2b7c:	19 f4       	brne	.+6      	; 0x2b84 <nrk_error_get+0x12>
    2b7e:	80 e0       	ldi	r24, 0x00	; 0
    2b80:	90 e0       	ldi	r25, 0x00	; 0
    2b82:	08 95       	ret
    2b84:	80 83       	st	Z, r24
    2b86:	80 91 e0 05 	lds	r24, 0x05E0
    2b8a:	8c 93       	st	X, r24
    2b8c:	81 e0       	ldi	r24, 0x01	; 1
    2b8e:	90 e0       	ldi	r25, 0x00	; 0
    2b90:	08 95       	ret

00002b92 <pause>:
    2b92:	cf 93       	push	r28
    2b94:	df 93       	push	r29
    2b96:	cd b7       	in	r28, 0x3d	; 61
    2b98:	de b7       	in	r29, 0x3e	; 62
    2b9a:	21 97       	sbiw	r28, 0x01	; 1
    2b9c:	0f b6       	in	r0, 0x3f	; 63
    2b9e:	f8 94       	cli
    2ba0:	de bf       	out	0x3e, r29	; 62
    2ba2:	0f be       	out	0x3f, r0	; 63
    2ba4:	cd bf       	out	0x3d, r28	; 61
    2ba6:	19 82       	std	Y+1, r1	; 0x01
    2ba8:	07 c0       	rjmp	.+14     	; 0x2bb8 <pause+0x26>
    2baa:	80 ed       	ldi	r24, 0xD0	; 208
    2bac:	97 e0       	ldi	r25, 0x07	; 7
    2bae:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    2bb2:	89 81       	ldd	r24, Y+1	; 0x01
    2bb4:	8f 5f       	subi	r24, 0xFF	; 255
    2bb6:	89 83       	std	Y+1, r24	; 0x01
    2bb8:	89 81       	ldd	r24, Y+1	; 0x01
    2bba:	84 36       	cpi	r24, 0x64	; 100
    2bbc:	b0 f3       	brcs	.-20     	; 0x2baa <pause+0x18>
    2bbe:	21 96       	adiw	r28, 0x01	; 1
    2bc0:	0f b6       	in	r0, 0x3f	; 63
    2bc2:	f8 94       	cli
    2bc4:	de bf       	out	0x3e, r29	; 62
    2bc6:	0f be       	out	0x3f, r0	; 63
    2bc8:	cd bf       	out	0x3d, r28	; 61
    2bca:	df 91       	pop	r29
    2bcc:	cf 91       	pop	r28
    2bce:	08 95       	ret

00002bd0 <blink_dot>:
    2bd0:	81 e0       	ldi	r24, 0x01	; 1
    2bd2:	90 e0       	ldi	r25, 0x00	; 0
    2bd4:	0e 94 1a 12 	call	0x2434	; 0x2434 <nrk_led_set>
    2bd8:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2bdc:	81 e0       	ldi	r24, 0x01	; 1
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2be4:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2be8:	08 95       	ret

00002bea <blink_dash>:
    2bea:	81 e0       	ldi	r24, 0x01	; 1
    2bec:	90 e0       	ldi	r25, 0x00	; 0
    2bee:	0e 94 1a 12 	call	0x2434	; 0x2434 <nrk_led_set>
    2bf2:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2bf6:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2bfa:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2bfe:	81 e0       	ldi	r24, 0x01	; 1
    2c00:	90 e0       	ldi	r25, 0x00	; 0
    2c02:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2c06:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2c0a:	08 95       	ret

00002c0c <blink_morse_code_error>:
    2c0c:	ef 92       	push	r14
    2c0e:	ff 92       	push	r15
    2c10:	0f 93       	push	r16
    2c12:	1f 93       	push	r17
    2c14:	cf 93       	push	r28
    2c16:	df 93       	push	r29
    2c18:	cd b7       	in	r28, 0x3d	; 61
    2c1a:	de b7       	in	r29, 0x3e	; 62
    2c1c:	23 97       	sbiw	r28, 0x03	; 3
    2c1e:	0f b6       	in	r0, 0x3f	; 63
    2c20:	f8 94       	cli
    2c22:	de bf       	out	0x3e, r29	; 62
    2c24:	0f be       	out	0x3f, r0	; 63
    2c26:	cd bf       	out	0x3d, r28	; 61
    2c28:	99 27       	eor	r25, r25
    2c2a:	9f 93       	push	r25
    2c2c:	8f 93       	push	r24
    2c2e:	8c e7       	ldi	r24, 0x7C	; 124
    2c30:	93 e0       	ldi	r25, 0x03	; 3
    2c32:	9f 93       	push	r25
    2c34:	8f 93       	push	r24
    2c36:	8e 01       	movw	r16, r28
    2c38:	0f 5f       	subi	r16, 0xFF	; 255
    2c3a:	1f 4f       	sbci	r17, 0xFF	; 255
    2c3c:	1f 93       	push	r17
    2c3e:	0f 93       	push	r16
    2c40:	0e 94 d5 2a 	call	0x55aa	; 0x55aa <sprintf>
    2c44:	ee 24       	eor	r14, r14
    2c46:	ff 24       	eor	r15, r15
    2c48:	8d b7       	in	r24, 0x3d	; 61
    2c4a:	9e b7       	in	r25, 0x3e	; 62
    2c4c:	06 96       	adiw	r24, 0x06	; 6
    2c4e:	0f b6       	in	r0, 0x3f	; 63
    2c50:	f8 94       	cli
    2c52:	9e bf       	out	0x3e, r25	; 62
    2c54:	0f be       	out	0x3f, r0	; 63
    2c56:	8d bf       	out	0x3d, r24	; 61
    2c58:	73 c0       	rjmp	.+230    	; 0x2d40 <blink_morse_code_error+0x134>
    2c5a:	a0 0f       	add	r26, r16
    2c5c:	b1 1f       	adc	r27, r17
    2c5e:	8c 91       	ld	r24, X
    2c60:	84 33       	cpi	r24, 0x34	; 52
    2c62:	d1 f1       	breq	.+116    	; 0x2cd8 <blink_morse_code_error+0xcc>
    2c64:	85 33       	cpi	r24, 0x35	; 53
    2c66:	70 f4       	brcc	.+28     	; 0x2c84 <blink_morse_code_error+0x78>
    2c68:	81 33       	cpi	r24, 0x31	; 49
    2c6a:	f9 f0       	breq	.+62     	; 0x2caa <blink_morse_code_error+0x9e>
    2c6c:	82 33       	cpi	r24, 0x32	; 50
    2c6e:	20 f4       	brcc	.+8      	; 0x2c78 <blink_morse_code_error+0x6c>
    2c70:	80 33       	cpi	r24, 0x30	; 48
    2c72:	09 f0       	breq	.+2      	; 0x2c76 <blink_morse_code_error+0x6a>
    2c74:	5c c0       	rjmp	.+184    	; 0x2d2e <blink_morse_code_error+0x122>
    2c76:	16 c0       	rjmp	.+44     	; 0x2ca4 <blink_morse_code_error+0x98>
    2c78:	82 33       	cpi	r24, 0x32	; 50
    2c7a:	11 f1       	breq	.+68     	; 0x2cc0 <blink_morse_code_error+0xb4>
    2c7c:	83 33       	cpi	r24, 0x33	; 51
    2c7e:	09 f0       	breq	.+2      	; 0x2c82 <blink_morse_code_error+0x76>
    2c80:	56 c0       	rjmp	.+172    	; 0x2d2e <blink_morse_code_error+0x122>
    2c82:	23 c0       	rjmp	.+70     	; 0x2cca <blink_morse_code_error+0xbe>
    2c84:	87 33       	cpi	r24, 0x37	; 55
    2c86:	c9 f1       	breq	.+114    	; 0x2cfa <blink_morse_code_error+0xee>
    2c88:	88 33       	cpi	r24, 0x38	; 56
    2c8a:	30 f4       	brcc	.+12     	; 0x2c98 <blink_morse_code_error+0x8c>
    2c8c:	85 33       	cpi	r24, 0x35	; 53
    2c8e:	69 f1       	breq	.+90     	; 0x2cea <blink_morse_code_error+0xde>
    2c90:	86 33       	cpi	r24, 0x36	; 54
    2c92:	09 f0       	breq	.+2      	; 0x2c96 <blink_morse_code_error+0x8a>
    2c94:	4c c0       	rjmp	.+152    	; 0x2d2e <blink_morse_code_error+0x122>
    2c96:	2c c0       	rjmp	.+88     	; 0x2cf0 <blink_morse_code_error+0xe4>
    2c98:	88 33       	cpi	r24, 0x38	; 56
    2c9a:	b1 f1       	breq	.+108    	; 0x2d08 <blink_morse_code_error+0xfc>
    2c9c:	89 33       	cpi	r24, 0x39	; 57
    2c9e:	09 f0       	breq	.+2      	; 0x2ca2 <blink_morse_code_error+0x96>
    2ca0:	46 c0       	rjmp	.+140    	; 0x2d2e <blink_morse_code_error+0x122>
    2ca2:	3b c0       	rjmp	.+118    	; 0x2d1a <blink_morse_code_error+0x10e>
    2ca4:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2ca8:	02 c0       	rjmp	.+4      	; 0x2cae <blink_morse_code_error+0xa2>
    2caa:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cae:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2cb2:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2cb6:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2cba:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2cbe:	37 c0       	rjmp	.+110    	; 0x2d2e <blink_morse_code_error+0x122>
    2cc0:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cc4:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cc8:	f4 cf       	rjmp	.-24     	; 0x2cb2 <blink_morse_code_error+0xa6>
    2cca:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cce:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cd2:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cd6:	ef cf       	rjmp	.-34     	; 0x2cb6 <blink_morse_code_error+0xaa>
    2cd8:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cdc:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2ce0:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2ce4:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2ce8:	e8 cf       	rjmp	.-48     	; 0x2cba <blink_morse_code_error+0xae>
    2cea:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cee:	02 c0       	rjmp	.+4      	; 0x2cf4 <blink_morse_code_error+0xe8>
    2cf0:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2cf4:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2cf8:	04 c0       	rjmp	.+8      	; 0x2d02 <blink_morse_code_error+0xf6>
    2cfa:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2cfe:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2d02:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2d06:	06 c0       	rjmp	.+12     	; 0x2d14 <blink_morse_code_error+0x108>
    2d08:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2d0c:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2d10:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2d14:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2d18:	08 c0       	rjmp	.+16     	; 0x2d2a <blink_morse_code_error+0x11e>
    2d1a:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2d1e:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2d22:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2d26:	0e 94 f5 15 	call	0x2bea	; 0x2bea <blink_dash>
    2d2a:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <blink_dot>
    2d2e:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2d32:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2d36:	0e 94 c9 15 	call	0x2b92	; 0x2b92 <pause>
    2d3a:	08 94       	sec
    2d3c:	e1 1c       	adc	r14, r1
    2d3e:	f1 1c       	adc	r15, r1
    2d40:	ae 2d       	mov	r26, r14
    2d42:	bb 27       	eor	r27, r27
    2d44:	f8 01       	movw	r30, r16
    2d46:	01 90       	ld	r0, Z+
    2d48:	00 20       	and	r0, r0
    2d4a:	e9 f7       	brne	.-6      	; 0x2d46 <blink_morse_code_error+0x13a>
    2d4c:	31 97       	sbiw	r30, 0x01	; 1
    2d4e:	e0 1b       	sub	r30, r16
    2d50:	f1 0b       	sbc	r31, r17
    2d52:	ae 17       	cp	r26, r30
    2d54:	bf 07       	cpc	r27, r31
    2d56:	08 f4       	brcc	.+2      	; 0x2d5a <blink_morse_code_error+0x14e>
    2d58:	80 cf       	rjmp	.-256    	; 0x2c5a <blink_morse_code_error+0x4e>
    2d5a:	23 96       	adiw	r28, 0x03	; 3
    2d5c:	0f b6       	in	r0, 0x3f	; 63
    2d5e:	f8 94       	cli
    2d60:	de bf       	out	0x3e, r29	; 62
    2d62:	0f be       	out	0x3f, r0	; 63
    2d64:	cd bf       	out	0x3d, r28	; 61
    2d66:	df 91       	pop	r29
    2d68:	cf 91       	pop	r28
    2d6a:	1f 91       	pop	r17
    2d6c:	0f 91       	pop	r16
    2d6e:	ff 90       	pop	r15
    2d70:	ef 90       	pop	r14
    2d72:	08 95       	ret

00002d74 <nrk_error_print>:
    2d74:	0f 93       	push	r16
    2d76:	1f 93       	push	r17
    2d78:	80 91 12 07 	lds	r24, 0x0712
    2d7c:	88 23       	and	r24, r24
    2d7e:	09 f4       	brne	.+2      	; 0x2d82 <nrk_error_print+0xe>
    2d80:	b6 c0       	rjmp	.+364    	; 0x2eee <nrk_error_print+0x17a>
    2d82:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    2d86:	0e 94 f7 27 	call	0x4fee	; 0x4fee <nrk_watchdog_disable>
    2d8a:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    2d8e:	8c e6       	ldi	r24, 0x6C	; 108
    2d90:	92 e0       	ldi	r25, 0x02	; 2
    2d92:	0e 94 97 12 	call	0x252e	; 0x252e <nrk_kprintf>
    2d96:	80 91 e0 05 	lds	r24, 0x05E0
    2d9a:	99 27       	eor	r25, r25
    2d9c:	9f 93       	push	r25
    2d9e:	8f 93       	push	r24
    2da0:	8c e7       	ldi	r24, 0x7C	; 124
    2da2:	93 e0       	ldi	r25, 0x03	; 3
    2da4:	9f 93       	push	r25
    2da6:	8f 93       	push	r24
    2da8:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    2dac:	88 e6       	ldi	r24, 0x68	; 104
    2dae:	92 e0       	ldi	r25, 0x02	; 2
    2db0:	0e 94 97 12 	call	0x252e	; 0x252e <nrk_kprintf>
    2db4:	0f 90       	pop	r0
    2db6:	0f 90       	pop	r0
    2db8:	0f 90       	pop	r0
    2dba:	0f 90       	pop	r0
    2dbc:	80 91 12 07 	lds	r24, 0x0712
    2dc0:	84 31       	cpi	r24, 0x14	; 20
    2dc2:	10 f0       	brcs	.+4      	; 0x2dc8 <nrk_error_print+0x54>
    2dc4:	10 92 12 07 	sts	0x0712, r1
    2dc8:	80 91 12 07 	lds	r24, 0x0712
    2dcc:	99 27       	eor	r25, r25
    2dce:	aa 27       	eor	r26, r26
    2dd0:	bb 27       	eor	r27, r27
    2dd2:	fc 01       	movw	r30, r24
    2dd4:	31 97       	sbiw	r30, 0x01	; 1
    2dd6:	e2 31       	cpi	r30, 0x12	; 18
    2dd8:	f1 05       	cpc	r31, r1
    2dda:	f0 f5       	brcc	.+124    	; 0x2e58 <nrk_error_print+0xe4>
    2ddc:	ea 5b       	subi	r30, 0xBA	; 186
    2dde:	ff 4f       	sbci	r31, 0xFF	; 255
    2de0:	ee 0f       	add	r30, r30
    2de2:	ff 1f       	adc	r31, r31
    2de4:	05 90       	lpm	r0, Z+
    2de6:	f4 91       	lpm	r31, Z
    2de8:	e0 2d       	mov	r30, r0
    2dea:	09 94       	ijmp
    2dec:	81 e4       	ldi	r24, 0x41	; 65
    2dee:	92 e0       	ldi	r25, 0x02	; 2
    2df0:	35 c0       	rjmp	.+106    	; 0x2e5c <nrk_error_print+0xe8>
    2df2:	8d e2       	ldi	r24, 0x2D	; 45
    2df4:	92 e0       	ldi	r25, 0x02	; 2
    2df6:	32 c0       	rjmp	.+100    	; 0x2e5c <nrk_error_print+0xe8>
    2df8:	87 e1       	ldi	r24, 0x17	; 23
    2dfa:	92 e0       	ldi	r25, 0x02	; 2
    2dfc:	2f c0       	rjmp	.+94     	; 0x2e5c <nrk_error_print+0xe8>
    2dfe:	8c ef       	ldi	r24, 0xFC	; 252
    2e00:	91 e0       	ldi	r25, 0x01	; 1
    2e02:	2c c0       	rjmp	.+88     	; 0x2e5c <nrk_error_print+0xe8>
    2e04:	86 ee       	ldi	r24, 0xE6	; 230
    2e06:	91 e0       	ldi	r25, 0x01	; 1
    2e08:	29 c0       	rjmp	.+82     	; 0x2e5c <nrk_error_print+0xe8>
    2e0a:	8e ec       	ldi	r24, 0xCE	; 206
    2e0c:	91 e0       	ldi	r25, 0x01	; 1
    2e0e:	26 c0       	rjmp	.+76     	; 0x2e5c <nrk_error_print+0xe8>
    2e10:	8b eb       	ldi	r24, 0xBB	; 187
    2e12:	91 e0       	ldi	r25, 0x01	; 1
    2e14:	23 c0       	rjmp	.+70     	; 0x2e5c <nrk_error_print+0xe8>
    2e16:	88 ea       	ldi	r24, 0xA8	; 168
    2e18:	91 e0       	ldi	r25, 0x01	; 1
    2e1a:	20 c0       	rjmp	.+64     	; 0x2e5c <nrk_error_print+0xe8>
    2e1c:	8a e8       	ldi	r24, 0x8A	; 138
    2e1e:	91 e0       	ldi	r25, 0x01	; 1
    2e20:	1d c0       	rjmp	.+58     	; 0x2e5c <nrk_error_print+0xe8>
    2e22:	85 e6       	ldi	r24, 0x65	; 101
    2e24:	91 e0       	ldi	r25, 0x01	; 1
    2e26:	1a c0       	rjmp	.+52     	; 0x2e5c <nrk_error_print+0xe8>
    2e28:	89 e5       	ldi	r24, 0x59	; 89
    2e2a:	91 e0       	ldi	r25, 0x01	; 1
    2e2c:	17 c0       	rjmp	.+46     	; 0x2e5c <nrk_error_print+0xe8>
    2e2e:	8e e3       	ldi	r24, 0x3E	; 62
    2e30:	91 e0       	ldi	r25, 0x01	; 1
    2e32:	14 c0       	rjmp	.+40     	; 0x2e5c <nrk_error_print+0xe8>
    2e34:	8f e2       	ldi	r24, 0x2F	; 47
    2e36:	91 e0       	ldi	r25, 0x01	; 1
    2e38:	11 c0       	rjmp	.+34     	; 0x2e5c <nrk_error_print+0xe8>
    2e3a:	8e e1       	ldi	r24, 0x1E	; 30
    2e3c:	91 e0       	ldi	r25, 0x01	; 1
    2e3e:	0e c0       	rjmp	.+28     	; 0x2e5c <nrk_error_print+0xe8>
    2e40:	8a e0       	ldi	r24, 0x0A	; 10
    2e42:	91 e0       	ldi	r25, 0x01	; 1
    2e44:	0b c0       	rjmp	.+22     	; 0x2e5c <nrk_error_print+0xe8>
    2e46:	8a ee       	ldi	r24, 0xEA	; 234
    2e48:	90 e0       	ldi	r25, 0x00	; 0
    2e4a:	08 c0       	rjmp	.+16     	; 0x2e5c <nrk_error_print+0xe8>
    2e4c:	82 ed       	ldi	r24, 0xD2	; 210
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	05 c0       	rjmp	.+10     	; 0x2e5c <nrk_error_print+0xe8>
    2e52:	87 eb       	ldi	r24, 0xB7	; 183
    2e54:	90 e0       	ldi	r25, 0x00	; 0
    2e56:	02 c0       	rjmp	.+4      	; 0x2e5c <nrk_error_print+0xe8>
    2e58:	80 eb       	ldi	r24, 0xB0	; 176
    2e5a:	90 e0       	ldi	r25, 0x00	; 0
    2e5c:	0e 94 97 12 	call	0x252e	; 0x252e <nrk_kprintf>
    2e60:	60 91 a1 09 	lds	r22, 0x09A1
    2e64:	70 91 a2 09 	lds	r23, 0x09A2
    2e68:	8d e0       	ldi	r24, 0x0D	; 13
    2e6a:	90 e0       	ldi	r25, 0x00	; 0
    2e6c:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
    2e70:	60 91 a1 09 	lds	r22, 0x09A1
    2e74:	70 91 a2 09 	lds	r23, 0x09A2
    2e78:	8a e0       	ldi	r24, 0x0A	; 10
    2e7a:	90 e0       	ldi	r25, 0x00	; 0
    2e7c:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
    2e80:	00 e0       	ldi	r16, 0x00	; 0
    2e82:	21 c0       	rjmp	.+66     	; 0x2ec6 <nrk_error_print+0x152>
    2e84:	82 e0       	ldi	r24, 0x02	; 2
    2e86:	90 e0       	ldi	r25, 0x00	; 0
    2e88:	0e 94 1a 12 	call	0x2434	; 0x2434 <nrk_led_set>
    2e8c:	83 e0       	ldi	r24, 0x03	; 3
    2e8e:	90 e0       	ldi	r25, 0x00	; 0
    2e90:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2e94:	10 e0       	ldi	r17, 0x00	; 0
    2e96:	88 ee       	ldi	r24, 0xE8	; 232
    2e98:	93 e0       	ldi	r25, 0x03	; 3
    2e9a:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    2e9e:	1f 5f       	subi	r17, 0xFF	; 255
    2ea0:	14 36       	cpi	r17, 0x64	; 100
    2ea2:	c9 f7       	brne	.-14     	; 0x2e96 <nrk_error_print+0x122>
    2ea4:	83 e0       	ldi	r24, 0x03	; 3
    2ea6:	90 e0       	ldi	r25, 0x00	; 0
    2ea8:	0e 94 1a 12 	call	0x2434	; 0x2434 <nrk_led_set>
    2eac:	82 e0       	ldi	r24, 0x02	; 2
    2eae:	90 e0       	ldi	r25, 0x00	; 0
    2eb0:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2eb4:	10 e0       	ldi	r17, 0x00	; 0
    2eb6:	88 ee       	ldi	r24, 0xE8	; 232
    2eb8:	93 e0       	ldi	r25, 0x03	; 3
    2eba:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    2ebe:	1f 5f       	subi	r17, 0xFF	; 255
    2ec0:	14 36       	cpi	r17, 0x64	; 100
    2ec2:	c9 f7       	brne	.-14     	; 0x2eb6 <nrk_error_print+0x142>
    2ec4:	0f 5f       	subi	r16, 0xFF	; 255
    2ec6:	04 31       	cpi	r16, 0x14	; 20
    2ec8:	ec f2       	brlt	.-70     	; 0x2e84 <nrk_error_print+0x110>
    2eca:	83 e0       	ldi	r24, 0x03	; 3
    2ecc:	90 e0       	ldi	r25, 0x00	; 0
    2ece:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2ed2:	82 e0       	ldi	r24, 0x02	; 2
    2ed4:	90 e0       	ldi	r25, 0x00	; 0
    2ed6:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2eda:	80 91 e0 05 	lds	r24, 0x05E0
    2ede:	0e 94 06 16 	call	0x2c0c	; 0x2c0c <blink_morse_code_error>
    2ee2:	80 91 12 07 	lds	r24, 0x0712
    2ee6:	0e 94 06 16 	call	0x2c0c	; 0x2c0c <blink_morse_code_error>
    2eea:	00 e0       	ldi	r16, 0x00	; 0
    2eec:	cb cf       	rjmp	.-106    	; 0x2e84 <nrk_error_print+0x110>
    2eee:	80 e0       	ldi	r24, 0x00	; 0
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	1f 91       	pop	r17
    2ef4:	0f 91       	pop	r16
    2ef6:	08 95       	ret

00002ef8 <nrk_kernel_error_add>:

} // rfSetChannel


    2ef8:	ef 92       	push	r14
    2efa:	ff 92       	push	r15
    2efc:	0f 93       	push	r16
    2efe:	1f 93       	push	r17
    2f00:	e8 2e       	mov	r14, r24
    2f02:	f6 2e       	mov	r15, r22
    2f04:	80 93 12 07 	sts	0x0712, r24
    2f08:	60 93 e0 05 	sts	0x05E0, r22
    2f0c:	0e 94 ba 16 	call	0x2d74	; 0x2d74 <nrk_error_print>
    2f10:	00 e0       	ldi	r16, 0x00	; 0
    2f12:	21 c0       	rjmp	.+66     	; 0x2f56 <nrk_kernel_error_add+0x5e>
    2f14:	82 e0       	ldi	r24, 0x02	; 2
    2f16:	90 e0       	ldi	r25, 0x00	; 0
    2f18:	0e 94 1a 12 	call	0x2434	; 0x2434 <nrk_led_set>
    2f1c:	83 e0       	ldi	r24, 0x03	; 3
    2f1e:	90 e0       	ldi	r25, 0x00	; 0
    2f20:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2f24:	10 e0       	ldi	r17, 0x00	; 0
    2f26:	88 ee       	ldi	r24, 0xE8	; 232
    2f28:	93 e0       	ldi	r25, 0x03	; 3
    2f2a:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    2f2e:	1f 5f       	subi	r17, 0xFF	; 255
    2f30:	14 36       	cpi	r17, 0x64	; 100
    2f32:	c9 f7       	brne	.-14     	; 0x2f26 <nrk_kernel_error_add+0x2e>
    2f34:	83 e0       	ldi	r24, 0x03	; 3
    2f36:	90 e0       	ldi	r25, 0x00	; 0
    2f38:	0e 94 1a 12 	call	0x2434	; 0x2434 <nrk_led_set>
    2f3c:	82 e0       	ldi	r24, 0x02	; 2
    2f3e:	90 e0       	ldi	r25, 0x00	; 0
    2f40:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2f44:	10 e0       	ldi	r17, 0x00	; 0
    2f46:	88 ee       	ldi	r24, 0xE8	; 232
    2f48:	93 e0       	ldi	r25, 0x03	; 3
    2f4a:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>
    2f4e:	1f 5f       	subi	r17, 0xFF	; 255
    2f50:	14 36       	cpi	r17, 0x64	; 100
    2f52:	c9 f7       	brne	.-14     	; 0x2f46 <nrk_kernel_error_add+0x4e>
    2f54:	0f 5f       	subi	r16, 0xFF	; 255
    2f56:	04 31       	cpi	r16, 0x14	; 20
    2f58:	e8 f2       	brcs	.-70     	; 0x2f14 <nrk_kernel_error_add+0x1c>
    2f5a:	83 e0       	ldi	r24, 0x03	; 3
    2f5c:	90 e0       	ldi	r25, 0x00	; 0
    2f5e:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2f62:	82 e0       	ldi	r24, 0x02	; 2
    2f64:	90 e0       	ldi	r25, 0x00	; 0
    2f66:	0e 94 02 12 	call	0x2404	; 0x2404 <nrk_led_clr>
    2f6a:	8f 2d       	mov	r24, r15
    2f6c:	0e 94 06 16 	call	0x2c0c	; 0x2c0c <blink_morse_code_error>
    2f70:	8e 2d       	mov	r24, r14
    2f72:	0e 94 06 16 	call	0x2c0c	; 0x2c0c <blink_morse_code_error>
    2f76:	00 e0       	ldi	r16, 0x00	; 0
    2f78:	cd cf       	rjmp	.-102    	; 0x2f14 <nrk_kernel_error_add+0x1c>

00002f7a <nrk_error_add>:
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
	
    2f7a:	80 93 12 07 	sts	0x0712, r24
    // Write it to the CC2420
    2f7e:	e0 91 6a 09 	lds	r30, 0x096A
    2f82:	f0 91 6b 09 	lds	r31, 0x096B
    2f86:	80 85       	ldd	r24, Z+8	; 0x08
    2f88:	80 93 e0 05 	sts	0x05E0, r24
	DISABLE_GLOBAL_INT();
	FASTSPI_SETREG(CC2420_FSCTRL, f);
	ENABLE_GLOBAL_INT();
    2f8c:	0e 94 ba 16 	call	0x2d74	; 0x2d74 <nrk_error_print>
    2f90:	08 95       	ret

00002f92 <nrk_stack_check_pid>:
    2f92:	99 27       	eor	r25, r25
    2f94:	87 fd       	sbrc	r24, 7
    2f96:	90 95       	com	r25
    2f98:	28 e2       	ldi	r18, 0x28	; 40
    2f9a:	30 e0       	ldi	r19, 0x00	; 0
    2f9c:	82 9f       	mul	r24, r18
    2f9e:	f0 01       	movw	r30, r0
    2fa0:	83 9f       	mul	r24, r19
    2fa2:	f0 0d       	add	r31, r0
    2fa4:	92 9f       	mul	r25, r18
    2fa6:	f0 0d       	add	r31, r0
    2fa8:	11 24       	eor	r1, r1
    2faa:	ec 52       	subi	r30, 0x2C	; 44
    2fac:	f8 4f       	sbci	r31, 0xF8	; 248
    2fae:	a2 81       	ldd	r26, Z+2	; 0x02
    2fb0:	b3 81       	ldd	r27, Z+3	; 0x03
    2fb2:	8c 91       	ld	r24, X
    2fb4:	85 35       	cpi	r24, 0x55	; 85
    2fb6:	29 f0       	breq	.+10     	; 0x2fc2 <nrk_stack_check_pid+0x30>
    2fb8:	85 e5       	ldi	r24, 0x55	; 85
    2fba:	8c 93       	st	X, r24
    2fbc:	8f ef       	ldi	r24, 0xFF	; 255
    2fbe:	9f ef       	ldi	r25, 0xFF	; 255
    2fc0:	08 95       	ret
    2fc2:	80 81       	ld	r24, Z
    2fc4:	91 81       	ldd	r25, Z+1	; 0x01
    2fc6:	80 50       	subi	r24, 0x00	; 0
    2fc8:	91 41       	sbci	r25, 0x11	; 17
    2fca:	18 f4       	brcc	.+6      	; 0x2fd2 <nrk_stack_check_pid+0x40>
    2fcc:	81 e0       	ldi	r24, 0x01	; 1
    2fce:	90 e0       	ldi	r25, 0x00	; 0
    2fd0:	08 95       	ret
    2fd2:	82 e1       	ldi	r24, 0x12	; 18
    2fd4:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <nrk_error_add>
    2fd8:	8f ef       	ldi	r24, 0xFF	; 255
    2fda:	9f ef       	ldi	r25, 0xFF	; 255
    2fdc:	08 95       	ret

00002fde <dump_stack_info>:
#include <ulib.h>



//-------------------------------------------------------------------------------------------------------
//	void halRfSetChannel(UINT8 Channel)
    2fde:	6f 92       	push	r6
    2fe0:	7f 92       	push	r7
    2fe2:	8f 92       	push	r8
    2fe4:	9f 92       	push	r9
    2fe6:	af 92       	push	r10
    2fe8:	bf 92       	push	r11
    2fea:	cf 92       	push	r12
    2fec:	df 92       	push	r13
    2fee:	ef 92       	push	r14
    2ff0:	ff 92       	push	r15
    2ff2:	0f 93       	push	r16
    2ff4:	1f 93       	push	r17
    2ff6:	cf 93       	push	r28
    2ff8:	df 93       	push	r29
//
//	DESCRIPTION:
//		Programs CC2420 for a given IEEE 802.15.4 channel. 
//		Note that SRXON, STXON or STXONCCA must be run for the new channel selection to take full effect.
//
    2ffa:	88 e7       	ldi	r24, 0x78	; 120
    2ffc:	92 e0       	ldi	r25, 0x02	; 2
    2ffe:	0e 94 97 12 	call	0x252e	; 0x252e <nrk_kprintf>
//	PARAMETERS:
//		UINT8 channel
    3002:	e0 91 6a 09 	lds	r30, 0x096A
    3006:	f0 91 6b 09 	lds	r31, 0x096B
    300a:	80 85       	ldd	r24, Z+8	; 0x08
    300c:	99 27       	eor	r25, r25
    300e:	87 fd       	sbrc	r24, 7
    3010:	90 95       	com	r25
    3012:	9f 93       	push	r25
    3014:	8f 93       	push	r24
    3016:	8f e7       	ldi	r24, 0x7F	; 127
    3018:	93 e0       	ldi	r25, 0x03	; 3
    301a:	9f 93       	push	r25
    301c:	8f 93       	push	r24
    301e:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
//			The channel number (11-26)
    3022:	e0 91 6a 09 	lds	r30, 0x096A
    3026:	f0 91 6b 09 	lds	r31, 0x096B
    302a:	02 81       	ldd	r16, Z+2	; 0x02
    302c:	13 81       	ldd	r17, Z+3	; 0x03
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
    302e:	1f 93       	push	r17
    3030:	0f 93       	push	r16
    3032:	88 e8       	ldi	r24, 0x88	; 136
    3034:	93 e0       	ldi	r25, 0x03	; 3
    3036:	9f 93       	push	r25
    3038:	8f 93       	push	r24
    303a:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	uint16_t f;
    303e:	f8 01       	movw	r30, r16
    3040:	80 81       	ld	r24, Z
    3042:	99 27       	eor	r25, r25
    3044:	9f 93       	push	r25
    3046:	8f 93       	push	r24
    3048:	25 e9       	ldi	r18, 0x95	; 149
    304a:	c2 2e       	mov	r12, r18
    304c:	23 e0       	ldi	r18, 0x03	; 3
    304e:	d2 2e       	mov	r13, r18
    3050:	df 92       	push	r13
    3052:	cf 92       	push	r12
    3054:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
    3058:	e0 91 6a 09 	lds	r30, 0x096A
    305c:	f0 91 6b 09 	lds	r31, 0x096B
    3060:	80 81       	ld	r24, Z
    3062:	91 81       	ldd	r25, Z+1	; 0x01
    3064:	9f 93       	push	r25
    3066:	8f 93       	push	r24
    3068:	92 ea       	ldi	r25, 0xA2	; 162
    306a:	e9 2e       	mov	r14, r25
    306c:	93 e0       	ldi	r25, 0x03	; 3
    306e:	f9 2e       	mov	r15, r25
    3070:	ff 92       	push	r15
    3072:	ef 92       	push	r14
    3074:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
    3078:	80 91 6a 09 	lds	r24, 0x096A
    307c:	90 91 6b 09 	lds	r25, 0x096B
    3080:	9f 93       	push	r25
    3082:	8f 93       	push	r24
    3084:	0c ea       	ldi	r16, 0xAC	; 172
    3086:	13 e0       	ldi	r17, 0x03	; 3
    3088:	1f 93       	push	r17
    308a:	0f 93       	push	r16
    308c:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    3090:	c4 ed       	ldi	r28, 0xD4	; 212
    3092:	d7 e0       	ldi	r29, 0x07	; 7
    3094:	aa 24       	eor	r10, r10
    3096:	bb 24       	eor	r11, r11
    3098:	8d b7       	in	r24, 0x3d	; 61
    309a:	9e b7       	in	r25, 0x3e	; 62
    309c:	44 96       	adiw	r24, 0x14	; 20
    309e:	0f b6       	in	r0, 0x3f	; 63
    30a0:	f8 94       	cli
    30a2:	9e bf       	out	0x3e, r25	; 62
    30a4:	0f be       	out	0x3f, r0	; 63
    30a6:	8d bf       	out	0x3d, r24	; 61
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
	
    // Write it to the CC2420
	DISABLE_GLOBAL_INT();
	FASTSPI_SETREG(CC2420_FSCTRL, f);
	ENABLE_GLOBAL_INT();
    30a8:	8c eb       	ldi	r24, 0xBC	; 188
    30aa:	68 2e       	mov	r6, r24
    30ac:	83 e0       	ldi	r24, 0x03	; 3
    30ae:	78 2e       	mov	r7, r24

    30b0:	46 01       	movw	r8, r12
} // rfSetChannel


    30b2:	67 01       	movw	r12, r14
    30b4:	78 01       	movw	r14, r16
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
	
    // Write it to the CC2420
	DISABLE_GLOBAL_INT();
    30b6:	0a 81       	ldd	r16, Y+2	; 0x02
    30b8:	1b 81       	ldd	r17, Y+3	; 0x03
	FASTSPI_SETREG(CC2420_FSCTRL, f);
	ENABLE_GLOBAL_INT();
    30ba:	1f 93       	push	r17
    30bc:	0f 93       	push	r16
    30be:	bf 92       	push	r11
    30c0:	af 92       	push	r10
    30c2:	7f 92       	push	r7
    30c4:	6f 92       	push	r6
    30c6:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>

    30ca:	f8 01       	movw	r30, r16
    30cc:	80 81       	ld	r24, Z
    30ce:	99 27       	eor	r25, r25
    30d0:	9f 93       	push	r25
    30d2:	8f 93       	push	r24
    30d4:	9f 92       	push	r9
    30d6:	8f 92       	push	r8
    30d8:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
} // rfSetChannel


    30dc:	88 81       	ld	r24, Y
    30de:	99 81       	ldd	r25, Y+1	; 0x01
    30e0:	9f 93       	push	r25
    30e2:	8f 93       	push	r24
    30e4:	df 92       	push	r13
    30e6:	cf 92       	push	r12
    30e8:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    30ec:	df 93       	push	r29
    30ee:	cf 93       	push	r28
    30f0:	ff 92       	push	r15
    30f2:	ef 92       	push	r14
    30f4:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    30f8:	08 94       	sec
    30fa:	a1 1c       	adc	r10, r1
    30fc:	b1 1c       	adc	r11, r1
    30fe:	a8 96       	adiw	r28, 0x28	; 40
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
	
    3100:	8d b7       	in	r24, 0x3d	; 61
    3102:	9e b7       	in	r25, 0x3e	; 62
    3104:	42 96       	adiw	r24, 0x12	; 18
    3106:	0f b6       	in	r0, 0x3f	; 63
    3108:	f8 94       	cli
    310a:	9e bf       	out	0x3e, r25	; 62
    310c:	0f be       	out	0x3f, r0	; 63
    310e:	8d bf       	out	0x3d, r24	; 61
    3110:	99 e0       	ldi	r25, 0x09	; 9
    3112:	a9 16       	cp	r10, r25
    3114:	b1 04       	cpc	r11, r1
    3116:	79 f6       	brne	.-98     	; 0x30b6 <dump_stack_info+0xd8>
    3118:	df 91       	pop	r29
    311a:	cf 91       	pop	r28
    311c:	1f 91       	pop	r17
    311e:	0f 91       	pop	r16
    3120:	ff 90       	pop	r15
    3122:	ef 90       	pop	r14
    3124:	df 90       	pop	r13
    3126:	cf 90       	pop	r12
    3128:	bf 90       	pop	r11
    312a:	af 90       	pop	r10
    312c:	9f 90       	pop	r9
    312e:	8f 90       	pop	r8
    3130:	7f 90       	pop	r7
    3132:	6f 90       	pop	r6
    3134:	08 95       	ret

00003136 <nrk_stack_check>:
    3136:	cf 93       	push	r28
    3138:	df 93       	push	r29
    313a:	e0 91 6a 09 	lds	r30, 0x096A
    313e:	f0 91 6b 09 	lds	r31, 0x096B
    3142:	c2 81       	ldd	r28, Z+2	; 0x02
    3144:	d3 81       	ldd	r29, Z+3	; 0x03
    3146:	88 81       	ld	r24, Y
    3148:	85 35       	cpi	r24, 0x55	; 85
    314a:	39 f0       	breq	.+14     	; 0x315a <nrk_stack_check+0x24>
    314c:	0e 94 ef 17 	call	0x2fde	; 0x2fde <dump_stack_info>
    3150:	81 e0       	ldi	r24, 0x01	; 1
    3152:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <nrk_error_add>
    3156:	85 e5       	ldi	r24, 0x55	; 85
    3158:	88 83       	st	Y, r24
    315a:	e0 91 6a 09 	lds	r30, 0x096A
    315e:	f0 91 6b 09 	lds	r31, 0x096B
    3162:	80 81       	ld	r24, Z
    3164:	91 81       	ldd	r25, Z+1	; 0x01
    3166:	80 50       	subi	r24, 0x00	; 0
    3168:	91 41       	sbci	r25, 0x11	; 17
    316a:	28 f0       	brcs	.+10     	; 0x3176 <nrk_stack_check+0x40>
    316c:	0e 94 ef 17 	call	0x2fde	; 0x2fde <dump_stack_info>
    3170:	82 e1       	ldi	r24, 0x12	; 18
    3172:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <nrk_error_add>
    3176:	df 91       	pop	r29
    3178:	cf 91       	pop	r28
    317a:	08 95       	ret

0000317c <system_ceiling>:
//		Note that SRXON, STXON or STXONCCA must be run for the new channel selection to take full effect.
//
//	PARAMETERS:
//		UINT8 channel
//			The channel number (11-26)
//-------------------------------------------------------------------------------------------------------
    317c:	ef 92       	push	r14
    317e:	ff 92       	push	r15
    3180:	0f 93       	push	r16
    3182:	1f 93       	push	r17
    3184:	ee e3       	ldi	r30, 0x3E	; 62
    3186:	f9 e0       	ldi	r31, 0x09	; 9
    3188:	ee 24       	eor	r14, r14
    318a:	ff 24       	eor	r15, r15
    318c:	87 01       	movw	r16, r14
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
    318e:	30 97       	sbiw	r30, 0x00	; 0
    3190:	89 f0       	breq	.+34     	; 0x31b4 <system_ceiling+0x38>
	
    // Write it to the CC2420
	DISABLE_GLOBAL_INT();
    3192:	82 81       	ldd	r24, Z+2	; 0x02
    3194:	88 23       	and	r24, r24
    3196:	71 f4       	brne	.+28     	; 0x31b4 <system_ceiling+0x38>
    3198:	81 81       	ldd	r24, Z+1	; 0x01
    319a:	28 2f       	mov	r18, r24
    319c:	33 27       	eor	r19, r19
    319e:	27 fd       	sbrc	r18, 7
    31a0:	30 95       	com	r19
    31a2:	43 2f       	mov	r20, r19
    31a4:	53 2f       	mov	r21, r19
    31a6:	e2 16       	cp	r14, r18
    31a8:	f3 06       	cpc	r15, r19
    31aa:	04 07       	cpc	r16, r20
    31ac:	15 07       	cpc	r17, r21
    31ae:	10 f4       	brcc	.+4      	; 0x31b4 <system_ceiling+0x38>
    31b0:	79 01       	movw	r14, r18
    31b2:	8a 01       	movw	r16, r20
    31b4:	33 96       	adiw	r30, 0x03	; 3
//		UINT8 channel
//			The channel number (11-26)
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
	
    31b6:	89 e0       	ldi	r24, 0x09	; 9
    31b8:	e9 35       	cpi	r30, 0x59	; 89
    31ba:	f8 07       	cpc	r31, r24
    31bc:	41 f7       	brne	.-48     	; 0x318e <system_ceiling+0x12>


    31be:	c8 01       	movw	r24, r16
    31c0:	b7 01       	movw	r22, r14
    31c2:	1f 91       	pop	r17
    31c4:	0f 91       	pop	r16
    31c6:	ff 90       	pop	r15
    31c8:	ef 90       	pop	r14
    31ca:	08 95       	ret

000031cc <nrk_signal_create>:
    31cc:	40 91 8a 06 	lds	r20, 0x068A
    31d0:	50 91 8b 06 	lds	r21, 0x068B
    31d4:	60 91 8c 06 	lds	r22, 0x068C
    31d8:	70 91 8d 06 	lds	r23, 0x068D
    31dc:	20 e0       	ldi	r18, 0x00	; 0
    31de:	30 e0       	ldi	r19, 0x00	; 0
    31e0:	db 01       	movw	r26, r22
    31e2:	ca 01       	movw	r24, r20
    31e4:	02 2e       	mov	r0, r18
    31e6:	04 c0       	rjmp	.+8      	; 0x31f0 <nrk_signal_create+0x24>
    31e8:	b6 95       	lsr	r27
    31ea:	a7 95       	ror	r26
    31ec:	97 95       	ror	r25
    31ee:	87 95       	ror	r24
    31f0:	0a 94       	dec	r0
    31f2:	d2 f7       	brpl	.-12     	; 0x31e8 <nrk_signal_create+0x1c>
    31f4:	81 70       	andi	r24, 0x01	; 1
    31f6:	90 70       	andi	r25, 0x00	; 0
    31f8:	89 2b       	or	r24, r25
    31fa:	e9 f4       	brne	.+58     	; 0x3236 <nrk_signal_create+0x6a>
    31fc:	81 e0       	ldi	r24, 0x01	; 1
    31fe:	90 e0       	ldi	r25, 0x00	; 0
    3200:	a0 e0       	ldi	r26, 0x00	; 0
    3202:	b0 e0       	ldi	r27, 0x00	; 0
    3204:	02 2e       	mov	r0, r18
    3206:	04 c0       	rjmp	.+8      	; 0x3210 <nrk_signal_create+0x44>
    3208:	88 0f       	add	r24, r24
    320a:	99 1f       	adc	r25, r25
    320c:	aa 1f       	adc	r26, r26
    320e:	bb 1f       	adc	r27, r27
    3210:	0a 94       	dec	r0
    3212:	d2 f7       	brpl	.-12     	; 0x3208 <nrk_signal_create+0x3c>
    3214:	84 2b       	or	r24, r20
    3216:	95 2b       	or	r25, r21
    3218:	a6 2b       	or	r26, r22
    321a:	b7 2b       	or	r27, r23
    321c:	80 93 8a 06 	sts	0x068A, r24
    3220:	90 93 8b 06 	sts	0x068B, r25
    3224:	a0 93 8c 06 	sts	0x068C, r26
    3228:	b0 93 8d 06 	sts	0x068D, r27
    322c:	82 2f       	mov	r24, r18
    322e:	99 27       	eor	r25, r25
    3230:	87 fd       	sbrc	r24, 7
    3232:	90 95       	com	r25
    3234:	08 95       	ret
    3236:	2f 5f       	subi	r18, 0xFF	; 255
    3238:	3f 4f       	sbci	r19, 0xFF	; 255
    323a:	20 32       	cpi	r18, 0x20	; 32
    323c:	31 05       	cpc	r19, r1
    323e:	81 f6       	brne	.-96     	; 0x31e0 <nrk_signal_create+0x14>
    3240:	8f ef       	ldi	r24, 0xFF	; 255
    3242:	9f ef       	ldi	r25, 0xFF	; 255
    3244:	08 95       	ret

00003246 <nrk_signal_get_registered_mask>:
    3246:	e0 91 6a 09 	lds	r30, 0x096A
    324a:	f0 91 6b 09 	lds	r31, 0x096B
    324e:	66 85       	ldd	r22, Z+14	; 0x0e
    3250:	77 85       	ldd	r23, Z+15	; 0x0f
    3252:	80 89       	ldd	r24, Z+16	; 0x10
    3254:	91 89       	ldd	r25, Z+17	; 0x11
    3256:	08 95       	ret

00003258 <nrk_signal_unregister>:
    3258:	ef 92       	push	r14
    325a:	ff 92       	push	r15
    325c:	0f 93       	push	r16
    325e:	1f 93       	push	r17
    3260:	21 e0       	ldi	r18, 0x01	; 1
    3262:	30 e0       	ldi	r19, 0x00	; 0
    3264:	40 e0       	ldi	r20, 0x00	; 0
    3266:	50 e0       	ldi	r21, 0x00	; 0
    3268:	04 c0       	rjmp	.+8      	; 0x3272 <nrk_signal_unregister+0x1a>
    326a:	22 0f       	add	r18, r18
    326c:	33 1f       	adc	r19, r19
    326e:	44 1f       	adc	r20, r20
    3270:	55 1f       	adc	r21, r21
    3272:	8a 95       	dec	r24
    3274:	d2 f7       	brpl	.-12     	; 0x326a <nrk_signal_unregister+0x12>
    3276:	e0 91 6a 09 	lds	r30, 0x096A
    327a:	f0 91 6b 09 	lds	r31, 0x096B
    327e:	e6 84       	ldd	r14, Z+14	; 0x0e
    3280:	f7 84       	ldd	r15, Z+15	; 0x0f
    3282:	00 89       	ldd	r16, Z+16	; 0x10
    3284:	11 89       	ldd	r17, Z+17	; 0x11
    3286:	da 01       	movw	r26, r20
    3288:	c9 01       	movw	r24, r18
    328a:	8e 21       	and	r24, r14
    328c:	9f 21       	and	r25, r15
    328e:	a0 23       	and	r26, r16
    3290:	b1 23       	and	r27, r17
    3292:	00 97       	sbiw	r24, 0x00	; 0
    3294:	a1 05       	cpc	r26, r1
    3296:	b1 05       	cpc	r27, r1
    3298:	19 f4       	brne	.+6      	; 0x32a0 <nrk_signal_unregister+0x48>
    329a:	8f ef       	ldi	r24, 0xFF	; 255
    329c:	9f ef       	ldi	r25, 0xFF	; 255
    329e:	1a c0       	rjmp	.+52     	; 0x32d4 <nrk_signal_unregister+0x7c>
    32a0:	20 95       	com	r18
    32a2:	30 95       	com	r19
    32a4:	40 95       	com	r20
    32a6:	50 95       	com	r21
    32a8:	e2 22       	and	r14, r18
    32aa:	f3 22       	and	r15, r19
    32ac:	04 23       	and	r16, r20
    32ae:	15 23       	and	r17, r21
    32b0:	e6 86       	std	Z+14, r14	; 0x0e
    32b2:	f7 86       	std	Z+15, r15	; 0x0f
    32b4:	00 8b       	std	Z+16, r16	; 0x10
    32b6:	11 8b       	std	Z+17, r17	; 0x11
    32b8:	82 89       	ldd	r24, Z+18	; 0x12
    32ba:	93 89       	ldd	r25, Z+19	; 0x13
    32bc:	a4 89       	ldd	r26, Z+20	; 0x14
    32be:	b5 89       	ldd	r27, Z+21	; 0x15
    32c0:	82 23       	and	r24, r18
    32c2:	93 23       	and	r25, r19
    32c4:	a4 23       	and	r26, r20
    32c6:	b5 23       	and	r27, r21
    32c8:	82 8b       	std	Z+18, r24	; 0x12
    32ca:	93 8b       	std	Z+19, r25	; 0x13
    32cc:	a4 8b       	std	Z+20, r26	; 0x14
    32ce:	b5 8b       	std	Z+21, r27	; 0x15
    32d0:	81 e0       	ldi	r24, 0x01	; 1
    32d2:	90 e0       	ldi	r25, 0x00	; 0
    32d4:	1f 91       	pop	r17
    32d6:	0f 91       	pop	r16
    32d8:	ff 90       	pop	r15
    32da:	ef 90       	pop	r14
    32dc:	08 95       	ret

000032de <nrk_signal_register>:
    32de:	68 2f       	mov	r22, r24
    32e0:	77 27       	eor	r23, r23
    32e2:	67 fd       	sbrc	r22, 7
    32e4:	70 95       	com	r23
    32e6:	80 91 8a 06 	lds	r24, 0x068A
    32ea:	90 91 8b 06 	lds	r25, 0x068B
    32ee:	a0 91 8c 06 	lds	r26, 0x068C
    32f2:	b0 91 8d 06 	lds	r27, 0x068D
    32f6:	06 2e       	mov	r0, r22
    32f8:	04 c0       	rjmp	.+8      	; 0x3302 <nrk_signal_register+0x24>
    32fa:	b6 95       	lsr	r27
    32fc:	a7 95       	ror	r26
    32fe:	97 95       	ror	r25
    3300:	87 95       	ror	r24
    3302:	0a 94       	dec	r0
    3304:	d2 f7       	brpl	.-12     	; 0x32fa <nrk_signal_register+0x1c>
    3306:	81 70       	andi	r24, 0x01	; 1
    3308:	90 70       	andi	r25, 0x00	; 0
    330a:	89 2b       	or	r24, r25
    330c:	19 f4       	brne	.+6      	; 0x3314 <nrk_signal_register+0x36>
    330e:	8f ef       	ldi	r24, 0xFF	; 255
    3310:	9f ef       	ldi	r25, 0xFF	; 255
    3312:	08 95       	ret
    3314:	e0 91 6a 09 	lds	r30, 0x096A
    3318:	f0 91 6b 09 	lds	r31, 0x096B
    331c:	21 e0       	ldi	r18, 0x01	; 1
    331e:	30 e0       	ldi	r19, 0x00	; 0
    3320:	40 e0       	ldi	r20, 0x00	; 0
    3322:	50 e0       	ldi	r21, 0x00	; 0
    3324:	04 c0       	rjmp	.+8      	; 0x332e <nrk_signal_register+0x50>
    3326:	22 0f       	add	r18, r18
    3328:	33 1f       	adc	r19, r19
    332a:	44 1f       	adc	r20, r20
    332c:	55 1f       	adc	r21, r21
    332e:	6a 95       	dec	r22
    3330:	d2 f7       	brpl	.-12     	; 0x3326 <nrk_signal_register+0x48>
    3332:	86 85       	ldd	r24, Z+14	; 0x0e
    3334:	97 85       	ldd	r25, Z+15	; 0x0f
    3336:	a0 89       	ldd	r26, Z+16	; 0x10
    3338:	b1 89       	ldd	r27, Z+17	; 0x11
    333a:	82 2b       	or	r24, r18
    333c:	93 2b       	or	r25, r19
    333e:	a4 2b       	or	r26, r20
    3340:	b5 2b       	or	r27, r21
    3342:	86 87       	std	Z+14, r24	; 0x0e
    3344:	97 87       	std	Z+15, r25	; 0x0f
    3346:	a0 8b       	std	Z+16, r26	; 0x10
    3348:	b1 8b       	std	Z+17, r27	; 0x11
    334a:	81 e0       	ldi	r24, 0x01	; 1
    334c:	90 e0       	ldi	r25, 0x00	; 0
    334e:	08 95       	ret

00003350 <nrk_sem_create>:
    3350:	48 2f       	mov	r20, r24
    3352:	20 91 69 09 	lds	r18, 0x0969
    3356:	28 30       	cpi	r18, 0x08	; 8
    3358:	18 f0       	brcs	.+6      	; 0x3360 <nrk_sem_create+0x10>
    335a:	80 e0       	ldi	r24, 0x00	; 0
    335c:	90 e0       	ldi	r25, 0x00	; 0
    335e:	08 95       	ret
    3360:	ee e3       	ldi	r30, 0x3E	; 62
    3362:	f9 e0       	ldi	r31, 0x09	; 9
    3364:	30 e0       	ldi	r19, 0x00	; 0
    3366:	80 81       	ld	r24, Z
    3368:	8f 3f       	cpi	r24, 0xFF	; 255
    336a:	21 f0       	breq	.+8      	; 0x3374 <nrk_sem_create+0x24>
    336c:	3f 5f       	subi	r19, 0xFF	; 255
    336e:	33 96       	adiw	r30, 0x03	; 3
    3370:	39 30       	cpi	r19, 0x09	; 9
    3372:	c9 f7       	brne	.-14     	; 0x3366 <nrk_sem_create+0x16>
    3374:	83 2f       	mov	r24, r19
    3376:	99 27       	eor	r25, r25
    3378:	fc 01       	movw	r30, r24
    337a:	ee 0f       	add	r30, r30
    337c:	ff 1f       	adc	r31, r31
    337e:	e8 0f       	add	r30, r24
    3380:	f9 1f       	adc	r31, r25
    3382:	e2 5c       	subi	r30, 0xC2	; 194
    3384:	f6 4f       	sbci	r31, 0xF6	; 246
    3386:	42 83       	std	Z+2, r20	; 0x02
    3388:	40 83       	st	Z, r20
    338a:	61 83       	std	Z+1, r22	; 0x01
    338c:	2f 5f       	subi	r18, 0xFF	; 255
    338e:	20 93 69 09 	sts	0x0969, r18
    3392:	83 e0       	ldi	r24, 0x03	; 3
    3394:	38 9f       	mul	r19, r24
    3396:	c0 01       	movw	r24, r0
    3398:	11 24       	eor	r1, r1
    339a:	82 5c       	subi	r24, 0xC2	; 194
    339c:	96 4f       	sbci	r25, 0xF6	; 246
    339e:	08 95       	ret

000033a0 <nrk_get_resource_index>:
    33a0:	4e e3       	ldi	r20, 0x3E	; 62
    33a2:	59 e0       	ldi	r21, 0x09	; 9
    33a4:	20 e0       	ldi	r18, 0x00	; 0
    33a6:	30 e0       	ldi	r19, 0x00	; 0
    33a8:	48 17       	cp	r20, r24
    33aa:	59 07       	cpc	r21, r25
    33ac:	29 f4       	brne	.+10     	; 0x33b8 <nrk_get_resource_index+0x18>
    33ae:	82 2f       	mov	r24, r18
    33b0:	99 27       	eor	r25, r25
    33b2:	87 fd       	sbrc	r24, 7
    33b4:	90 95       	com	r25
    33b6:	08 95       	ret
    33b8:	2f 5f       	subi	r18, 0xFF	; 255
    33ba:	3f 4f       	sbci	r19, 0xFF	; 255
    33bc:	4d 5f       	subi	r20, 0xFD	; 253
    33be:	5f 4f       	sbci	r21, 0xFF	; 255
    33c0:	29 30       	cpi	r18, 0x09	; 9
    33c2:	31 05       	cpc	r19, r1
    33c4:	89 f7       	brne	.-30     	; 0x33a8 <nrk_get_resource_index+0x8>
    33c6:	8f ef       	ldi	r24, 0xFF	; 255
    33c8:	9f ef       	ldi	r25, 0xFF	; 255
    33ca:	08 95       	ret

000033cc <nrk_sem_delete>:
    33cc:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <nrk_get_resource_index>
    33d0:	8f 3f       	cpi	r24, 0xFF	; 255
    33d2:	11 f4       	brne	.+4      	; 0x33d8 <nrk_sem_delete+0xc>
    33d4:	81 e0       	ldi	r24, 0x01	; 1
    33d6:	03 c0       	rjmp	.+6      	; 0x33de <nrk_sem_delete+0x12>
    33d8:	89 30       	cpi	r24, 0x09	; 9
    33da:	31 f4       	brne	.+12     	; 0x33e8 <nrk_sem_delete+0x1c>
    33dc:	82 e0       	ldi	r24, 0x02	; 2
    33de:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <_nrk_errno_set>
    33e2:	8f ef       	ldi	r24, 0xFF	; 255
    33e4:	9f ef       	ldi	r25, 0xFF	; 255
    33e6:	08 95       	ret
    33e8:	99 27       	eor	r25, r25
    33ea:	87 fd       	sbrc	r24, 7
    33ec:	90 95       	com	r25
    33ee:	fc 01       	movw	r30, r24
    33f0:	ee 0f       	add	r30, r30
    33f2:	ff 1f       	adc	r31, r31
    33f4:	e8 0f       	add	r30, r24
    33f6:	f9 1f       	adc	r31, r25
    33f8:	e2 5c       	subi	r30, 0xC2	; 194
    33fa:	f6 4f       	sbci	r31, 0xF6	; 246
    33fc:	8f ef       	ldi	r24, 0xFF	; 255
    33fe:	80 83       	st	Z, r24
    3400:	82 83       	std	Z+2, r24	; 0x02
    3402:	81 83       	std	Z+1, r24	; 0x01
    3404:	80 91 69 09 	lds	r24, 0x0969
    3408:	81 50       	subi	r24, 0x01	; 1
    340a:	80 93 69 09 	sts	0x0969, r24
    340e:	81 e0       	ldi	r24, 0x01	; 1
    3410:	90 e0       	ldi	r25, 0x00	; 0
    3412:	08 95       	ret

00003414 <nrk_sem_query>:
    3414:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <nrk_get_resource_index>
    3418:	8f 3f       	cpi	r24, 0xFF	; 255
    341a:	11 f4       	brne	.+4      	; 0x3420 <nrk_sem_query+0xc>
    341c:	81 e0       	ldi	r24, 0x01	; 1
    341e:	03 c0       	rjmp	.+6      	; 0x3426 <nrk_sem_query+0x12>
    3420:	89 30       	cpi	r24, 0x09	; 9
    3422:	31 f4       	brne	.+12     	; 0x3430 <nrk_sem_query+0x1c>
    3424:	82 e0       	ldi	r24, 0x02	; 2
    3426:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <_nrk_errno_set>
    342a:	8f ef       	ldi	r24, 0xFF	; 255
    342c:	9f ef       	ldi	r25, 0xFF	; 255
    342e:	08 95       	ret
    3430:	99 27       	eor	r25, r25
    3432:	87 fd       	sbrc	r24, 7
    3434:	90 95       	com	r25
    3436:	fc 01       	movw	r30, r24
    3438:	ee 0f       	add	r30, r30
    343a:	ff 1f       	adc	r31, r31
    343c:	e8 0f       	add	r30, r24
    343e:	f9 1f       	adc	r31, r25
    3440:	e2 5c       	subi	r30, 0xC2	; 194
    3442:	f6 4f       	sbci	r31, 0xF6	; 246
    3444:	82 81       	ldd	r24, Z+2	; 0x02
    3446:	99 27       	eor	r25, r25
    3448:	87 fd       	sbrc	r24, 7
    344a:	90 95       	com	r25
    344c:	08 95       	ret

0000344e <nrk_sem_post>:
    344e:	1f 93       	push	r17
    3450:	cf 93       	push	r28
    3452:	df 93       	push	r29
    3454:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <nrk_get_resource_index>
    3458:	18 2f       	mov	r17, r24
    345a:	8f 3f       	cpi	r24, 0xFF	; 255
    345c:	11 f4       	brne	.+4      	; 0x3462 <nrk_sem_post+0x14>
    345e:	81 e0       	ldi	r24, 0x01	; 1
    3460:	03 c0       	rjmp	.+6      	; 0x3468 <nrk_sem_post+0x1a>
    3462:	89 30       	cpi	r24, 0x09	; 9
    3464:	31 f4       	brne	.+12     	; 0x3472 <nrk_sem_post+0x24>
    3466:	82 e0       	ldi	r24, 0x02	; 2
    3468:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <_nrk_errno_set>
    346c:	8f ef       	ldi	r24, 0xFF	; 255
    346e:	9f ef       	ldi	r25, 0xFF	; 255
    3470:	48 c0       	rjmp	.+144    	; 0x3502 <nrk_sem_post+0xb4>
    3472:	99 27       	eor	r25, r25
    3474:	87 fd       	sbrc	r24, 7
    3476:	90 95       	com	r25
    3478:	ec 01       	movw	r28, r24
    347a:	cc 0f       	add	r28, r28
    347c:	dd 1f       	adc	r29, r29
    347e:	c8 0f       	add	r28, r24
    3480:	d9 1f       	adc	r29, r25
    3482:	c2 5c       	subi	r28, 0xC2	; 194
    3484:	d6 4f       	sbci	r29, 0xF6	; 246
    3486:	9a 81       	ldd	r25, Y+2	; 0x02
    3488:	88 81       	ld	r24, Y
    348a:	98 17       	cp	r25, r24
    348c:	c4 f5       	brge	.+112    	; 0x34fe <nrk_sem_post+0xb0>
    348e:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3492:	8a 81       	ldd	r24, Y+2	; 0x02
    3494:	8f 5f       	subi	r24, 0xFF	; 255
    3496:	8a 83       	std	Y+2, r24	; 0x02
    3498:	0e 94 be 18 	call	0x317c	; 0x317c <system_ceiling>
    349c:	60 93 06 06 	sts	0x0606, r22
    34a0:	70 93 07 06 	sts	0x0607, r23
    34a4:	80 93 08 06 	sts	0x0608, r24
    34a8:	90 93 09 06 	sts	0x0609, r25
    34ac:	e0 91 6a 09 	lds	r30, 0x096A
    34b0:	f0 91 6b 09 	lds	r31, 0x096B
    34b4:	14 82       	std	Z+4, r1	; 0x04
    34b6:	eb ed       	ldi	r30, 0xDB	; 219
    34b8:	f7 e0       	ldi	r31, 0x07	; 7
    34ba:	21 2f       	mov	r18, r17
    34bc:	33 27       	eor	r19, r19
    34be:	27 fd       	sbrc	r18, 7
    34c0:	30 95       	com	r19
    34c2:	43 2f       	mov	r20, r19
    34c4:	53 2f       	mov	r21, r19
    34c6:	80 81       	ld	r24, Z
    34c8:	82 30       	cpi	r24, 0x02	; 2
    34ca:	91 f4       	brne	.+36     	; 0x34f0 <nrk_sem_post+0xa2>
    34cc:	83 85       	ldd	r24, Z+11	; 0x0b
    34ce:	94 85       	ldd	r25, Z+12	; 0x0c
    34d0:	a5 85       	ldd	r26, Z+13	; 0x0d
    34d2:	b6 85       	ldd	r27, Z+14	; 0x0e
    34d4:	82 17       	cp	r24, r18
    34d6:	93 07       	cpc	r25, r19
    34d8:	a4 07       	cpc	r26, r20
    34da:	b5 07       	cpc	r27, r21
    34dc:	49 f4       	brne	.+18     	; 0x34f0 <nrk_sem_post+0xa2>
    34de:	83 e0       	ldi	r24, 0x03	; 3
    34e0:	82 83       	std	Z+2, r24	; 0x02
    34e2:	10 8a       	std	Z+16, r1	; 0x10
    34e4:	17 86       	std	Z+15, r1	; 0x0f
    34e6:	10 82       	st	Z, r1
    34e8:	13 86       	std	Z+11, r1	; 0x0b
    34ea:	14 86       	std	Z+12, r1	; 0x0c
    34ec:	15 86       	std	Z+13, r1	; 0x0d
    34ee:	16 86       	std	Z+14, r1	; 0x0e
    34f0:	b8 96       	adiw	r30, 0x28	; 40
    34f2:	89 e0       	ldi	r24, 0x09	; 9
    34f4:	e3 34       	cpi	r30, 0x43	; 67
    34f6:	f8 07       	cpc	r31, r24
    34f8:	31 f7       	brne	.-52     	; 0x34c6 <nrk_sem_post+0x78>
    34fa:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    34fe:	81 e0       	ldi	r24, 0x01	; 1
    3500:	90 e0       	ldi	r25, 0x00	; 0
    3502:	df 91       	pop	r29
    3504:	cf 91       	pop	r28
    3506:	1f 91       	pop	r17
    3508:	08 95       	ret

0000350a <nrk_event_signal>:
    350a:	df 92       	push	r13
    350c:	ef 92       	push	r14
    350e:	ff 92       	push	r15
    3510:	0f 93       	push	r16
    3512:	1f 93       	push	r17
    3514:	f1 e0       	ldi	r31, 0x01	; 1
    3516:	ef 2e       	mov	r14, r31
    3518:	f1 2c       	mov	r15, r1
    351a:	01 2d       	mov	r16, r1
    351c:	11 2d       	mov	r17, r1
    351e:	04 c0       	rjmp	.+8      	; 0x3528 <nrk_event_signal+0x1e>
    3520:	ee 0c       	add	r14, r14
    3522:	ff 1c       	adc	r15, r15
    3524:	00 1f       	adc	r16, r16
    3526:	11 1f       	adc	r17, r17
    3528:	8a 95       	dec	r24
    352a:	d2 f7       	brpl	.-12     	; 0x3520 <nrk_event_signal+0x16>
    352c:	80 91 8a 06 	lds	r24, 0x068A
    3530:	90 91 8b 06 	lds	r25, 0x068B
    3534:	a0 91 8c 06 	lds	r26, 0x068C
    3538:	b0 91 8d 06 	lds	r27, 0x068D
    353c:	8e 21       	and	r24, r14
    353e:	9f 21       	and	r25, r15
    3540:	a0 23       	and	r26, r16
    3542:	b1 23       	and	r27, r17
    3544:	00 97       	sbiw	r24, 0x00	; 0
    3546:	a1 05       	cpc	r26, r1
    3548:	b1 05       	cpc	r27, r1
    354a:	11 f4       	brne	.+4      	; 0x3550 <nrk_event_signal+0x46>
    354c:	81 e0       	ldi	r24, 0x01	; 1
    354e:	43 c0       	rjmp	.+134    	; 0x35d6 <nrk_event_signal+0xcc>
    3550:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3554:	eb ed       	ldi	r30, 0xDB	; 219
    3556:	f7 e0       	ldi	r31, 0x07	; 7
    3558:	dd 24       	eor	r13, r13
    355a:	80 81       	ld	r24, Z
    355c:	81 30       	cpi	r24, 0x01	; 1
    355e:	b9 f4       	brne	.+46     	; 0x358e <nrk_event_signal+0x84>
    3560:	83 85       	ldd	r24, Z+11	; 0x0b
    3562:	94 85       	ldd	r25, Z+12	; 0x0c
    3564:	a5 85       	ldd	r26, Z+13	; 0x0d
    3566:	b6 85       	ldd	r27, Z+14	; 0x0e
    3568:	8e 21       	and	r24, r14
    356a:	9f 21       	and	r25, r15
    356c:	a0 23       	and	r26, r16
    356e:	b1 23       	and	r27, r17
    3570:	00 97       	sbiw	r24, 0x00	; 0
    3572:	a1 05       	cpc	r26, r1
    3574:	b1 05       	cpc	r27, r1
    3576:	59 f0       	breq	.+22     	; 0x358e <nrk_event_signal+0x84>
    3578:	83 e0       	ldi	r24, 0x03	; 3
    357a:	82 83       	std	Z+2, r24	; 0x02
    357c:	10 8a       	std	Z+16, r1	; 0x10
    357e:	17 86       	std	Z+15, r1	; 0x0f
    3580:	10 82       	st	Z, r1
    3582:	e3 86       	std	Z+11, r14	; 0x0b
    3584:	f4 86       	std	Z+12, r15	; 0x0c
    3586:	05 87       	std	Z+13, r16	; 0x0d
    3588:	16 87       	std	Z+14, r17	; 0x0e
    358a:	dd 24       	eor	r13, r13
    358c:	d3 94       	inc	r13
    358e:	80 81       	ld	r24, Z
    3590:	82 30       	cpi	r24, 0x02	; 2
    3592:	a1 f4       	brne	.+40     	; 0x35bc <nrk_event_signal+0xb2>
    3594:	83 85       	ldd	r24, Z+11	; 0x0b
    3596:	94 85       	ldd	r25, Z+12	; 0x0c
    3598:	a5 85       	ldd	r26, Z+13	; 0x0d
    359a:	b6 85       	ldd	r27, Z+14	; 0x0e
    359c:	8e 15       	cp	r24, r14
    359e:	9f 05       	cpc	r25, r15
    35a0:	a0 07       	cpc	r26, r16
    35a2:	b1 07       	cpc	r27, r17
    35a4:	59 f4       	brne	.+22     	; 0x35bc <nrk_event_signal+0xb2>
    35a6:	83 e0       	ldi	r24, 0x03	; 3
    35a8:	82 83       	std	Z+2, r24	; 0x02
    35aa:	10 8a       	std	Z+16, r1	; 0x10
    35ac:	17 86       	std	Z+15, r1	; 0x0f
    35ae:	10 82       	st	Z, r1
    35b0:	13 86       	std	Z+11, r1	; 0x0b
    35b2:	14 86       	std	Z+12, r1	; 0x0c
    35b4:	15 86       	std	Z+13, r1	; 0x0d
    35b6:	16 86       	std	Z+14, r1	; 0x0e
    35b8:	dd 24       	eor	r13, r13
    35ba:	d3 94       	inc	r13
    35bc:	b8 96       	adiw	r30, 0x28	; 40
    35be:	89 e0       	ldi	r24, 0x09	; 9
    35c0:	e3 34       	cpi	r30, 0x43	; 67
    35c2:	f8 07       	cpc	r31, r24
    35c4:	51 f6       	brne	.-108    	; 0x355a <nrk_event_signal+0x50>
    35c6:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    35ca:	dd 20       	and	r13, r13
    35cc:	19 f0       	breq	.+6      	; 0x35d4 <nrk_event_signal+0xca>
    35ce:	81 e0       	ldi	r24, 0x01	; 1
    35d0:	90 e0       	ldi	r25, 0x00	; 0
    35d2:	05 c0       	rjmp	.+10     	; 0x35de <nrk_event_signal+0xd4>
    35d4:	82 e0       	ldi	r24, 0x02	; 2
    35d6:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <_nrk_errno_set>
    35da:	8f ef       	ldi	r24, 0xFF	; 255
    35dc:	9f ef       	ldi	r25, 0xFF	; 255
    35de:	1f 91       	pop	r17
    35e0:	0f 91       	pop	r16
    35e2:	ff 90       	pop	r15
    35e4:	ef 90       	pop	r14
    35e6:	df 90       	pop	r13
    35e8:	08 95       	ret

000035ea <nrk_signal_delete>:
    35ea:	ef 92       	push	r14
    35ec:	ff 92       	push	r15
    35ee:	0f 93       	push	r16
    35f0:	1f 93       	push	r17
    35f2:	cf 93       	push	r28
    35f4:	df 93       	push	r29
    35f6:	c8 2f       	mov	r28, r24
    35f8:	dd 27       	eor	r29, r29
    35fa:	c7 fd       	sbrc	r28, 7
    35fc:	d0 95       	com	r29
    35fe:	a1 e0       	ldi	r26, 0x01	; 1
    3600:	ea 2e       	mov	r14, r26
    3602:	f1 2c       	mov	r15, r1
    3604:	01 2d       	mov	r16, r1
    3606:	11 2d       	mov	r17, r1
    3608:	0c 2e       	mov	r0, r28
    360a:	04 c0       	rjmp	.+8      	; 0x3614 <nrk_signal_delete+0x2a>
    360c:	ee 0c       	add	r14, r14
    360e:	ff 1c       	adc	r15, r15
    3610:	00 1f       	adc	r16, r16
    3612:	11 1f       	adc	r17, r17
    3614:	0a 94       	dec	r0
    3616:	d2 f7       	brpl	.-12     	; 0x360c <nrk_signal_delete+0x22>
    3618:	80 91 8a 06 	lds	r24, 0x068A
    361c:	90 91 8b 06 	lds	r25, 0x068B
    3620:	a0 91 8c 06 	lds	r26, 0x068C
    3624:	b0 91 8d 06 	lds	r27, 0x068D
    3628:	8e 21       	and	r24, r14
    362a:	9f 21       	and	r25, r15
    362c:	a0 23       	and	r26, r16
    362e:	b1 23       	and	r27, r17
    3630:	00 97       	sbiw	r24, 0x00	; 0
    3632:	a1 05       	cpc	r26, r1
    3634:	b1 05       	cpc	r27, r1
    3636:	19 f4       	brne	.+6      	; 0x363e <nrk_signal_delete+0x54>
    3638:	8f ef       	ldi	r24, 0xFF	; 255
    363a:	9f ef       	ldi	r25, 0xFF	; 255
    363c:	5d c0       	rjmp	.+186    	; 0x36f8 <nrk_signal_delete+0x10e>
    363e:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3642:	e4 ed       	ldi	r30, 0xD4	; 212
    3644:	f7 e0       	ldi	r31, 0x07	; 7
    3646:	a8 01       	movw	r20, r16
    3648:	97 01       	movw	r18, r14
    364a:	20 95       	com	r18
    364c:	30 95       	com	r19
    364e:	40 95       	com	r20
    3650:	50 95       	com	r21
    3652:	80 85       	ldd	r24, Z+8	; 0x08
    3654:	8f 3f       	cpi	r24, 0xFF	; 255
    3656:	41 f1       	breq	.+80     	; 0x36a8 <nrk_signal_delete+0xbe>
    3658:	86 85       	ldd	r24, Z+14	; 0x0e
    365a:	97 85       	ldd	r25, Z+15	; 0x0f
    365c:	a0 89       	ldd	r26, Z+16	; 0x10
    365e:	b1 89       	ldd	r27, Z+17	; 0x11
    3660:	8e 15       	cp	r24, r14
    3662:	9f 05       	cpc	r25, r15
    3664:	a0 07       	cpc	r26, r16
    3666:	b1 07       	cpc	r27, r17
    3668:	39 f4       	brne	.+14     	; 0x3678 <nrk_signal_delete+0x8e>
    366a:	12 8a       	std	Z+18, r1	; 0x12
    366c:	13 8a       	std	Z+19, r1	; 0x13
    366e:	14 8a       	std	Z+20, r1	; 0x14
    3670:	15 8a       	std	Z+21, r1	; 0x15
    3672:	17 82       	std	Z+7, r1	; 0x07
    3674:	83 e0       	ldi	r24, 0x03	; 3
    3676:	81 87       	std	Z+9, r24	; 0x09
    3678:	86 85       	ldd	r24, Z+14	; 0x0e
    367a:	97 85       	ldd	r25, Z+15	; 0x0f
    367c:	a0 89       	ldd	r26, Z+16	; 0x10
    367e:	b1 89       	ldd	r27, Z+17	; 0x11
    3680:	82 23       	and	r24, r18
    3682:	93 23       	and	r25, r19
    3684:	a4 23       	and	r26, r20
    3686:	b5 23       	and	r27, r21
    3688:	86 87       	std	Z+14, r24	; 0x0e
    368a:	97 87       	std	Z+15, r25	; 0x0f
    368c:	a0 8b       	std	Z+16, r26	; 0x10
    368e:	b1 8b       	std	Z+17, r27	; 0x11
    3690:	82 89       	ldd	r24, Z+18	; 0x12
    3692:	93 89       	ldd	r25, Z+19	; 0x13
    3694:	a4 89       	ldd	r26, Z+20	; 0x14
    3696:	b5 89       	ldd	r27, Z+21	; 0x15
    3698:	82 23       	and	r24, r18
    369a:	93 23       	and	r25, r19
    369c:	a4 23       	and	r26, r20
    369e:	b5 23       	and	r27, r21
    36a0:	82 8b       	std	Z+18, r24	; 0x12
    36a2:	93 8b       	std	Z+19, r25	; 0x13
    36a4:	a4 8b       	std	Z+20, r26	; 0x14
    36a6:	b5 8b       	std	Z+21, r27	; 0x15
    36a8:	b8 96       	adiw	r30, 0x28	; 40
    36aa:	89 e0       	ldi	r24, 0x09	; 9
    36ac:	ec 33       	cpi	r30, 0x3C	; 60
    36ae:	f8 07       	cpc	r31, r24
    36b0:	81 f6       	brne	.-96     	; 0x3652 <nrk_signal_delete+0x68>
    36b2:	2e ef       	ldi	r18, 0xFE	; 254
    36b4:	3f ef       	ldi	r19, 0xFF	; 255
    36b6:	4f ef       	ldi	r20, 0xFF	; 255
    36b8:	5f ef       	ldi	r21, 0xFF	; 255
    36ba:	04 c0       	rjmp	.+8      	; 0x36c4 <nrk_signal_delete+0xda>
    36bc:	22 0f       	add	r18, r18
    36be:	33 1f       	adc	r19, r19
    36c0:	44 1f       	adc	r20, r20
    36c2:	55 1f       	adc	r21, r21
    36c4:	ca 95       	dec	r28
    36c6:	d2 f7       	brpl	.-12     	; 0x36bc <nrk_signal_delete+0xd2>
    36c8:	80 91 8a 06 	lds	r24, 0x068A
    36cc:	90 91 8b 06 	lds	r25, 0x068B
    36d0:	a0 91 8c 06 	lds	r26, 0x068C
    36d4:	b0 91 8d 06 	lds	r27, 0x068D
    36d8:	82 23       	and	r24, r18
    36da:	93 23       	and	r25, r19
    36dc:	a4 23       	and	r26, r20
    36de:	b5 23       	and	r27, r21
    36e0:	80 93 8a 06 	sts	0x068A, r24
    36e4:	90 93 8b 06 	sts	0x068B, r25
    36e8:	a0 93 8c 06 	sts	0x068C, r26
    36ec:	b0 93 8d 06 	sts	0x068D, r27
    36f0:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    36f4:	81 e0       	ldi	r24, 0x01	; 1
    36f6:	90 e0       	ldi	r25, 0x00	; 0
    36f8:	df 91       	pop	r29
    36fa:	cf 91       	pop	r28
    36fc:	1f 91       	pop	r17
    36fe:	0f 91       	pop	r16
    3700:	ff 90       	pop	r15
    3702:	ef 90       	pop	r14
    3704:	08 95       	ret

00003706 <nrk_sem_pend>:
    3706:	1f 93       	push	r17
    3708:	cf 93       	push	r28
    370a:	df 93       	push	r29
    370c:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <nrk_get_resource_index>
    3710:	18 2f       	mov	r17, r24
    3712:	8f 3f       	cpi	r24, 0xFF	; 255
    3714:	11 f4       	brne	.+4      	; 0x371a <nrk_sem_pend+0x14>
    3716:	81 e0       	ldi	r24, 0x01	; 1
    3718:	03 c0       	rjmp	.+6      	; 0x3720 <nrk_sem_pend+0x1a>
    371a:	89 30       	cpi	r24, 0x09	; 9
    371c:	31 f4       	brne	.+12     	; 0x372a <nrk_sem_pend+0x24>
    371e:	82 e0       	ldi	r24, 0x02	; 2
    3720:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <_nrk_errno_set>
    3724:	8f ef       	ldi	r24, 0xFF	; 255
    3726:	9f ef       	ldi	r25, 0xFF	; 255
    3728:	48 c0       	rjmp	.+144    	; 0x37ba <nrk_sem_pend+0xb4>
    372a:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    372e:	81 2f       	mov	r24, r17
    3730:	99 27       	eor	r25, r25
    3732:	87 fd       	sbrc	r24, 7
    3734:	90 95       	com	r25
    3736:	ec 01       	movw	r28, r24
    3738:	cc 0f       	add	r28, r28
    373a:	dd 1f       	adc	r29, r29
    373c:	c8 0f       	add	r28, r24
    373e:	d9 1f       	adc	r29, r25
    3740:	c2 5c       	subi	r28, 0xC2	; 194
    3742:	d6 4f       	sbci	r29, 0xF6	; 246
    3744:	8a 81       	ldd	r24, Y+2	; 0x02
    3746:	88 23       	and	r24, r24
    3748:	d9 f4       	brne	.+54     	; 0x3780 <nrk_sem_pend+0x7a>
    374a:	e0 91 6a 09 	lds	r30, 0x096A
    374e:	f0 91 6b 09 	lds	r31, 0x096B
    3752:	87 81       	ldd	r24, Z+7	; 0x07
    3754:	82 60       	ori	r24, 0x02	; 2
    3756:	87 83       	std	Z+7, r24	; 0x07
    3758:	e0 91 6a 09 	lds	r30, 0x096A
    375c:	f0 91 6b 09 	lds	r31, 0x096B
    3760:	81 2f       	mov	r24, r17
    3762:	99 27       	eor	r25, r25
    3764:	87 fd       	sbrc	r24, 7
    3766:	90 95       	com	r25
    3768:	a9 2f       	mov	r26, r25
    376a:	b9 2f       	mov	r27, r25
    376c:	82 8b       	std	Z+18, r24	; 0x12
    376e:	93 8b       	std	Z+19, r25	; 0x13
    3770:	a4 8b       	std	Z+20, r26	; 0x14
    3772:	b5 8b       	std	Z+21, r27	; 0x15
    3774:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    3778:	80 e0       	ldi	r24, 0x00	; 0
    377a:	90 e0       	ldi	r25, 0x00	; 0
    377c:	0e 94 a0 1d 	call	0x3b40	; 0x3b40 <nrk_wait_until_ticks>
    3780:	8a 81       	ldd	r24, Y+2	; 0x02
    3782:	81 50       	subi	r24, 0x01	; 1
    3784:	8a 83       	std	Y+2, r24	; 0x02
    3786:	0e 94 be 18 	call	0x317c	; 0x317c <system_ceiling>
    378a:	60 93 06 06 	sts	0x0606, r22
    378e:	70 93 07 06 	sts	0x0607, r23
    3792:	80 93 08 06 	sts	0x0608, r24
    3796:	90 93 09 06 	sts	0x0609, r25
    379a:	e0 91 6a 09 	lds	r30, 0x096A
    379e:	f0 91 6b 09 	lds	r31, 0x096B
    37a2:	89 81       	ldd	r24, Y+1	; 0x01
    37a4:	84 87       	std	Z+12, r24	; 0x0c
    37a6:	e0 91 6a 09 	lds	r30, 0x096A
    37aa:	f0 91 6b 09 	lds	r31, 0x096B
    37ae:	81 e0       	ldi	r24, 0x01	; 1
    37b0:	84 83       	std	Z+4, r24	; 0x04
    37b2:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    37b6:	81 e0       	ldi	r24, 0x01	; 1
    37b8:	90 e0       	ldi	r25, 0x00	; 0
    37ba:	df 91       	pop	r29
    37bc:	cf 91       	pop	r28
    37be:	1f 91       	pop	r17
    37c0:	08 95       	ret

000037c2 <nrk_event_wait>:
    37c2:	9b 01       	movw	r18, r22
    37c4:	ac 01       	movw	r20, r24
    37c6:	e0 91 6a 09 	lds	r30, 0x096A
    37ca:	f0 91 6b 09 	lds	r31, 0x096B
    37ce:	86 85       	ldd	r24, Z+14	; 0x0e
    37d0:	97 85       	ldd	r25, Z+15	; 0x0f
    37d2:	a0 89       	ldd	r26, Z+16	; 0x10
    37d4:	b1 89       	ldd	r27, Z+17	; 0x11
    37d6:	82 23       	and	r24, r18
    37d8:	93 23       	and	r25, r19
    37da:	a4 23       	and	r26, r20
    37dc:	b5 23       	and	r27, r21
    37de:	00 97       	sbiw	r24, 0x00	; 0
    37e0:	a1 05       	cpc	r26, r1
    37e2:	b1 05       	cpc	r27, r1
    37e4:	29 f4       	brne	.+10     	; 0x37f0 <nrk_event_wait+0x2e>
    37e6:	60 e0       	ldi	r22, 0x00	; 0
    37e8:	70 e0       	ldi	r23, 0x00	; 0
    37ea:	80 e0       	ldi	r24, 0x00	; 0
    37ec:	90 e0       	ldi	r25, 0x00	; 0
    37ee:	08 95       	ret
    37f0:	22 8b       	std	Z+18, r18	; 0x12
    37f2:	33 8b       	std	Z+19, r19	; 0x13
    37f4:	44 8b       	std	Z+20, r20	; 0x14
    37f6:	55 8b       	std	Z+21, r21	; 0x15
    37f8:	81 e0       	ldi	r24, 0x01	; 1
    37fa:	87 83       	std	Z+7, r24	; 0x07
    37fc:	00 90 5a 09 	lds	r0, 0x095A
    3800:	04 c0       	rjmp	.+8      	; 0x380a <nrk_event_wait+0x48>
    3802:	56 95       	lsr	r21
    3804:	47 95       	ror	r20
    3806:	37 95       	ror	r19
    3808:	27 95       	ror	r18
    380a:	0a 94       	dec	r0
    380c:	d2 f7       	brpl	.-12     	; 0x3802 <nrk_event_wait+0x40>
    380e:	c9 01       	movw	r24, r18
    3810:	81 70       	andi	r24, 0x01	; 1
    3812:	90 70       	andi	r25, 0x00	; 0
    3814:	89 2b       	or	r24, r25
    3816:	19 f0       	breq	.+6      	; 0x381e <nrk_event_wait+0x5c>
    3818:	0e 94 3b 1d 	call	0x3a76	; 0x3a76 <nrk_wait_until_nw>
    381c:	04 c0       	rjmp	.+8      	; 0x3826 <nrk_event_wait+0x64>
    381e:	80 e0       	ldi	r24, 0x00	; 0
    3820:	90 e0       	ldi	r25, 0x00	; 0
    3822:	0e 94 a0 1d 	call	0x3b40	; 0x3b40 <nrk_wait_until_ticks>
    3826:	e0 91 6a 09 	lds	r30, 0x096A
    382a:	f0 91 6b 09 	lds	r31, 0x096B
    382e:	62 89       	ldd	r22, Z+18	; 0x12
    3830:	73 89       	ldd	r23, Z+19	; 0x13
    3832:	84 89       	ldd	r24, Z+20	; 0x14
    3834:	95 89       	ldd	r25, Z+21	; 0x15
    3836:	08 95       	ret

00003838 <nrk_get_high_ready_task_ID>:
//
//	PARAMETERS:
//		UINT8 channel
//			The channel number (11-26)
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
    3838:	e0 91 5f 09 	lds	r30, 0x095F
    383c:	f0 91 60 09 	lds	r31, 0x0960
    3840:	80 81       	ld	r24, Z
	uint16_t f;
	
    3842:	99 27       	eor	r25, r25
    3844:	08 95       	ret

00003846 <nrk_rem_from_readyQ>:
    3846:	cf 93       	push	r28
    3848:	df 93       	push	r29
    384a:	a0 91 5f 09 	lds	r26, 0x095F
    384e:	b0 91 60 09 	lds	r27, 0x0960
    3852:	10 97       	sbiw	r26, 0x00	; 0
    3854:	09 f4       	brne	.+2      	; 0x3858 <nrk_rem_from_readyQ+0x12>
    3856:	46 c0       	rjmp	.+140    	; 0x38e4 <nrk_rem_from_readyQ+0x9e>
    3858:	48 2f       	mov	r20, r24
    385a:	55 27       	eor	r21, r21
    385c:	47 fd       	sbrc	r20, 7
    385e:	50 95       	com	r21
    3860:	8c 91       	ld	r24, X
    3862:	99 27       	eor	r25, r25
    3864:	84 17       	cp	r24, r20
    3866:	95 07       	cpc	r25, r21
    3868:	69 f4       	brne	.+26     	; 0x3884 <nrk_rem_from_readyQ+0x3e>
    386a:	ed 01       	movw	r28, r26
    386c:	eb 81       	ldd	r30, Y+3	; 0x03
    386e:	fc 81       	ldd	r31, Y+4	; 0x04
    3870:	f0 93 60 09 	sts	0x0960, r31
    3874:	e0 93 5f 09 	sts	0x095F, r30
    3878:	12 82       	std	Z+2, r1	; 0x02
    387a:	11 82       	std	Z+1, r1	; 0x01
    387c:	16 c0       	rjmp	.+44     	; 0x38aa <nrk_rem_from_readyQ+0x64>
    387e:	d9 01       	movw	r26, r18
    3880:	23 2b       	or	r18, r19
    3882:	81 f1       	breq	.+96     	; 0x38e4 <nrk_rem_from_readyQ+0x9e>
    3884:	8c 91       	ld	r24, X
    3886:	99 27       	eor	r25, r25
    3888:	fd 01       	movw	r30, r26
    388a:	23 81       	ldd	r18, Z+3	; 0x03
    388c:	34 81       	ldd	r19, Z+4	; 0x04
    388e:	84 17       	cp	r24, r20
    3890:	95 07       	cpc	r25, r21
    3892:	a9 f7       	brne	.-22     	; 0x387e <nrk_rem_from_readyQ+0x38>
    3894:	c1 81       	ldd	r28, Z+1	; 0x01
    3896:	d2 81       	ldd	r29, Z+2	; 0x02
    3898:	3c 83       	std	Y+4, r19	; 0x04
    389a:	2b 83       	std	Y+3, r18	; 0x03
    389c:	83 81       	ldd	r24, Z+3	; 0x03
    389e:	94 81       	ldd	r25, Z+4	; 0x04
    38a0:	00 97       	sbiw	r24, 0x00	; 0
    38a2:	19 f0       	breq	.+6      	; 0x38aa <nrk_rem_from_readyQ+0x64>
    38a4:	fc 01       	movw	r30, r24
    38a6:	d2 83       	std	Z+2, r29	; 0x02
    38a8:	c1 83       	std	Z+1, r28	; 0x01
    38aa:	e0 91 d2 07 	lds	r30, 0x07D2
    38ae:	f0 91 d3 07 	lds	r31, 0x07D3
    38b2:	30 97       	sbiw	r30, 0x00	; 0
    38b4:	41 f4       	brne	.+16     	; 0x38c6 <nrk_rem_from_readyQ+0x80>
    38b6:	b0 93 d3 07 	sts	0x07D3, r27
    38ba:	a0 93 d2 07 	sts	0x07D2, r26
    38be:	ed 01       	movw	r28, r26
    38c0:	1c 82       	std	Y+4, r1	; 0x04
    38c2:	1b 82       	std	Y+3, r1	; 0x03
    38c4:	09 c0       	rjmp	.+18     	; 0x38d8 <nrk_rem_from_readyQ+0x92>
    38c6:	ed 01       	movw	r28, r26
    38c8:	fc 83       	std	Y+4, r31	; 0x04
    38ca:	eb 83       	std	Y+3, r30	; 0x03
    38cc:	b2 83       	std	Z+2, r27	; 0x02
    38ce:	a1 83       	std	Z+1, r26	; 0x01
    38d0:	b0 93 d3 07 	sts	0x07D3, r27
    38d4:	a0 93 d2 07 	sts	0x07D2, r26
    38d8:	e0 91 d2 07 	lds	r30, 0x07D2
    38dc:	f0 91 d3 07 	lds	r31, 0x07D3
    38e0:	12 82       	std	Z+2, r1	; 0x02
    38e2:	11 82       	std	Z+1, r1	; 0x01
    38e4:	df 91       	pop	r29
    38e6:	cf 91       	pop	r28
    38e8:	08 95       	ret

000038ea <nrk_get_pid>:
    38ea:	e0 91 6a 09 	lds	r30, 0x096A
    38ee:	f0 91 6b 09 	lds	r31, 0x096B
    38f2:	80 85       	ldd	r24, Z+8	; 0x08
    38f4:	99 27       	eor	r25, r25
    38f6:	08 95       	ret

000038f8 <_nrk_wait_for_scheduler>:
    38f8:	0e 94 23 28 	call	0x5046	; 0x5046 <nrk_idle>
    38fc:	e0 91 6a 09 	lds	r30, 0x096A
    3900:	f0 91 6b 09 	lds	r31, 0x096B
    3904:	85 81       	ldd	r24, Z+5	; 0x05
    3906:	88 23       	and	r24, r24
    3908:	b9 f7       	brne	.-18     	; 0x38f8 <_nrk_wait_for_scheduler>
    390a:	08 95       	ret

0000390c <nrk_wait>:
    390c:	ff 92       	push	r15
    390e:	0f 93       	push	r16
    3910:	1f 93       	push	r17
    3912:	cf 93       	push	r28
    3914:	df 93       	push	r29
    3916:	cd b7       	in	r28, 0x3d	; 61
    3918:	de b7       	in	r29, 0x3e	; 62
    391a:	28 97       	sbiw	r28, 0x08	; 8
    391c:	0f b6       	in	r0, 0x3f	; 63
    391e:	f8 94       	cli
    3920:	de bf       	out	0x3e, r29	; 62
    3922:	0f be       	out	0x3f, r0	; 63
    3924:	cd bf       	out	0x3d, r28	; 61
    3926:	29 83       	std	Y+1, r18	; 0x01
    3928:	3a 83       	std	Y+2, r19	; 0x02
    392a:	4b 83       	std	Y+3, r20	; 0x03
    392c:	5c 83       	std	Y+4, r21	; 0x04
    392e:	6d 83       	std	Y+5, r22	; 0x05
    3930:	7e 83       	std	Y+6, r23	; 0x06
    3932:	8f 83       	std	Y+7, r24	; 0x07
    3934:	98 87       	std	Y+8, r25	; 0x08
    3936:	0e 94 9b 18 	call	0x3136	; 0x3136 <nrk_stack_check>
    393a:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    393e:	e0 91 6a 09 	lds	r30, 0x096A
    3942:	f0 91 6b 09 	lds	r31, 0x096B
    3946:	81 e0       	ldi	r24, 0x01	; 1
    3948:	85 83       	std	Z+5, r24	; 0x05
    394a:	81 e0       	ldi	r24, 0x01	; 1
    394c:	90 e0       	ldi	r25, 0x00	; 0
    394e:	91 a3       	std	Z+33, r25	; 0x21
    3950:	80 a3       	std	Z+32, r24	; 0x20
    3952:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    3956:	f8 2e       	mov	r15, r24
    3958:	29 81       	ldd	r18, Y+1	; 0x01
    395a:	3a 81       	ldd	r19, Y+2	; 0x02
    395c:	4b 81       	ldd	r20, Y+3	; 0x03
    395e:	5c 81       	ldd	r21, Y+4	; 0x04
    3960:	6d 81       	ldd	r22, Y+5	; 0x05
    3962:	7e 81       	ldd	r23, Y+6	; 0x06
    3964:	8f 81       	ldd	r24, Y+7	; 0x07
    3966:	98 85       	ldd	r25, Y+8	; 0x08
    3968:	0e 94 b2 20 	call	0x4164	; 0x4164 <_nrk_time_to_ticks>
    396c:	e0 91 6a 09 	lds	r30, 0x096A
    3970:	f0 91 6b 09 	lds	r31, 0x096B
    3974:	0f 2d       	mov	r16, r15
    3976:	11 27       	eor	r17, r17
    3978:	80 0f       	add	r24, r16
    397a:	91 1f       	adc	r25, r17
    397c:	97 8b       	std	Z+23, r25	; 0x17
    397e:	86 8b       	std	Z+22, r24	; 0x16
    3980:	87 ef       	ldi	r24, 0xF7	; 247
    3982:	8f 15       	cp	r24, r15
    3984:	70 f0       	brcs	.+28     	; 0x39a2 <nrk_wait+0x96>
    3986:	0e 94 93 26 	call	0x4d26	; 0x4d26 <_nrk_get_next_wakeup>
    398a:	0e 5f       	subi	r16, 0xFE	; 254
    398c:	1f 4f       	sbci	r17, 0xFF	; 255
    398e:	99 27       	eor	r25, r25
    3990:	80 17       	cp	r24, r16
    3992:	91 07       	cpc	r25, r17
    3994:	34 f0       	brlt	.+12     	; 0x39a2 <nrk_wait+0x96>
    3996:	8f 2d       	mov	r24, r15
    3998:	8e 5f       	subi	r24, 0xFE	; 254
    399a:	80 93 11 07 	sts	0x0711, r24
    399e:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <_nrk_set_next_wakeup>
    39a2:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    39a6:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_nrk_wait_for_scheduler>
    39aa:	81 e0       	ldi	r24, 0x01	; 1
    39ac:	90 e0       	ldi	r25, 0x00	; 0
    39ae:	28 96       	adiw	r28, 0x08	; 8
    39b0:	0f b6       	in	r0, 0x3f	; 63
    39b2:	f8 94       	cli
    39b4:	de bf       	out	0x3e, r29	; 62
    39b6:	0f be       	out	0x3f, r0	; 63
    39b8:	cd bf       	out	0x3d, r28	; 61
    39ba:	df 91       	pop	r29
    39bc:	cf 91       	pop	r28
    39be:	1f 91       	pop	r17
    39c0:	0f 91       	pop	r16
    39c2:	ff 90       	pop	r15
    39c4:	08 95       	ret

000039c6 <nrk_wait_until>:
    39c6:	8f 92       	push	r8
    39c8:	9f 92       	push	r9
    39ca:	af 92       	push	r10
    39cc:	bf 92       	push	r11
    39ce:	cf 92       	push	r12
    39d0:	df 92       	push	r13
    39d2:	ef 92       	push	r14
    39d4:	ff 92       	push	r15
    39d6:	0f 93       	push	r16
    39d8:	1f 93       	push	r17
    39da:	cf 93       	push	r28
    39dc:	df 93       	push	r29
    39de:	cd b7       	in	r28, 0x3d	; 61
    39e0:	de b7       	in	r29, 0x3e	; 62
    39e2:	60 97       	sbiw	r28, 0x10	; 16
    39e4:	0f b6       	in	r0, 0x3f	; 63
    39e6:	f8 94       	cli
    39e8:	de bf       	out	0x3e, r29	; 62
    39ea:	0f be       	out	0x3f, r0	; 63
    39ec:	cd bf       	out	0x3d, r28	; 61
    39ee:	29 87       	std	Y+9, r18	; 0x09
    39f0:	3a 87       	std	Y+10, r19	; 0x0a
    39f2:	4b 87       	std	Y+11, r20	; 0x0b
    39f4:	5c 87       	std	Y+12, r21	; 0x0c
    39f6:	6d 87       	std	Y+13, r22	; 0x0d
    39f8:	7e 87       	std	Y+14, r23	; 0x0e
    39fa:	8f 87       	std	Y+15, r24	; 0x0f
    39fc:	98 8b       	std	Y+16, r25	; 0x10
    39fe:	ce 01       	movw	r24, r28
    3a00:	01 96       	adiw	r24, 0x01	; 1
    3a02:	0e 94 18 22 	call	0x4430	; 0x4430 <nrk_time_get>
    3a06:	89 80       	ldd	r8, Y+1	; 0x01
    3a08:	9a 80       	ldd	r9, Y+2	; 0x02
    3a0a:	ab 80       	ldd	r10, Y+3	; 0x03
    3a0c:	bc 80       	ldd	r11, Y+4	; 0x04
    3a0e:	cd 80       	ldd	r12, Y+5	; 0x05
    3a10:	de 80       	ldd	r13, Y+6	; 0x06
    3a12:	ef 80       	ldd	r14, Y+7	; 0x07
    3a14:	f8 84       	ldd	r15, Y+8	; 0x08
    3a16:	09 85       	ldd	r16, Y+9	; 0x09
    3a18:	1a 85       	ldd	r17, Y+10	; 0x0a
    3a1a:	2b 85       	ldd	r18, Y+11	; 0x0b
    3a1c:	3c 85       	ldd	r19, Y+12	; 0x0c
    3a1e:	4d 85       	ldd	r20, Y+13	; 0x0d
    3a20:	5e 85       	ldd	r21, Y+14	; 0x0e
    3a22:	6f 85       	ldd	r22, Y+15	; 0x0f
    3a24:	78 89       	ldd	r23, Y+16	; 0x10
    3a26:	ce 01       	movw	r24, r28
    3a28:	09 96       	adiw	r24, 0x09	; 9
    3a2a:	0e 94 93 1f 	call	0x3f26	; 0x3f26 <nrk_time_sub>
    3a2e:	88 23       	and	r24, r24
    3a30:	19 f4       	brne	.+6      	; 0x3a38 <nrk_wait_until+0x72>
    3a32:	8f ef       	ldi	r24, 0xFF	; 255
    3a34:	9f ef       	ldi	r25, 0xFF	; 255
    3a36:	0c c0       	rjmp	.+24     	; 0x3a50 <nrk_wait_until+0x8a>
    3a38:	29 85       	ldd	r18, Y+9	; 0x09
    3a3a:	3a 85       	ldd	r19, Y+10	; 0x0a
    3a3c:	4b 85       	ldd	r20, Y+11	; 0x0b
    3a3e:	5c 85       	ldd	r21, Y+12	; 0x0c
    3a40:	6d 85       	ldd	r22, Y+13	; 0x0d
    3a42:	7e 85       	ldd	r23, Y+14	; 0x0e
    3a44:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a46:	98 89       	ldd	r25, Y+16	; 0x10
    3a48:	0e 94 86 1c 	call	0x390c	; 0x390c <nrk_wait>
    3a4c:	81 e0       	ldi	r24, 0x01	; 1
    3a4e:	90 e0       	ldi	r25, 0x00	; 0
    3a50:	60 96       	adiw	r28, 0x10	; 16
    3a52:	0f b6       	in	r0, 0x3f	; 63
    3a54:	f8 94       	cli
    3a56:	de bf       	out	0x3e, r29	; 62
    3a58:	0f be       	out	0x3f, r0	; 63
    3a5a:	cd bf       	out	0x3d, r28	; 61
    3a5c:	df 91       	pop	r29
    3a5e:	cf 91       	pop	r28
    3a60:	1f 91       	pop	r17
    3a62:	0f 91       	pop	r16
    3a64:	ff 90       	pop	r15
    3a66:	ef 90       	pop	r14
    3a68:	df 90       	pop	r13
    3a6a:	cf 90       	pop	r12
    3a6c:	bf 90       	pop	r11
    3a6e:	af 90       	pop	r10
    3a70:	9f 90       	pop	r9
    3a72:	8f 90       	pop	r8
    3a74:	08 95       	ret

00003a76 <nrk_wait_until_nw>:
    3a76:	1f 93       	push	r17
    3a78:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3a7c:	e0 91 6a 09 	lds	r30, 0x096A
    3a80:	f0 91 6b 09 	lds	r31, 0x096B
    3a84:	81 e0       	ldi	r24, 0x01	; 1
    3a86:	85 83       	std	Z+5, r24	; 0x05
    3a88:	86 83       	std	Z+6, r24	; 0x06
    3a8a:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    3a8e:	18 2f       	mov	r17, r24
    3a90:	88 3f       	cpi	r24, 0xF8	; 248
    3a92:	80 f4       	brcc	.+32     	; 0x3ab4 <nrk_wait_until_nw+0x3e>
    3a94:	0e 94 93 26 	call	0x4d26	; 0x4d26 <_nrk_get_next_wakeup>
    3a98:	21 2f       	mov	r18, r17
    3a9a:	33 27       	eor	r19, r19
    3a9c:	2e 5f       	subi	r18, 0xFE	; 254
    3a9e:	3f 4f       	sbci	r19, 0xFF	; 255
    3aa0:	99 27       	eor	r25, r25
    3aa2:	82 17       	cp	r24, r18
    3aa4:	93 07       	cpc	r25, r19
    3aa6:	34 f0       	brlt	.+12     	; 0x3ab4 <nrk_wait_until_nw+0x3e>
    3aa8:	81 2f       	mov	r24, r17
    3aaa:	8e 5f       	subi	r24, 0xFE	; 254
    3aac:	80 93 11 07 	sts	0x0711, r24
    3ab0:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <_nrk_set_next_wakeup>
    3ab4:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    3ab8:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_nrk_wait_for_scheduler>
    3abc:	81 e0       	ldi	r24, 0x01	; 1
    3abe:	90 e0       	ldi	r25, 0x00	; 0
    3ac0:	1f 91       	pop	r17
    3ac2:	08 95       	ret

00003ac4 <nrk_set_next_wakeup>:
    3ac4:	1f 93       	push	r17
    3ac6:	cf 93       	push	r28
    3ac8:	df 93       	push	r29
    3aca:	cd b7       	in	r28, 0x3d	; 61
    3acc:	de b7       	in	r29, 0x3e	; 62
    3ace:	28 97       	sbiw	r28, 0x08	; 8
    3ad0:	0f b6       	in	r0, 0x3f	; 63
    3ad2:	f8 94       	cli
    3ad4:	de bf       	out	0x3e, r29	; 62
    3ad6:	0f be       	out	0x3f, r0	; 63
    3ad8:	cd bf       	out	0x3d, r28	; 61
    3ada:	29 83       	std	Y+1, r18	; 0x01
    3adc:	3a 83       	std	Y+2, r19	; 0x02
    3ade:	4b 83       	std	Y+3, r20	; 0x03
    3ae0:	5c 83       	std	Y+4, r21	; 0x04
    3ae2:	6d 83       	std	Y+5, r22	; 0x05
    3ae4:	7e 83       	std	Y+6, r23	; 0x06
    3ae6:	8f 83       	std	Y+7, r24	; 0x07
    3ae8:	98 87       	std	Y+8, r25	; 0x08
    3aea:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3aee:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    3af2:	18 2f       	mov	r17, r24
    3af4:	29 81       	ldd	r18, Y+1	; 0x01
    3af6:	3a 81       	ldd	r19, Y+2	; 0x02
    3af8:	4b 81       	ldd	r20, Y+3	; 0x03
    3afa:	5c 81       	ldd	r21, Y+4	; 0x04
    3afc:	6d 81       	ldd	r22, Y+5	; 0x05
    3afe:	7e 81       	ldd	r23, Y+6	; 0x06
    3b00:	8f 81       	ldd	r24, Y+7	; 0x07
    3b02:	98 85       	ldd	r25, Y+8	; 0x08
    3b04:	0e 94 b2 20 	call	0x4164	; 0x4164 <_nrk_time_to_ticks>
    3b08:	83 30       	cpi	r24, 0x03	; 3
    3b0a:	91 05       	cpc	r25, r1
    3b0c:	18 f4       	brcc	.+6      	; 0x3b14 <nrk_set_next_wakeup+0x50>
    3b0e:	8f ef       	ldi	r24, 0xFF	; 255
    3b10:	9f ef       	ldi	r25, 0xFF	; 255
    3b12:	0c c0       	rjmp	.+24     	; 0x3b2c <nrk_set_next_wakeup+0x68>
    3b14:	e0 91 6a 09 	lds	r30, 0x096A
    3b18:	f0 91 6b 09 	lds	r31, 0x096B
    3b1c:	81 0f       	add	r24, r17
    3b1e:	91 1d       	adc	r25, r1
    3b20:	97 8b       	std	Z+23, r25	; 0x17
    3b22:	86 8b       	std	Z+22, r24	; 0x16
    3b24:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    3b28:	81 e0       	ldi	r24, 0x01	; 1
    3b2a:	90 e0       	ldi	r25, 0x00	; 0
    3b2c:	28 96       	adiw	r28, 0x08	; 8
    3b2e:	0f b6       	in	r0, 0x3f	; 63
    3b30:	f8 94       	cli
    3b32:	de bf       	out	0x3e, r29	; 62
    3b34:	0f be       	out	0x3f, r0	; 63
    3b36:	cd bf       	out	0x3d, r28	; 61
    3b38:	df 91       	pop	r29
    3b3a:	cf 91       	pop	r28
    3b3c:	1f 91       	pop	r17
    3b3e:	08 95       	ret

00003b40 <nrk_wait_until_ticks>:
    3b40:	0f 93       	push	r16
    3b42:	1f 93       	push	r17
    3b44:	8c 01       	movw	r16, r24
    3b46:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3b4a:	e0 91 6a 09 	lds	r30, 0x096A
    3b4e:	f0 91 6b 09 	lds	r31, 0x096B
    3b52:	81 e0       	ldi	r24, 0x01	; 1
    3b54:	85 83       	std	Z+5, r24	; 0x05
    3b56:	17 8b       	std	Z+23, r17	; 0x17
    3b58:	06 8b       	std	Z+22, r16	; 0x16
    3b5a:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    3b5e:	08 2f       	mov	r16, r24
    3b60:	88 3f       	cpi	r24, 0xF8	; 248
    3b62:	80 f4       	brcc	.+32     	; 0x3b84 <nrk_wait_until_ticks+0x44>
    3b64:	0e 94 93 26 	call	0x4d26	; 0x4d26 <_nrk_get_next_wakeup>
    3b68:	20 2f       	mov	r18, r16
    3b6a:	33 27       	eor	r19, r19
    3b6c:	2e 5f       	subi	r18, 0xFE	; 254
    3b6e:	3f 4f       	sbci	r19, 0xFF	; 255
    3b70:	99 27       	eor	r25, r25
    3b72:	82 17       	cp	r24, r18
    3b74:	93 07       	cpc	r25, r19
    3b76:	34 f0       	brlt	.+12     	; 0x3b84 <nrk_wait_until_ticks+0x44>
    3b78:	80 2f       	mov	r24, r16
    3b7a:	8e 5f       	subi	r24, 0xFE	; 254
    3b7c:	80 93 11 07 	sts	0x0711, r24
    3b80:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <_nrk_set_next_wakeup>
    3b84:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    3b88:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_nrk_wait_for_scheduler>
    3b8c:	81 e0       	ldi	r24, 0x01	; 1
    3b8e:	90 e0       	ldi	r25, 0x00	; 0
    3b90:	1f 91       	pop	r17
    3b92:	0f 91       	pop	r16
    3b94:	08 95       	ret

00003b96 <nrk_wait_ticks>:
    3b96:	ff 92       	push	r15
    3b98:	0f 93       	push	r16
    3b9a:	1f 93       	push	r17
    3b9c:	cf 93       	push	r28
    3b9e:	df 93       	push	r29
    3ba0:	8c 01       	movw	r16, r24
    3ba2:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3ba6:	e0 91 6a 09 	lds	r30, 0x096A
    3baa:	f0 91 6b 09 	lds	r31, 0x096B
    3bae:	81 e0       	ldi	r24, 0x01	; 1
    3bb0:	85 83       	std	Z+5, r24	; 0x05
    3bb2:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    3bb6:	f8 2e       	mov	r15, r24
    3bb8:	e0 91 6a 09 	lds	r30, 0x096A
    3bbc:	f0 91 6b 09 	lds	r31, 0x096B
    3bc0:	c8 2f       	mov	r28, r24
    3bc2:	dd 27       	eor	r29, r29
    3bc4:	0c 0f       	add	r16, r28
    3bc6:	1d 1f       	adc	r17, r29
    3bc8:	17 8b       	std	Z+23, r17	; 0x17
    3bca:	06 8b       	std	Z+22, r16	; 0x16
    3bcc:	87 ef       	ldi	r24, 0xF7	; 247
    3bce:	8f 15       	cp	r24, r15
    3bd0:	68 f0       	brcs	.+26     	; 0x3bec <nrk_wait_ticks+0x56>
    3bd2:	0e 94 93 26 	call	0x4d26	; 0x4d26 <_nrk_get_next_wakeup>
    3bd6:	22 96       	adiw	r28, 0x02	; 2
    3bd8:	99 27       	eor	r25, r25
    3bda:	8c 17       	cp	r24, r28
    3bdc:	9d 07       	cpc	r25, r29
    3bde:	34 f0       	brlt	.+12     	; 0x3bec <nrk_wait_ticks+0x56>
    3be0:	8f 2d       	mov	r24, r15
    3be2:	8e 5f       	subi	r24, 0xFE	; 254
    3be4:	80 93 11 07 	sts	0x0711, r24
    3be8:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <_nrk_set_next_wakeup>
    3bec:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    3bf0:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_nrk_wait_for_scheduler>
    3bf4:	81 e0       	ldi	r24, 0x01	; 1
    3bf6:	90 e0       	ldi	r25, 0x00	; 0
    3bf8:	df 91       	pop	r29
    3bfa:	cf 91       	pop	r28
    3bfc:	1f 91       	pop	r17
    3bfe:	0f 91       	pop	r16
    3c00:	ff 90       	pop	r15
    3c02:	08 95       	ret

00003c04 <nrk_wait_until_next_n_periods>:
    3c04:	1f 93       	push	r17
    3c06:	cf 93       	push	r28
    3c08:	df 93       	push	r29
    3c0a:	ec 01       	movw	r28, r24
    3c0c:	0e 94 9b 18 	call	0x3136	; 0x3136 <nrk_stack_check>
    3c10:	20 97       	sbiw	r28, 0x00	; 0
    3c12:	11 f4       	brne	.+4      	; 0x3c18 <nrk_wait_until_next_n_periods+0x14>
    3c14:	c1 e0       	ldi	r28, 0x01	; 1
    3c16:	d0 e0       	ldi	r29, 0x00	; 0
    3c18:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3c1c:	e0 91 6a 09 	lds	r30, 0x096A
    3c20:	f0 91 6b 09 	lds	r31, 0x096B
    3c24:	81 e0       	ldi	r24, 0x01	; 1
    3c26:	85 83       	std	Z+5, r24	; 0x05
    3c28:	d1 a3       	std	Z+33, r29	; 0x21
    3c2a:	c0 a3       	std	Z+32, r28	; 0x20
    3c2c:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    3c30:	18 2f       	mov	r17, r24
    3c32:	88 3f       	cpi	r24, 0xF8	; 248
    3c34:	80 f4       	brcc	.+32     	; 0x3c56 <nrk_wait_until_next_n_periods+0x52>
    3c36:	0e 94 93 26 	call	0x4d26	; 0x4d26 <_nrk_get_next_wakeup>
    3c3a:	21 2f       	mov	r18, r17
    3c3c:	33 27       	eor	r19, r19
    3c3e:	2e 5f       	subi	r18, 0xFE	; 254
    3c40:	3f 4f       	sbci	r19, 0xFF	; 255
    3c42:	99 27       	eor	r25, r25
    3c44:	82 17       	cp	r24, r18
    3c46:	93 07       	cpc	r25, r19
    3c48:	34 f0       	brlt	.+12     	; 0x3c56 <nrk_wait_until_next_n_periods+0x52>
    3c4a:	81 2f       	mov	r24, r17
    3c4c:	8e 5f       	subi	r24, 0xFE	; 254
    3c4e:	80 93 11 07 	sts	0x0711, r24
    3c52:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <_nrk_set_next_wakeup>
    3c56:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    3c5a:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_nrk_wait_for_scheduler>
    3c5e:	81 e0       	ldi	r24, 0x01	; 1
    3c60:	90 e0       	ldi	r25, 0x00	; 0
    3c62:	df 91       	pop	r29
    3c64:	cf 91       	pop	r28
    3c66:	1f 91       	pop	r17
    3c68:	08 95       	ret

00003c6a <nrk_wait_until_next_period>:
    3c6a:	1f 93       	push	r17
    3c6c:	0e 94 9b 18 	call	0x3136	; 0x3136 <nrk_stack_check>
    3c70:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
    3c74:	e0 91 6a 09 	lds	r30, 0x096A
    3c78:	f0 91 6b 09 	lds	r31, 0x096B
    3c7c:	81 e0       	ldi	r24, 0x01	; 1
    3c7e:	90 e0       	ldi	r25, 0x00	; 0
    3c80:	91 a3       	std	Z+33, r25	; 0x21
    3c82:	80 a3       	std	Z+32, r24	; 0x20
    3c84:	81 e0       	ldi	r24, 0x01	; 1
    3c86:	85 83       	std	Z+5, r24	; 0x05
    3c88:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    3c8c:	18 2f       	mov	r17, r24
    3c8e:	88 3f       	cpi	r24, 0xF8	; 248
    3c90:	80 f4       	brcc	.+32     	; 0x3cb2 <nrk_wait_until_next_period+0x48>
    3c92:	0e 94 93 26 	call	0x4d26	; 0x4d26 <_nrk_get_next_wakeup>
    3c96:	21 2f       	mov	r18, r17
    3c98:	33 27       	eor	r19, r19
    3c9a:	2e 5f       	subi	r18, 0xFE	; 254
    3c9c:	3f 4f       	sbci	r19, 0xFF	; 255
    3c9e:	99 27       	eor	r25, r25
    3ca0:	82 17       	cp	r24, r18
    3ca2:	93 07       	cpc	r25, r19
    3ca4:	34 f0       	brlt	.+12     	; 0x3cb2 <nrk_wait_until_next_period+0x48>
    3ca6:	81 2f       	mov	r24, r17
    3ca8:	8e 5f       	subi	r24, 0xFE	; 254
    3caa:	80 93 11 07 	sts	0x0711, r24
    3cae:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <_nrk_set_next_wakeup>
    3cb2:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    3cb6:	0e 94 7c 1c 	call	0x38f8	; 0x38f8 <_nrk_wait_for_scheduler>
    3cba:	81 e0       	ldi	r24, 0x01	; 1
    3cbc:	90 e0       	ldi	r25, 0x00	; 0
    3cbe:	1f 91       	pop	r17
    3cc0:	08 95       	ret

00003cc2 <nrk_terminate_task>:
    3cc2:	e0 91 6a 09 	lds	r30, 0x096A
    3cc6:	f0 91 6b 09 	lds	r31, 0x096B
    3cca:	80 85       	ldd	r24, Z+8	; 0x08
    3ccc:	0e 94 23 1c 	call	0x3846	; 0x3846 <nrk_rem_from_readyQ>
    3cd0:	e0 91 6a 09 	lds	r30, 0x096A
    3cd4:	f0 91 6b 09 	lds	r31, 0x096B
    3cd8:	84 e0       	ldi	r24, 0x04	; 4
    3cda:	81 87       	std	Z+9, r24	; 0x09
    3cdc:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <nrk_wait_until_next_period>
    3ce0:	81 e0       	ldi	r24, 0x01	; 1
    3ce2:	90 e0       	ldi	r25, 0x00	; 0
    3ce4:	08 95       	ret

00003ce6 <nrk_print_readyQ>:
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
    3ce6:	ef 92       	push	r14
    3ce8:	ff 92       	push	r15
    3cea:	0f 93       	push	r16
    3cec:	1f 93       	push	r17
    3cee:	cf 93       	push	r28
    3cf0:	df 93       	push	r29
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
    3cf2:	8d ec       	ldi	r24, 0xCD	; 205
    3cf4:	93 e0       	ldi	r25, 0x03	; 3
    3cf6:	0e 94 a2 2a 	call	0x5544	; 0x5544 <puts>
	
    // Write it to the CC2420
	DISABLE_GLOBAL_INT();
    3cfa:	c0 91 5f 09 	lds	r28, 0x095F
    3cfe:	d0 91 60 09 	lds	r29, 0x0960
	ENABLE_GLOBAL_INT();

} // rfSetChannel


    3d02:	88 e0       	ldi	r24, 0x08	; 8
    3d04:	e8 2e       	mov	r14, r24
    3d06:	84 e0       	ldi	r24, 0x04	; 4
    3d08:	f8 2e       	mov	r15, r24
    3d0a:	05 e1       	ldi	r16, 0x15	; 21
    3d0c:	14 e0       	ldi	r17, 0x04	; 4
    3d0e:	28 c0       	rjmp	.+80     	; 0x3d60 <nrk_print_readyQ+0x7a>
	ENABLE_GLOBAL_INT();

} // rfSetChannel


    3d10:	88 81       	ld	r24, Y
    3d12:	99 27       	eor	r25, r25
    3d14:	9f 93       	push	r25
    3d16:	8f 93       	push	r24
    3d18:	ff 92       	push	r15
    3d1a:	ef 92       	push	r14
    3d1c:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    3d20:	88 81       	ld	r24, Y
    3d22:	99 27       	eor	r25, r25
    3d24:	28 e2       	ldi	r18, 0x28	; 40
    3d26:	30 e0       	ldi	r19, 0x00	; 0
    3d28:	82 9f       	mul	r24, r18
    3d2a:	f0 01       	movw	r30, r0
    3d2c:	83 9f       	mul	r24, r19
    3d2e:	f0 0d       	add	r31, r0
    3d30:	92 9f       	mul	r25, r18
    3d32:	f0 0d       	add	r31, r0
    3d34:	11 24       	eor	r1, r1
    3d36:	ec 52       	subi	r30, 0x2C	; 44
    3d38:	f8 4f       	sbci	r31, 0xF8	; 248
    3d3a:	80 8d       	ldd	r24, Z+24	; 0x18
    3d3c:	91 8d       	ldd	r25, Z+25	; 0x19
    3d3e:	9f 93       	push	r25
    3d40:	8f 93       	push	r24
    3d42:	1f 93       	push	r17
    3d44:	0f 93       	push	r16
    3d46:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    3d4a:	0b 80       	ldd	r0, Y+3	; 0x03
    3d4c:	dc 81       	ldd	r29, Y+4	; 0x04
    3d4e:	c0 2d       	mov	r28, r0
    3d50:	8d b7       	in	r24, 0x3d	; 61
    3d52:	9e b7       	in	r25, 0x3e	; 62
    3d54:	08 96       	adiw	r24, 0x08	; 8
    3d56:	0f b6       	in	r0, 0x3f	; 63
    3d58:	f8 94       	cli
    3d5a:	9e bf       	out	0x3e, r25	; 62
    3d5c:	0f be       	out	0x3f, r0	; 63
    3d5e:	8d bf       	out	0x3d, r24	; 61
	FASTSPI_SETREG(CC2420_FSCTRL, f);
	ENABLE_GLOBAL_INT();

} // rfSetChannel


    3d60:	20 97       	sbiw	r28, 0x00	; 0
    3d62:	b1 f6       	brne	.-84     	; 0x3d10 <nrk_print_readyQ+0x2a>
    3d64:	87 e2       	ldi	r24, 0x27	; 39
    3d66:	94 e0       	ldi	r25, 0x04	; 4
    3d68:	0e 94 a2 2a 	call	0x5544	; 0x5544 <puts>
    3d6c:	df 91       	pop	r29
    3d6e:	cf 91       	pop	r28
    3d70:	1f 91       	pop	r17
    3d72:	0f 91       	pop	r16
    3d74:	ff 90       	pop	r15
    3d76:	ef 90       	pop	r14
    3d78:	08 95       	ret

00003d7a <nrk_add_to_readyQ>:
    3d7a:	1f 93       	push	r17
    3d7c:	cf 93       	push	r28
    3d7e:	df 93       	push	r29
    3d80:	18 2f       	mov	r17, r24
    3d82:	c0 91 d2 07 	lds	r28, 0x07D2
    3d86:	d0 91 d3 07 	lds	r29, 0x07D3
    3d8a:	20 97       	sbiw	r28, 0x00	; 0
    3d8c:	09 f4       	brne	.+2      	; 0x3d90 <nrk_add_to_readyQ+0x16>
    3d8e:	6f c0       	rjmp	.+222    	; 0x3e6e <nrk_add_to_readyQ+0xf4>
    3d90:	a0 91 5f 09 	lds	r26, 0x095F
    3d94:	b0 91 60 09 	lds	r27, 0x0960
    3d98:	10 97       	sbiw	r26, 0x00	; 0
    3d9a:	c9 f4       	brne	.+50     	; 0x3dce <nrk_add_to_readyQ+0x54>
    3d9c:	29 c0       	rjmp	.+82     	; 0x3df0 <nrk_add_to_readyQ+0x76>
    3d9e:	99 27       	eor	r25, r25
    3da0:	86 9f       	mul	r24, r22
    3da2:	f0 01       	movw	r30, r0
    3da4:	87 9f       	mul	r24, r23
    3da6:	f0 0d       	add	r31, r0
    3da8:	96 9f       	mul	r25, r22
    3daa:	f0 0d       	add	r31, r0
    3dac:	11 24       	eor	r1, r1
    3dae:	ec 52       	subi	r30, 0x2C	; 44
    3db0:	f8 4f       	sbci	r31, 0xF8	; 248
    3db2:	20 8d       	ldd	r18, Z+24	; 0x18
    3db4:	31 8d       	ldd	r19, Z+25	; 0x19
    3db6:	fa 01       	movw	r30, r20
    3db8:	80 8d       	ldd	r24, Z+24	; 0x18
    3dba:	91 8d       	ldd	r25, Z+25	; 0x19
    3dbc:	82 17       	cp	r24, r18
    3dbe:	93 07       	cpc	r25, r19
    3dc0:	b8 f0       	brcs	.+46     	; 0x3df0 <nrk_add_to_readyQ+0x76>
    3dc2:	fd 01       	movw	r30, r26
    3dc4:	a3 81       	ldd	r26, Z+3	; 0x03
    3dc6:	b4 81       	ldd	r27, Z+4	; 0x04
    3dc8:	10 97       	sbiw	r26, 0x00	; 0
    3dca:	91 f0       	breq	.+36     	; 0x3df0 <nrk_add_to_readyQ+0x76>
    3dcc:	0e c0       	rjmp	.+28     	; 0x3dea <nrk_add_to_readyQ+0x70>
    3dce:	68 e2       	ldi	r22, 0x28	; 40
    3dd0:	70 e0       	ldi	r23, 0x00	; 0
    3dd2:	99 27       	eor	r25, r25
    3dd4:	87 fd       	sbrc	r24, 7
    3dd6:	90 95       	com	r25
    3dd8:	86 9f       	mul	r24, r22
    3dda:	a0 01       	movw	r20, r0
    3ddc:	87 9f       	mul	r24, r23
    3dde:	50 0d       	add	r21, r0
    3de0:	96 9f       	mul	r25, r22
    3de2:	50 0d       	add	r21, r0
    3de4:	11 24       	eor	r1, r1
    3de6:	4c 52       	subi	r20, 0x2C	; 44
    3de8:	58 4f       	sbci	r21, 0xF8	; 248
    3dea:	8c 91       	ld	r24, X
    3dec:	88 23       	and	r24, r24
    3dee:	b9 f6       	brne	.-82     	; 0x3d9e <nrk_add_to_readyQ+0x24>
    3df0:	18 83       	st	Y, r17
    3df2:	e0 91 d2 07 	lds	r30, 0x07D2
    3df6:	f0 91 d3 07 	lds	r31, 0x07D3
    3dfa:	23 81       	ldd	r18, Z+3	; 0x03
    3dfc:	34 81       	ldd	r19, Z+4	; 0x04
    3dfe:	30 93 d3 07 	sts	0x07D3, r19
    3e02:	20 93 d2 07 	sts	0x07D2, r18
    3e06:	80 91 5f 09 	lds	r24, 0x095F
    3e0a:	90 91 60 09 	lds	r25, 0x0960
    3e0e:	a8 17       	cp	r26, r24
    3e10:	b9 07       	cpc	r27, r25
    3e12:	a1 f4       	brne	.+40     	; 0x3e3c <nrk_add_to_readyQ+0xc2>
    3e14:	10 97       	sbiw	r26, 0x00	; 0
    3e16:	31 f0       	breq	.+12     	; 0x3e24 <nrk_add_to_readyQ+0xaa>
    3e18:	bc 83       	std	Y+4, r27	; 0x04
    3e1a:	ab 83       	std	Y+3, r26	; 0x03
    3e1c:	1a 82       	std	Y+2, r1	; 0x02
    3e1e:	19 82       	std	Y+1, r1	; 0x01
    3e20:	fd 01       	movw	r30, r26
    3e22:	05 c0       	rjmp	.+10     	; 0x3e2e <nrk_add_to_readyQ+0xb4>
    3e24:	1c 82       	std	Y+4, r1	; 0x04
    3e26:	1b 82       	std	Y+3, r1	; 0x03
    3e28:	1a 82       	std	Y+2, r1	; 0x02
    3e2a:	19 82       	std	Y+1, r1	; 0x01
    3e2c:	f9 01       	movw	r30, r18
    3e2e:	d2 83       	std	Z+2, r29	; 0x02
    3e30:	c1 83       	std	Z+1, r28	; 0x01
    3e32:	d0 93 60 09 	sts	0x0960, r29
    3e36:	c0 93 5f 09 	sts	0x095F, r28
    3e3a:	17 c0       	rjmp	.+46     	; 0x3e6a <nrk_add_to_readyQ+0xf0>
    3e3c:	fd 01       	movw	r30, r26
    3e3e:	81 81       	ldd	r24, Z+1	; 0x01
    3e40:	92 81       	ldd	r25, Z+2	; 0x02
    3e42:	a2 17       	cp	r26, r18
    3e44:	b3 07       	cpc	r27, r19
    3e46:	51 f0       	breq	.+20     	; 0x3e5c <nrk_add_to_readyQ+0xe2>
    3e48:	9a 83       	std	Y+2, r25	; 0x02
    3e4a:	89 83       	std	Y+1, r24	; 0x01
    3e4c:	bc 83       	std	Y+4, r27	; 0x04
    3e4e:	ab 83       	std	Y+3, r26	; 0x03
    3e50:	81 81       	ldd	r24, Z+1	; 0x01
    3e52:	92 81       	ldd	r25, Z+2	; 0x02
    3e54:	fc 01       	movw	r30, r24
    3e56:	d4 83       	std	Z+4, r29	; 0x04
    3e58:	c3 83       	std	Z+3, r28	; 0x03
    3e5a:	04 c0       	rjmp	.+8      	; 0x3e64 <nrk_add_to_readyQ+0xea>
    3e5c:	1c 82       	std	Y+4, r1	; 0x04
    3e5e:	1b 82       	std	Y+3, r1	; 0x03
    3e60:	9a 83       	std	Y+2, r25	; 0x02
    3e62:	89 83       	std	Y+1, r24	; 0x01
    3e64:	fd 01       	movw	r30, r26
    3e66:	d2 83       	std	Z+2, r29	; 0x02
    3e68:	c1 83       	std	Z+1, r28	; 0x01
    3e6a:	0e 94 73 1e 	call	0x3ce6	; 0x3ce6 <nrk_print_readyQ>
    3e6e:	df 91       	pop	r29
    3e70:	cf 91       	pop	r28
    3e72:	1f 91       	pop	r17
    3e74:	08 95       	ret

00003e76 <nrk_activate_task>:
    3e76:	ef 92       	push	r14
    3e78:	ff 92       	push	r15
    3e7a:	0f 93       	push	r16
    3e7c:	1f 93       	push	r17
    3e7e:	cf 93       	push	r28
    3e80:	df 93       	push	r29
    3e82:	ec 01       	movw	r28, r24
    3e84:	4b 81       	ldd	r20, Y+3	; 0x03
    3e86:	5c 81       	ldd	r21, Y+4	; 0x04
    3e88:	69 81       	ldd	r22, Y+1	; 0x01
    3e8a:	7a 81       	ldd	r23, Y+2	; 0x02
    3e8c:	8d 81       	ldd	r24, Y+5	; 0x05
    3e8e:	9e 81       	ldd	r25, Y+6	; 0x06
    3e90:	0e 94 2e 28 	call	0x505c	; 0x505c <nrk_task_stk_init>
    3e94:	bc 01       	movw	r22, r24
    3e96:	8f 81       	ldd	r24, Y+7	; 0x07
    3e98:	88 23       	and	r24, r24
    3e9a:	69 f0       	breq	.+26     	; 0x3eb6 <nrk_activate_task+0x40>
    3e9c:	4b 81       	ldd	r20, Y+3	; 0x03
    3e9e:	5c 81       	ldd	r21, Y+4	; 0x04
    3ea0:	ee 24       	eor	r14, r14
    3ea2:	ff 24       	eor	r15, r15
    3ea4:	00 e0       	ldi	r16, 0x00	; 0
    3ea6:	10 e0       	ldi	r17, 0x00	; 0
    3ea8:	20 e0       	ldi	r18, 0x00	; 0
    3eaa:	30 e0       	ldi	r19, 0x00	; 0
    3eac:	ce 01       	movw	r24, r28
    3eae:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <nrk_TCB_init>
    3eb2:	1f 82       	std	Y+7, r1	; 0x07
    3eb4:	17 c0       	rjmp	.+46     	; 0x3ee4 <nrk_activate_task+0x6e>
    3eb6:	88 81       	ld	r24, Y
    3eb8:	99 27       	eor	r25, r25
    3eba:	87 fd       	sbrc	r24, 7
    3ebc:	90 95       	com	r25
    3ebe:	28 e2       	ldi	r18, 0x28	; 40
    3ec0:	30 e0       	ldi	r19, 0x00	; 0
    3ec2:	82 9f       	mul	r24, r18
    3ec4:	f0 01       	movw	r30, r0
    3ec6:	83 9f       	mul	r24, r19
    3ec8:	f0 0d       	add	r31, r0
    3eca:	92 9f       	mul	r25, r18
    3ecc:	f0 0d       	add	r31, r0
    3ece:	11 24       	eor	r1, r1
    3ed0:	ec 52       	subi	r30, 0x2C	; 44
    3ed2:	f8 4f       	sbci	r31, 0xF8	; 248
    3ed4:	81 85       	ldd	r24, Z+9	; 0x09
    3ed6:	83 30       	cpi	r24, 0x03	; 3
    3ed8:	19 f0       	breq	.+6      	; 0x3ee0 <nrk_activate_task+0x6a>
    3eda:	8f ef       	ldi	r24, 0xFF	; 255
    3edc:	9f ef       	ldi	r25, 0xFF	; 255
    3ede:	1c c0       	rjmp	.+56     	; 0x3f18 <nrk_activate_task+0xa2>
    3ee0:	71 83       	std	Z+1, r23	; 0x01
    3ee2:	60 83       	st	Z, r22
    3ee4:	88 81       	ld	r24, Y
    3ee6:	99 27       	eor	r25, r25
    3ee8:	87 fd       	sbrc	r24, 7
    3eea:	90 95       	com	r25
    3eec:	28 e2       	ldi	r18, 0x28	; 40
    3eee:	30 e0       	ldi	r19, 0x00	; 0
    3ef0:	82 9f       	mul	r24, r18
    3ef2:	f0 01       	movw	r30, r0
    3ef4:	83 9f       	mul	r24, r19
    3ef6:	f0 0d       	add	r31, r0
    3ef8:	92 9f       	mul	r25, r18
    3efa:	f0 0d       	add	r31, r0
    3efc:	11 24       	eor	r1, r1
    3efe:	ec 52       	subi	r30, 0x2C	; 44
    3f00:	f8 4f       	sbci	r31, 0xF8	; 248
    3f02:	86 89       	ldd	r24, Z+22	; 0x16
    3f04:	97 89       	ldd	r25, Z+23	; 0x17
    3f06:	89 2b       	or	r24, r25
    3f08:	29 f4       	brne	.+10     	; 0x3f14 <nrk_activate_task+0x9e>
    3f0a:	82 e0       	ldi	r24, 0x02	; 2
    3f0c:	81 87       	std	Z+9, r24	; 0x09
    3f0e:	88 81       	ld	r24, Y
    3f10:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <nrk_add_to_readyQ>
    3f14:	81 e0       	ldi	r24, 0x01	; 1
    3f16:	90 e0       	ldi	r25, 0x00	; 0
    3f18:	df 91       	pop	r29
    3f1a:	cf 91       	pop	r28
    3f1c:	1f 91       	pop	r17
    3f1e:	0f 91       	pop	r16
    3f20:	ff 90       	pop	r15
    3f22:	ef 90       	pop	r14
    3f24:	08 95       	ret

00003f26 <nrk_time_sub>:
} // rfSetChannel


    3f26:	8f 92       	push	r8
    3f28:	9f 92       	push	r9
    3f2a:	af 92       	push	r10
    3f2c:	bf 92       	push	r11
    3f2e:	cf 92       	push	r12
    3f30:	df 92       	push	r13
    3f32:	ef 92       	push	r14
    3f34:	ff 92       	push	r15
    3f36:	0f 93       	push	r16
    3f38:	1f 93       	push	r17
    3f3a:	cf 93       	push	r28
    3f3c:	df 93       	push	r29
    3f3e:	cd b7       	in	r28, 0x3d	; 61
    3f40:	de b7       	in	r29, 0x3e	; 62
    3f42:	60 97       	sbiw	r28, 0x10	; 16
    3f44:	0f b6       	in	r0, 0x3f	; 63
    3f46:	f8 94       	cli
    3f48:	de bf       	out	0x3e, r29	; 62
    3f4a:	0f be       	out	0x3f, r0	; 63
    3f4c:	cd bf       	out	0x3d, r28	; 61
    3f4e:	fc 01       	movw	r30, r24
    3f50:	09 83       	std	Y+1, r16	; 0x01
    3f52:	1a 83       	std	Y+2, r17	; 0x02
    3f54:	2b 83       	std	Y+3, r18	; 0x03
    3f56:	3c 83       	std	Y+4, r19	; 0x04
    3f58:	4d 83       	std	Y+5, r20	; 0x05
    3f5a:	5e 83       	std	Y+6, r21	; 0x06
    3f5c:	6f 83       	std	Y+7, r22	; 0x07
    3f5e:	78 87       	std	Y+8, r23	; 0x08
    3f60:	89 86       	std	Y+9, r8	; 0x09
    3f62:	9a 86       	std	Y+10, r9	; 0x0a
    3f64:	ab 86       	std	Y+11, r10	; 0x0b
    3f66:	bc 86       	std	Y+12, r11	; 0x0c
    3f68:	cd 86       	std	Y+13, r12	; 0x0d
    3f6a:	de 86       	std	Y+14, r13	; 0x0e
    3f6c:	ef 86       	std	Y+15, r14	; 0x0f
    3f6e:	f8 8a       	std	Y+16, r15	; 0x10
    3f70:	2d 81       	ldd	r18, Y+5	; 0x05
    3f72:	3e 81       	ldd	r19, Y+6	; 0x06
    3f74:	4f 81       	ldd	r20, Y+7	; 0x07
    3f76:	58 85       	ldd	r21, Y+8	; 0x08
    3f78:	89 81       	ldd	r24, Y+1	; 0x01
    3f7a:	9a 81       	ldd	r25, Y+2	; 0x02
    3f7c:	ab 81       	ldd	r26, Y+3	; 0x03
    3f7e:	bc 81       	ldd	r27, Y+4	; 0x04
    3f80:	ad 84       	ldd	r10, Y+13	; 0x0d
    3f82:	be 84       	ldd	r11, Y+14	; 0x0e
    3f84:	cf 84       	ldd	r12, Y+15	; 0x0f
    3f86:	d8 88       	ldd	r13, Y+16	; 0x10
    3f88:	e9 84       	ldd	r14, Y+9	; 0x09
    3f8a:	fa 84       	ldd	r15, Y+10	; 0x0a
    3f8c:	0b 85       	ldd	r16, Y+11	; 0x0b
    3f8e:	1c 85       	ldd	r17, Y+12	; 0x0c
    3f90:	8e 15       	cp	r24, r14
    3f92:	9f 05       	cpc	r25, r15
    3f94:	a0 07       	cpc	r26, r16
    3f96:	b1 07       	cpc	r27, r17
    3f98:	08 f4       	brcc	.+2      	; 0x3f9c <nrk_time_sub+0x76>
    3f9a:	3f c0       	rjmp	.+126    	; 0x401a <nrk_time_sub+0xf4>
    3f9c:	e8 16       	cp	r14, r24
    3f9e:	f9 06       	cpc	r15, r25
    3fa0:	0a 07       	cpc	r16, r26
    3fa2:	1b 07       	cpc	r17, r27
    3fa4:	91 f4       	brne	.+36     	; 0x3fca <nrk_time_sub+0xa4>
    3fa6:	2a 15       	cp	r18, r10
    3fa8:	3b 05       	cpc	r19, r11
    3faa:	4c 05       	cpc	r20, r12
    3fac:	5d 05       	cpc	r21, r13
    3fae:	a8 f1       	brcs	.+106    	; 0x401a <nrk_time_sub+0xf4>
    3fb0:	2a 19       	sub	r18, r10
    3fb2:	3b 09       	sbc	r19, r11
    3fb4:	4c 09       	sbc	r20, r12
    3fb6:	5d 09       	sbc	r21, r13
    3fb8:	24 83       	std	Z+4, r18	; 0x04
    3fba:	35 83       	std	Z+5, r19	; 0x05
    3fbc:	46 83       	std	Z+6, r20	; 0x06
    3fbe:	57 83       	std	Z+7, r21	; 0x07
    3fc0:	10 82       	st	Z, r1
    3fc2:	11 82       	std	Z+1, r1	; 0x01
    3fc4:	12 82       	std	Z+2, r1	; 0x02
    3fc6:	13 82       	std	Z+3, r1	; 0x03
    3fc8:	1c c0       	rjmp	.+56     	; 0x4002 <nrk_time_sub+0xdc>
    3fca:	2a 15       	cp	r18, r10
    3fcc:	3b 05       	cpc	r19, r11
    3fce:	4c 05       	cpc	r20, r12
    3fd0:	5d 05       	cpc	r21, r13
    3fd2:	d0 f4       	brcc	.+52     	; 0x4008 <nrk_time_sub+0xe2>
    3fd4:	01 97       	sbiw	r24, 0x01	; 1
    3fd6:	a1 09       	sbc	r26, r1
    3fd8:	b1 09       	sbc	r27, r1
    3fda:	8e 19       	sub	r24, r14
    3fdc:	9f 09       	sbc	r25, r15
    3fde:	a0 0b       	sbc	r26, r16
    3fe0:	b1 0b       	sbc	r27, r17
    3fe2:	80 83       	st	Z, r24
    3fe4:	91 83       	std	Z+1, r25	; 0x01
    3fe6:	a2 83       	std	Z+2, r26	; 0x02
    3fe8:	b3 83       	std	Z+3, r27	; 0x03
    3fea:	20 50       	subi	r18, 0x00	; 0
    3fec:	36 43       	sbci	r19, 0x36	; 54
    3fee:	45 46       	sbci	r20, 0x65	; 101
    3ff0:	54 4c       	sbci	r21, 0xC4	; 196
    3ff2:	2a 19       	sub	r18, r10
    3ff4:	3b 09       	sbc	r19, r11
    3ff6:	4c 09       	sbc	r20, r12
    3ff8:	5d 09       	sbc	r21, r13
    3ffa:	24 83       	std	Z+4, r18	; 0x04
    3ffc:	35 83       	std	Z+5, r19	; 0x05
    3ffe:	46 83       	std	Z+6, r20	; 0x06
    4000:	57 83       	std	Z+7, r21	; 0x07
    4002:	81 e0       	ldi	r24, 0x01	; 1
    4004:	90 e0       	ldi	r25, 0x00	; 0
    4006:	0b c0       	rjmp	.+22     	; 0x401e <nrk_time_sub+0xf8>
    4008:	8e 19       	sub	r24, r14
    400a:	9f 09       	sbc	r25, r15
    400c:	a0 0b       	sbc	r26, r16
    400e:	b1 0b       	sbc	r27, r17
    4010:	80 83       	st	Z, r24
    4012:	91 83       	std	Z+1, r25	; 0x01
    4014:	a2 83       	std	Z+2, r26	; 0x02
    4016:	b3 83       	std	Z+3, r27	; 0x03
    4018:	ec cf       	rjmp	.-40     	; 0x3ff2 <nrk_time_sub+0xcc>
    401a:	80 e0       	ldi	r24, 0x00	; 0
    401c:	90 e0       	ldi	r25, 0x00	; 0
    401e:	60 96       	adiw	r28, 0x10	; 16
    4020:	0f b6       	in	r0, 0x3f	; 63
    4022:	f8 94       	cli
    4024:	de bf       	out	0x3e, r29	; 62
    4026:	0f be       	out	0x3f, r0	; 63
    4028:	cd bf       	out	0x3d, r28	; 61
    402a:	df 91       	pop	r29
    402c:	cf 91       	pop	r28
    402e:	1f 91       	pop	r17
    4030:	0f 91       	pop	r16
    4032:	ff 90       	pop	r15
    4034:	ef 90       	pop	r14
    4036:	df 90       	pop	r13
    4038:	cf 90       	pop	r12
    403a:	bf 90       	pop	r11
    403c:	af 90       	pop	r10
    403e:	9f 90       	pop	r9
    4040:	8f 90       	pop	r8
    4042:	08 95       	ret

00004044 <nrk_time_compact_nanos>:
    4044:	fc 01       	movw	r30, r24
    4046:	13 c0       	rjmp	.+38     	; 0x406e <nrk_time_compact_nanos+0x2a>
    4048:	80 50       	subi	r24, 0x00	; 0
    404a:	9a 4c       	sbci	r25, 0xCA	; 202
    404c:	aa 49       	sbci	r26, 0x9A	; 154
    404e:	bb 43       	sbci	r27, 0x3B	; 59
    4050:	84 83       	std	Z+4, r24	; 0x04
    4052:	95 83       	std	Z+5, r25	; 0x05
    4054:	a6 83       	std	Z+6, r26	; 0x06
    4056:	b7 83       	std	Z+7, r27	; 0x07
    4058:	80 81       	ld	r24, Z
    405a:	91 81       	ldd	r25, Z+1	; 0x01
    405c:	a2 81       	ldd	r26, Z+2	; 0x02
    405e:	b3 81       	ldd	r27, Z+3	; 0x03
    4060:	01 96       	adiw	r24, 0x01	; 1
    4062:	a1 1d       	adc	r26, r1
    4064:	b1 1d       	adc	r27, r1
    4066:	80 83       	st	Z, r24
    4068:	91 83       	std	Z+1, r25	; 0x01
    406a:	a2 83       	std	Z+2, r26	; 0x02
    406c:	b3 83       	std	Z+3, r27	; 0x03
    406e:	84 81       	ldd	r24, Z+4	; 0x04
    4070:	95 81       	ldd	r25, Z+5	; 0x05
    4072:	a6 81       	ldd	r26, Z+6	; 0x06
    4074:	b7 81       	ldd	r27, Z+7	; 0x07
    4076:	80 30       	cpi	r24, 0x00	; 0
    4078:	2a ec       	ldi	r18, 0xCA	; 202
    407a:	92 07       	cpc	r25, r18
    407c:	2a e9       	ldi	r18, 0x9A	; 154
    407e:	a2 07       	cpc	r26, r18
    4080:	2b e3       	ldi	r18, 0x3B	; 59
    4082:	b2 07       	cpc	r27, r18
    4084:	08 f7       	brcc	.-62     	; 0x4048 <nrk_time_compact_nanos+0x4>
    4086:	08 95       	ret

00004088 <nrk_time_add>:
    4088:	8f 92       	push	r8
    408a:	9f 92       	push	r9
    408c:	af 92       	push	r10
    408e:	bf 92       	push	r11
    4090:	cf 92       	push	r12
    4092:	df 92       	push	r13
    4094:	ef 92       	push	r14
    4096:	ff 92       	push	r15
    4098:	0f 93       	push	r16
    409a:	1f 93       	push	r17
    409c:	cf 93       	push	r28
    409e:	df 93       	push	r29
    40a0:	cd b7       	in	r28, 0x3d	; 61
    40a2:	de b7       	in	r29, 0x3e	; 62
    40a4:	60 97       	sbiw	r28, 0x10	; 16
    40a6:	0f b6       	in	r0, 0x3f	; 63
    40a8:	f8 94       	cli
    40aa:	de bf       	out	0x3e, r29	; 62
    40ac:	0f be       	out	0x3f, r0	; 63
    40ae:	cd bf       	out	0x3d, r28	; 61
    40b0:	fc 01       	movw	r30, r24
    40b2:	09 83       	std	Y+1, r16	; 0x01
    40b4:	1a 83       	std	Y+2, r17	; 0x02
    40b6:	2b 83       	std	Y+3, r18	; 0x03
    40b8:	3c 83       	std	Y+4, r19	; 0x04
    40ba:	4d 83       	std	Y+5, r20	; 0x05
    40bc:	5e 83       	std	Y+6, r21	; 0x06
    40be:	6f 83       	std	Y+7, r22	; 0x07
    40c0:	78 87       	std	Y+8, r23	; 0x08
    40c2:	89 86       	std	Y+9, r8	; 0x09
    40c4:	9a 86       	std	Y+10, r9	; 0x0a
    40c6:	ab 86       	std	Y+11, r10	; 0x0b
    40c8:	bc 86       	std	Y+12, r11	; 0x0c
    40ca:	cd 86       	std	Y+13, r12	; 0x0d
    40cc:	de 86       	std	Y+14, r13	; 0x0e
    40ce:	ef 86       	std	Y+15, r14	; 0x0f
    40d0:	f8 8a       	std	Y+16, r15	; 0x10
    40d2:	ad 80       	ldd	r10, Y+5	; 0x05
    40d4:	be 80       	ldd	r11, Y+6	; 0x06
    40d6:	cf 80       	ldd	r12, Y+7	; 0x07
    40d8:	d8 84       	ldd	r13, Y+8	; 0x08
    40da:	ed 84       	ldd	r14, Y+13	; 0x0d
    40dc:	fe 84       	ldd	r15, Y+14	; 0x0e
    40de:	0f 85       	ldd	r16, Y+15	; 0x0f
    40e0:	18 89       	ldd	r17, Y+16	; 0x10
    40e2:	89 85       	ldd	r24, Y+9	; 0x09
    40e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    40e6:	ab 85       	ldd	r26, Y+11	; 0x0b
    40e8:	bc 85       	ldd	r27, Y+12	; 0x0c
    40ea:	29 81       	ldd	r18, Y+1	; 0x01
    40ec:	3a 81       	ldd	r19, Y+2	; 0x02
    40ee:	4b 81       	ldd	r20, Y+3	; 0x03
    40f0:	5c 81       	ldd	r21, Y+4	; 0x04
    40f2:	82 0f       	add	r24, r18
    40f4:	93 1f       	adc	r25, r19
    40f6:	a4 1f       	adc	r26, r20
    40f8:	b5 1f       	adc	r27, r21
    40fa:	80 83       	st	Z, r24
    40fc:	91 83       	std	Z+1, r25	; 0x01
    40fe:	a2 83       	std	Z+2, r26	; 0x02
    4100:	b3 83       	std	Z+3, r27	; 0x03
    4102:	ea 0c       	add	r14, r10
    4104:	fb 1c       	adc	r15, r11
    4106:	0c 1d       	adc	r16, r12
    4108:	1d 1d       	adc	r17, r13
    410a:	e4 82       	std	Z+4, r14	; 0x04
    410c:	f5 82       	std	Z+5, r15	; 0x05
    410e:	06 83       	std	Z+6, r16	; 0x06
    4110:	17 83       	std	Z+7, r17	; 0x07
    4112:	cf 01       	movw	r24, r30
    4114:	0e 94 22 20 	call	0x4044	; 0x4044 <nrk_time_compact_nanos>
    4118:	81 e0       	ldi	r24, 0x01	; 1
    411a:	90 e0       	ldi	r25, 0x00	; 0
    411c:	60 96       	adiw	r28, 0x10	; 16
    411e:	0f b6       	in	r0, 0x3f	; 63
    4120:	f8 94       	cli
    4122:	de bf       	out	0x3e, r29	; 62
    4124:	0f be       	out	0x3f, r0	; 63
    4126:	cd bf       	out	0x3d, r28	; 61
    4128:	df 91       	pop	r29
    412a:	cf 91       	pop	r28
    412c:	1f 91       	pop	r17
    412e:	0f 91       	pop	r16
    4130:	ff 90       	pop	r15
    4132:	ef 90       	pop	r14
    4134:	df 90       	pop	r13
    4136:	cf 90       	pop	r12
    4138:	bf 90       	pop	r11
    413a:	af 90       	pop	r10
    413c:	9f 90       	pop	r9
    413e:	8f 90       	pop	r8
    4140:	08 95       	ret

00004142 <nrk_time_set>:
    4142:	60 93 61 09 	sts	0x0961, r22
    4146:	70 93 62 09 	sts	0x0962, r23
    414a:	80 93 63 09 	sts	0x0963, r24
    414e:	90 93 64 09 	sts	0x0964, r25
    4152:	20 93 65 09 	sts	0x0965, r18
    4156:	30 93 66 09 	sts	0x0966, r19
    415a:	40 93 67 09 	sts	0x0967, r20
    415e:	50 93 68 09 	sts	0x0968, r21
    4162:	08 95       	ret

00004164 <_nrk_time_to_ticks>:
    4164:	8f 92       	push	r8
    4166:	9f 92       	push	r9
    4168:	af 92       	push	r10
    416a:	bf 92       	push	r11
    416c:	cf 92       	push	r12
    416e:	df 92       	push	r13
    4170:	ef 92       	push	r14
    4172:	ff 92       	push	r15
    4174:	0f 93       	push	r16
    4176:	1f 93       	push	r17
    4178:	cf 93       	push	r28
    417a:	df 93       	push	r29
    417c:	cd b7       	in	r28, 0x3d	; 61
    417e:	de b7       	in	r29, 0x3e	; 62
    4180:	28 97       	sbiw	r28, 0x08	; 8
    4182:	0f b6       	in	r0, 0x3f	; 63
    4184:	f8 94       	cli
    4186:	de bf       	out	0x3e, r29	; 62
    4188:	0f be       	out	0x3f, r0	; 63
    418a:	cd bf       	out	0x3d, r28	; 61
    418c:	29 83       	std	Y+1, r18	; 0x01
    418e:	3a 83       	std	Y+2, r19	; 0x02
    4190:	4b 83       	std	Y+3, r20	; 0x03
    4192:	5c 83       	std	Y+4, r21	; 0x04
    4194:	6d 83       	std	Y+5, r22	; 0x05
    4196:	7e 83       	std	Y+6, r23	; 0x06
    4198:	8f 83       	std	Y+7, r24	; 0x07
    419a:	98 87       	std	Y+8, r25	; 0x08
    419c:	8d 80       	ldd	r8, Y+5	; 0x05
    419e:	9e 80       	ldd	r9, Y+6	; 0x06
    41a0:	af 80       	ldd	r10, Y+7	; 0x07
    41a2:	b8 84       	ldd	r11, Y+8	; 0x08
    41a4:	e9 80       	ldd	r14, Y+1	; 0x01
    41a6:	fa 80       	ldd	r15, Y+2	; 0x02
    41a8:	0b 81       	ldd	r16, Y+3	; 0x03
    41aa:	1c 81       	ldd	r17, Y+4	; 0x04
    41ac:	e1 14       	cp	r14, r1
    41ae:	f1 04       	cpc	r15, r1
    41b0:	01 05       	cpc	r16, r1
    41b2:	11 05       	cpc	r17, r1
    41b4:	01 f1       	breq	.+64     	; 0x41f6 <_nrk_time_to_ticks+0x92>
    41b6:	80 e0       	ldi	r24, 0x00	; 0
    41b8:	9a ec       	ldi	r25, 0xCA	; 202
    41ba:	aa e9       	ldi	r26, 0x9A	; 154
    41bc:	bb e3       	ldi	r27, 0x3B	; 59
    41be:	88 0e       	add	r8, r24
    41c0:	99 1e       	adc	r9, r25
    41c2:	aa 1e       	adc	r10, r26
    41c4:	bb 1e       	adc	r11, r27
    41c6:	c5 01       	movw	r24, r10
    41c8:	b4 01       	movw	r22, r8
    41ca:	23 eb       	ldi	r18, 0xB3	; 179
    41cc:	36 ee       	ldi	r19, 0xE6	; 230
    41ce:	4e e0       	ldi	r20, 0x0E	; 14
    41d0:	50 e0       	ldi	r21, 0x00	; 0
    41d2:	0e 94 ac 2c 	call	0x5958	; 0x5958 <__udivmodsi4>
    41d6:	69 01       	movw	r12, r18
    41d8:	08 94       	sec
    41da:	e1 08       	sbc	r14, r1
    41dc:	f1 08       	sbc	r15, r1
    41de:	01 09       	sbc	r16, r1
    41e0:	11 09       	sbc	r17, r1
    41e2:	8a e0       	ldi	r24, 0x0A	; 10
    41e4:	ee 0c       	add	r14, r14
    41e6:	ff 1c       	adc	r15, r15
    41e8:	00 1f       	adc	r16, r16
    41ea:	11 1f       	adc	r17, r17
    41ec:	8a 95       	dec	r24
    41ee:	d1 f7       	brne	.-12     	; 0x41e4 <_nrk_time_to_ticks+0x80>
    41f0:	ce 0c       	add	r12, r14
    41f2:	df 1c       	adc	r13, r15
    41f4:	09 c0       	rjmp	.+18     	; 0x4208 <_nrk_time_to_ticks+0xa4>
    41f6:	c5 01       	movw	r24, r10
    41f8:	b4 01       	movw	r22, r8
    41fa:	23 eb       	ldi	r18, 0xB3	; 179
    41fc:	36 ee       	ldi	r19, 0xE6	; 230
    41fe:	4e e0       	ldi	r20, 0x0E	; 14
    4200:	50 e0       	ldi	r21, 0x00	; 0
    4202:	0e 94 ac 2c 	call	0x5958	; 0x5958 <__udivmodsi4>
    4206:	69 01       	movw	r12, r18
    4208:	b6 01       	movw	r22, r12
    420a:	02 c0       	rjmp	.+4      	; 0x4210 <_nrk_time_to_ticks+0xac>
    420c:	60 50       	subi	r22, 0x00	; 0
    420e:	74 40       	sbci	r23, 0x04	; 4
    4210:	94 e0       	ldi	r25, 0x04	; 4
    4212:	61 30       	cpi	r22, 0x01	; 1
    4214:	79 07       	cpc	r23, r25
    4216:	d0 f7       	brcc	.-12     	; 0x420c <_nrk_time_to_ticks+0xa8>
    4218:	88 27       	eor	r24, r24
    421a:	99 27       	eor	r25, r25
    421c:	23 eb       	ldi	r18, 0xB3	; 179
    421e:	36 ee       	ldi	r19, 0xE6	; 230
    4220:	4e e0       	ldi	r20, 0x0E	; 14
    4222:	50 e0       	ldi	r21, 0x00	; 0
    4224:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <__mulsi3>
    4228:	67 5a       	subi	r22, 0xA7	; 167
    422a:	7c 48       	sbci	r23, 0x8C	; 140
    422c:	88 4f       	sbci	r24, 0xF8	; 248
    422e:	9f 4f       	sbci	r25, 0xFF	; 255
    4230:	68 15       	cp	r22, r8
    4232:	79 05       	cpc	r23, r9
    4234:	8a 05       	cpc	r24, r10
    4236:	9b 05       	cpc	r25, r11
    4238:	18 f4       	brcc	.+6      	; 0x4240 <_nrk_time_to_ticks+0xdc>
    423a:	08 94       	sec
    423c:	c1 1c       	adc	r12, r1
    423e:	d1 1c       	adc	r13, r1
    4240:	c6 01       	movw	r24, r12
    4242:	28 96       	adiw	r28, 0x08	; 8
    4244:	0f b6       	in	r0, 0x3f	; 63
    4246:	f8 94       	cli
    4248:	de bf       	out	0x3e, r29	; 62
    424a:	0f be       	out	0x3f, r0	; 63
    424c:	cd bf       	out	0x3d, r28	; 61
    424e:	df 91       	pop	r29
    4250:	cf 91       	pop	r28
    4252:	1f 91       	pop	r17
    4254:	0f 91       	pop	r16
    4256:	ff 90       	pop	r15
    4258:	ef 90       	pop	r14
    425a:	df 90       	pop	r13
    425c:	cf 90       	pop	r12
    425e:	bf 90       	pop	r11
    4260:	af 90       	pop	r10
    4262:	9f 90       	pop	r9
    4264:	8f 90       	pop	r8
    4266:	08 95       	ret

00004268 <_nrk_ticks_to_time>:
    4268:	2f 92       	push	r2
    426a:	3f 92       	push	r3
    426c:	4f 92       	push	r4
    426e:	5f 92       	push	r5
    4270:	6f 92       	push	r6
    4272:	7f 92       	push	r7
    4274:	8f 92       	push	r8
    4276:	9f 92       	push	r9
    4278:	af 92       	push	r10
    427a:	bf 92       	push	r11
    427c:	cf 92       	push	r12
    427e:	df 92       	push	r13
    4280:	ef 92       	push	r14
    4282:	ff 92       	push	r15
    4284:	0f 93       	push	r16
    4286:	1f 93       	push	r17
    4288:	cf 93       	push	r28
    428a:	df 93       	push	r29
    428c:	cd b7       	in	r28, 0x3d	; 61
    428e:	de b7       	in	r29, 0x3e	; 62
    4290:	28 97       	sbiw	r28, 0x08	; 8
    4292:	0f b6       	in	r0, 0x3f	; 63
    4294:	f8 94       	cli
    4296:	de bf       	out	0x3e, r29	; 62
    4298:	0f be       	out	0x3f, r0	; 63
    429a:	cd bf       	out	0x3d, r28	; 61
    429c:	7b 01       	movw	r14, r22
    429e:	8c 01       	movw	r16, r24
    42a0:	73 70       	andi	r23, 0x03	; 3
    42a2:	80 70       	andi	r24, 0x00	; 0
    42a4:	90 70       	andi	r25, 0x00	; 0
    42a6:	23 eb       	ldi	r18, 0xB3	; 179
    42a8:	36 ee       	ldi	r19, 0xE6	; 230
    42aa:	4e e0       	ldi	r20, 0x0E	; 14
    42ac:	50 e0       	ldi	r21, 0x00	; 0
    42ae:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <__mulsi3>
    42b2:	6d 83       	std	Y+5, r22	; 0x05
    42b4:	7e 83       	std	Y+6, r23	; 0x06
    42b6:	8f 83       	std	Y+7, r24	; 0x07
    42b8:	98 87       	std	Y+8, r25	; 0x08
    42ba:	9a e0       	ldi	r25, 0x0A	; 10
    42bc:	16 95       	lsr	r17
    42be:	07 95       	ror	r16
    42c0:	f7 94       	ror	r15
    42c2:	e7 94       	ror	r14
    42c4:	9a 95       	dec	r25
    42c6:	d1 f7       	brne	.-12     	; 0x42bc <_nrk_ticks_to_time+0x54>
    42c8:	e9 82       	std	Y+1, r14	; 0x01
    42ca:	fa 82       	std	Y+2, r15	; 0x02
    42cc:	0b 83       	std	Y+3, r16	; 0x03
    42ce:	1c 83       	std	Y+4, r17	; 0x04
    42d0:	98 85       	ldd	r25, Y+8	; 0x08
    42d2:	29 80       	ldd	r2, Y+1	; 0x01
    42d4:	3a 80       	ldd	r3, Y+2	; 0x02
    42d6:	4b 80       	ldd	r4, Y+3	; 0x03
    42d8:	5c 80       	ldd	r5, Y+4	; 0x04
    42da:	6d 80       	ldd	r6, Y+5	; 0x05
    42dc:	7e 80       	ldd	r7, Y+6	; 0x06
    42de:	8f 80       	ldd	r8, Y+7	; 0x07
    42e0:	22 2d       	mov	r18, r2
    42e2:	33 2d       	mov	r19, r3
    42e4:	44 2d       	mov	r20, r4
    42e6:	55 2d       	mov	r21, r5
    42e8:	66 2d       	mov	r22, r6
    42ea:	77 2d       	mov	r23, r7
    42ec:	88 2d       	mov	r24, r8
    42ee:	28 96       	adiw	r28, 0x08	; 8
    42f0:	0f b6       	in	r0, 0x3f	; 63
    42f2:	f8 94       	cli
    42f4:	de bf       	out	0x3e, r29	; 62
    42f6:	0f be       	out	0x3f, r0	; 63
    42f8:	cd bf       	out	0x3d, r28	; 61
    42fa:	df 91       	pop	r29
    42fc:	cf 91       	pop	r28
    42fe:	1f 91       	pop	r17
    4300:	0f 91       	pop	r16
    4302:	ff 90       	pop	r15
    4304:	ef 90       	pop	r14
    4306:	df 90       	pop	r13
    4308:	cf 90       	pop	r12
    430a:	bf 90       	pop	r11
    430c:	af 90       	pop	r10
    430e:	9f 90       	pop	r9
    4310:	8f 90       	pop	r8
    4312:	7f 90       	pop	r7
    4314:	6f 90       	pop	r6
    4316:	5f 90       	pop	r5
    4318:	4f 90       	pop	r4
    431a:	3f 90       	pop	r3
    431c:	2f 90       	pop	r2
    431e:	08 95       	ret

00004320 <_nrk_time_to_ticks_long>:
    4320:	af 92       	push	r10
    4322:	bf 92       	push	r11
    4324:	cf 92       	push	r12
    4326:	df 92       	push	r13
    4328:	ef 92       	push	r14
    432a:	ff 92       	push	r15
    432c:	0f 93       	push	r16
    432e:	1f 93       	push	r17
    4330:	cf 93       	push	r28
    4332:	df 93       	push	r29
    4334:	cd b7       	in	r28, 0x3d	; 61
    4336:	de b7       	in	r29, 0x3e	; 62
    4338:	28 97       	sbiw	r28, 0x08	; 8
    433a:	0f b6       	in	r0, 0x3f	; 63
    433c:	f8 94       	cli
    433e:	de bf       	out	0x3e, r29	; 62
    4340:	0f be       	out	0x3f, r0	; 63
    4342:	cd bf       	out	0x3d, r28	; 61
    4344:	29 83       	std	Y+1, r18	; 0x01
    4346:	3a 83       	std	Y+2, r19	; 0x02
    4348:	4b 83       	std	Y+3, r20	; 0x03
    434a:	5c 83       	std	Y+4, r21	; 0x04
    434c:	6d 83       	std	Y+5, r22	; 0x05
    434e:	7e 83       	std	Y+6, r23	; 0x06
    4350:	8f 83       	std	Y+7, r24	; 0x07
    4352:	98 87       	std	Y+8, r25	; 0x08
    4354:	ad 80       	ldd	r10, Y+5	; 0x05
    4356:	be 80       	ldd	r11, Y+6	; 0x06
    4358:	cf 80       	ldd	r12, Y+7	; 0x07
    435a:	d8 84       	ldd	r13, Y+8	; 0x08
    435c:	e9 80       	ldd	r14, Y+1	; 0x01
    435e:	fa 80       	ldd	r15, Y+2	; 0x02
    4360:	0b 81       	ldd	r16, Y+3	; 0x03
    4362:	1c 81       	ldd	r17, Y+4	; 0x04
    4364:	e1 14       	cp	r14, r1
    4366:	f1 04       	cpc	r15, r1
    4368:	01 05       	cpc	r16, r1
    436a:	11 05       	cpc	r17, r1
    436c:	09 f1       	breq	.+66     	; 0x43b0 <_nrk_time_to_ticks_long+0x90>
    436e:	80 e0       	ldi	r24, 0x00	; 0
    4370:	9a ec       	ldi	r25, 0xCA	; 202
    4372:	aa e9       	ldi	r26, 0x9A	; 154
    4374:	bb e3       	ldi	r27, 0x3B	; 59
    4376:	a8 0e       	add	r10, r24
    4378:	b9 1e       	adc	r11, r25
    437a:	ca 1e       	adc	r12, r26
    437c:	db 1e       	adc	r13, r27
    437e:	c6 01       	movw	r24, r12
    4380:	b5 01       	movw	r22, r10
    4382:	23 eb       	ldi	r18, 0xB3	; 179
    4384:	36 ee       	ldi	r19, 0xE6	; 230
    4386:	4e e0       	ldi	r20, 0x0E	; 14
    4388:	50 e0       	ldi	r21, 0x00	; 0
    438a:	0e 94 ac 2c 	call	0x5958	; 0x5958 <__udivmodsi4>
    438e:	08 94       	sec
    4390:	e1 08       	sbc	r14, r1
    4392:	f1 08       	sbc	r15, r1
    4394:	01 09       	sbc	r16, r1
    4396:	11 09       	sbc	r17, r1
    4398:	6a e0       	ldi	r22, 0x0A	; 10
    439a:	ee 0c       	add	r14, r14
    439c:	ff 1c       	adc	r15, r15
    439e:	00 1f       	adc	r16, r16
    43a0:	11 1f       	adc	r17, r17
    43a2:	6a 95       	dec	r22
    43a4:	d1 f7       	brne	.-12     	; 0x439a <_nrk_time_to_ticks_long+0x7a>
    43a6:	e2 0e       	add	r14, r18
    43a8:	f3 1e       	adc	r15, r19
    43aa:	04 1f       	adc	r16, r20
    43ac:	15 1f       	adc	r17, r21
    43ae:	0a c0       	rjmp	.+20     	; 0x43c4 <_nrk_time_to_ticks_long+0xa4>
    43b0:	c6 01       	movw	r24, r12
    43b2:	b5 01       	movw	r22, r10
    43b4:	23 eb       	ldi	r18, 0xB3	; 179
    43b6:	36 ee       	ldi	r19, 0xE6	; 230
    43b8:	4e e0       	ldi	r20, 0x0E	; 14
    43ba:	50 e0       	ldi	r21, 0x00	; 0
    43bc:	0e 94 ac 2c 	call	0x5958	; 0x5958 <__udivmodsi4>
    43c0:	79 01       	movw	r14, r18
    43c2:	8a 01       	movw	r16, r20
    43c4:	c8 01       	movw	r24, r16
    43c6:	b7 01       	movw	r22, r14
    43c8:	04 c0       	rjmp	.+8      	; 0x43d2 <_nrk_time_to_ticks_long+0xb2>
    43ca:	60 50       	subi	r22, 0x00	; 0
    43cc:	74 40       	sbci	r23, 0x04	; 4
    43ce:	80 40       	sbci	r24, 0x00	; 0
    43d0:	90 40       	sbci	r25, 0x00	; 0
    43d2:	61 30       	cpi	r22, 0x01	; 1
    43d4:	a4 e0       	ldi	r26, 0x04	; 4
    43d6:	7a 07       	cpc	r23, r26
    43d8:	a0 e0       	ldi	r26, 0x00	; 0
    43da:	8a 07       	cpc	r24, r26
    43dc:	a0 e0       	ldi	r26, 0x00	; 0
    43de:	9a 07       	cpc	r25, r26
    43e0:	a0 f7       	brcc	.-24     	; 0x43ca <_nrk_time_to_ticks_long+0xaa>
    43e2:	23 eb       	ldi	r18, 0xB3	; 179
    43e4:	36 ee       	ldi	r19, 0xE6	; 230
    43e6:	4e e0       	ldi	r20, 0x0E	; 14
    43e8:	50 e0       	ldi	r21, 0x00	; 0
    43ea:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <__mulsi3>
    43ee:	67 5a       	subi	r22, 0xA7	; 167
    43f0:	7c 48       	sbci	r23, 0x8C	; 140
    43f2:	88 4f       	sbci	r24, 0xF8	; 248
    43f4:	9f 4f       	sbci	r25, 0xFF	; 255
    43f6:	6a 15       	cp	r22, r10
    43f8:	7b 05       	cpc	r23, r11
    43fa:	8c 05       	cpc	r24, r12
    43fc:	9d 05       	cpc	r25, r13
    43fe:	28 f4       	brcc	.+10     	; 0x440a <_nrk_time_to_ticks_long+0xea>
    4400:	08 94       	sec
    4402:	e1 1c       	adc	r14, r1
    4404:	f1 1c       	adc	r15, r1
    4406:	01 1d       	adc	r16, r1
    4408:	11 1d       	adc	r17, r1
    440a:	c8 01       	movw	r24, r16
    440c:	b7 01       	movw	r22, r14
    440e:	28 96       	adiw	r28, 0x08	; 8
    4410:	0f b6       	in	r0, 0x3f	; 63
    4412:	f8 94       	cli
    4414:	de bf       	out	0x3e, r29	; 62
    4416:	0f be       	out	0x3f, r0	; 63
    4418:	cd bf       	out	0x3d, r28	; 61
    441a:	df 91       	pop	r29
    441c:	cf 91       	pop	r28
    441e:	1f 91       	pop	r17
    4420:	0f 91       	pop	r16
    4422:	ff 90       	pop	r15
    4424:	ef 90       	pop	r14
    4426:	df 90       	pop	r13
    4428:	cf 90       	pop	r12
    442a:	bf 90       	pop	r11
    442c:	af 90       	pop	r10
    442e:	08 95       	ret

00004430 <nrk_time_get>:
//	PARAMETERS:
//		UINT8 channel
//			The channel number (11-26)
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
    4430:	ef 92       	push	r14
    4432:	ff 92       	push	r15
    4434:	0f 93       	push	r16
    4436:	1f 93       	push	r17
    4438:	cf 93       	push	r28
    443a:	df 93       	push	r29
    443c:	ec 01       	movw	r28, r24
	
    443e:	80 91 61 09 	lds	r24, 0x0961
    4442:	90 91 62 09 	lds	r25, 0x0962
    4446:	a0 91 63 09 	lds	r26, 0x0963
    444a:	b0 91 64 09 	lds	r27, 0x0964
    444e:	88 83       	st	Y, r24
    4450:	99 83       	std	Y+1, r25	; 0x01
    4452:	aa 83       	std	Y+2, r26	; 0x02
    4454:	bb 83       	std	Y+3, r27	; 0x03
	// Derive frequency programming from the given channel number
    4456:	e0 90 65 09 	lds	r14, 0x0965
    445a:	f0 90 66 09 	lds	r15, 0x0966
    445e:	00 91 67 09 	lds	r16, 0x0967
    4462:	10 91 68 09 	lds	r17, 0x0968
    4466:	ec 82       	std	Y+4, r14	; 0x04
    4468:	fd 82       	std	Y+5, r15	; 0x05
    446a:	0e 83       	std	Y+6, r16	; 0x06
    446c:	1f 83       	std	Y+7, r17	; 0x07
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
    446e:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    4472:	99 27       	eor	r25, r25
    4474:	aa 27       	eor	r26, r26
    4476:	bb 27       	eor	r27, r27
    4478:	bc 01       	movw	r22, r24
    447a:	cd 01       	movw	r24, r26
    447c:	23 eb       	ldi	r18, 0xB3	; 179
    447e:	36 ee       	ldi	r19, 0xE6	; 230
    4480:	4e e0       	ldi	r20, 0x0E	; 14
    4482:	50 e0       	ldi	r21, 0x00	; 0
    4484:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <__mulsi3>
    4488:	e6 0e       	add	r14, r22
    448a:	f7 1e       	adc	r15, r23
    448c:	08 1f       	adc	r16, r24
    448e:	19 1f       	adc	r17, r25
    4490:	ec 82       	std	Y+4, r14	; 0x04
    4492:	fd 82       	std	Y+5, r15	; 0x05
    4494:	0e 83       	std	Y+6, r16	; 0x06
    4496:	1f 83       	std	Y+7, r17	; 0x07
    4498:	13 c0       	rjmp	.+38     	; 0x44c0 <nrk_time_get+0x90>
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
	
    // Write it to the CC2420
    449a:	80 50       	subi	r24, 0x00	; 0
    449c:	9a 4c       	sbci	r25, 0xCA	; 202
    449e:	aa 49       	sbci	r26, 0x9A	; 154
    44a0:	bb 43       	sbci	r27, 0x3B	; 59
    44a2:	8c 83       	std	Y+4, r24	; 0x04
    44a4:	9d 83       	std	Y+5, r25	; 0x05
    44a6:	ae 83       	std	Y+6, r26	; 0x06
    44a8:	bf 83       	std	Y+7, r27	; 0x07
	DISABLE_GLOBAL_INT();
    44aa:	88 81       	ld	r24, Y
    44ac:	99 81       	ldd	r25, Y+1	; 0x01
    44ae:	aa 81       	ldd	r26, Y+2	; 0x02
    44b0:	bb 81       	ldd	r27, Y+3	; 0x03
    44b2:	01 96       	adiw	r24, 0x01	; 1
    44b4:	a1 1d       	adc	r26, r1
    44b6:	b1 1d       	adc	r27, r1
    44b8:	88 83       	st	Y, r24
    44ba:	99 83       	std	Y+1, r25	; 0x01
    44bc:	aa 83       	std	Y+2, r26	; 0x02
    44be:	bb 83       	std	Y+3, r27	; 0x03
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
    44c0:	8c 81       	ldd	r24, Y+4	; 0x04
    44c2:	9d 81       	ldd	r25, Y+5	; 0x05
    44c4:	ae 81       	ldd	r26, Y+6	; 0x06
    44c6:	bf 81       	ldd	r27, Y+7	; 0x07
    44c8:	80 30       	cpi	r24, 0x00	; 0
    44ca:	2a ec       	ldi	r18, 0xCA	; 202
    44cc:	92 07       	cpc	r25, r18
    44ce:	2a e9       	ldi	r18, 0x9A	; 154
    44d0:	a2 07       	cpc	r26, r18
    44d2:	2b e3       	ldi	r18, 0x3B	; 59
    44d4:	b2 07       	cpc	r27, r18
    44d6:	08 f7       	brcc	.-62     	; 0x449a <nrk_time_get+0x6a>
    44d8:	df 91       	pop	r29
    44da:	cf 91       	pop	r28
    44dc:	1f 91       	pop	r17
    44de:	0f 91       	pop	r16
    44e0:	ff 90       	pop	r15
    44e2:	ef 90       	pop	r14
    44e4:	08 95       	ret

000044e6 <nrk_idle_task>:
//	PARAMETERS:
//		UINT8 channel
//			The channel number (11-26)
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
    44e6:	0e 94 9b 18 	call	0x3136	; 0x3136 <nrk_stack_check>
	
	// Derive frequency programming from the given channel number
    44ea:	0e 94 93 26 	call	0x4d26	; 0x4d26 <_nrk_get_next_wakeup>
    44ee:	85 31       	cpi	r24, 0x15	; 21
    44f0:	30 f4       	brcc	.+12     	; 0x44fe <nrk_idle_task+0x18>
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
    44f2:	81 e0       	ldi	r24, 0x01	; 1
    44f4:	80 93 5e 09 	sts	0x095E, r24
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
    44f8:	0e 94 23 28 	call	0x5046	; 0x5046 <nrk_idle>
    44fc:	09 c0       	rjmp	.+18     	; 0x4510 <nrk_idle_task+0x2a>
	
    // Write it to the CC2420
	DISABLE_GLOBAL_INT();
	FASTSPI_SETREG(CC2420_FSCTRL, f);
	ENABLE_GLOBAL_INT();
    44fe:	8a e0       	ldi	r24, 0x0A	; 10
    4500:	90 e0       	ldi	r25, 0x00	; 0
    4502:	0e 94 4f 26 	call	0x4c9e	; 0x4c9e <nrk_spin_wait_us>

    4506:	82 e0       	ldi	r24, 0x02	; 2
    4508:	80 93 5e 09 	sts	0x095E, r24
} // rfSetChannel
    450c:	0e 94 17 28 	call	0x502e	; 0x502e <nrk_sleep>

    4510:	80 91 13 07 	lds	r24, 0x0713
    4514:	85 35       	cpi	r24, 0x55	; 85
    4516:	19 f0       	breq	.+6      	; 0x451e <nrk_idle_task+0x38>
    4518:	88 e0       	ldi	r24, 0x08	; 8
    451a:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <nrk_error_add>
    451e:	80 91 7e 10 	lds	r24, 0x107E
    4522:	85 35       	cpi	r24, 0x55	; 85
    4524:	01 f3       	breq	.-64     	; 0x44e6 <nrk_idle_task>
    4526:	88 e0       	ldi	r24, 0x08	; 8
    4528:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <nrk_error_add>
    452c:	dc cf       	rjmp	.-72     	; 0x44e6 <nrk_idle_task>

0000452e <_nrk_scheduler>:
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
    452e:	2f 92       	push	r2
    4530:	3f 92       	push	r3
    4532:	4f 92       	push	r4
    4534:	5f 92       	push	r5
    4536:	6f 92       	push	r6
    4538:	7f 92       	push	r7
    453a:	8f 92       	push	r8
    453c:	9f 92       	push	r9
    453e:	af 92       	push	r10
    4540:	bf 92       	push	r11
    4542:	cf 92       	push	r12
    4544:	df 92       	push	r13
    4546:	ef 92       	push	r14
    4548:	ff 92       	push	r15
    454a:	0f 93       	push	r16
    454c:	1f 93       	push	r17
    454e:	cf 93       	push	r28
    4550:	df 93       	push	r29
    4552:	cd b7       	in	r28, 0x3d	; 61
    4554:	de b7       	in	r29, 0x3e	; 62
    4556:	24 97       	sbiw	r28, 0x04	; 4
    4558:	0f b6       	in	r0, 0x3f	; 63
    455a:	f8 94       	cli
    455c:	de bf       	out	0x3e, r29	; 62
    455e:	0f be       	out	0x3f, r0	; 63
    4560:	cd bf       	out	0x3d, r28	; 61
	
    // Write it to the CC2420
	DISABLE_GLOBAL_INT();
	FASTSPI_SETREG(CC2420_FSCTRL, f);
	ENABLE_GLOBAL_INT();

    4562:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
} // rfSetChannel


    4566:	0e 94 5b 26 	call	0x4cb6	; 0x4cb6 <_nrk_high_speed_timer_reset>
    456a:	0e 94 61 26 	call	0x4cc2	; 0x4cc2 <_nrk_high_speed_timer_get>
    456e:	9a 83       	std	Y+2, r25	; 0x02
    4570:	89 83       	std	Y+1, r24	; 0x01
    4572:	8a ef       	ldi	r24, 0xFA	; 250
    4574:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <_nrk_set_next_wakeup>
    4578:	0e 94 f5 27 	call	0x4fea	; 0x4fea <nrk_watchdog_reset>
    457c:	e0 91 6a 09 	lds	r30, 0x096A
    4580:	f0 91 6b 09 	lds	r31, 0x096B
    4584:	80 84       	ldd	r8, Z+8	; 0x08
    4586:	a0 90 65 09 	lds	r10, 0x0965
    458a:	b0 90 66 09 	lds	r11, 0x0966
    458e:	c0 90 67 09 	lds	r12, 0x0967
    4592:	d0 90 68 09 	lds	r13, 0x0968
    4596:	60 91 11 07 	lds	r22, 0x0711
    459a:	77 27       	eor	r23, r23
    459c:	88 27       	eor	r24, r24
    459e:	99 27       	eor	r25, r25
    45a0:	23 eb       	ldi	r18, 0xB3	; 179
    45a2:	36 ee       	ldi	r19, 0xE6	; 230
    45a4:	4e e0       	ldi	r20, 0x0E	; 14
    45a6:	50 e0       	ldi	r21, 0x00	; 0
    45a8:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <__mulsi3>
    45ac:	7b 01       	movw	r14, r22
    45ae:	8c 01       	movw	r16, r24
    45b0:	ea 0c       	add	r14, r10
    45b2:	fb 1c       	adc	r15, r11
    45b4:	0c 1d       	adc	r16, r12
    45b6:	1d 1d       	adc	r17, r13
    45b8:	c8 01       	movw	r24, r16
    45ba:	b7 01       	movw	r22, r14
    45bc:	24 c0       	rjmp	.+72     	; 0x4606 <_nrk_scheduler+0xd8>
    45be:	e1 2c       	mov	r14, r1
    45c0:	76 e3       	ldi	r23, 0x36	; 54
    45c2:	f7 2e       	mov	r15, r23
    45c4:	75 e6       	ldi	r23, 0x65	; 101
    45c6:	07 2f       	mov	r16, r23
    45c8:	74 ec       	ldi	r23, 0xC4	; 196
    45ca:	17 2f       	mov	r17, r23
    45cc:	e8 0e       	add	r14, r24
    45ce:	f9 1e       	adc	r15, r25
    45d0:	0a 1f       	adc	r16, r26
    45d2:	1b 1f       	adc	r17, r27
    45d4:	80 91 61 09 	lds	r24, 0x0961
    45d8:	90 91 62 09 	lds	r25, 0x0962
    45dc:	a0 91 63 09 	lds	r26, 0x0963
    45e0:	b0 91 64 09 	lds	r27, 0x0964
    45e4:	01 96       	adiw	r24, 0x01	; 1
    45e6:	a1 1d       	adc	r26, r1
    45e8:	b1 1d       	adc	r27, r1
    45ea:	80 93 61 09 	sts	0x0961, r24
    45ee:	90 93 62 09 	sts	0x0962, r25
    45f2:	a0 93 63 09 	sts	0x0963, r26
    45f6:	b0 93 64 09 	sts	0x0964, r27
    45fa:	c8 01       	movw	r24, r16
    45fc:	b7 01       	movw	r22, r14
    45fe:	23 eb       	ldi	r18, 0xB3	; 179
    4600:	36 ee       	ldi	r19, 0xE6	; 230
    4602:	4e e0       	ldi	r20, 0x0E	; 14
    4604:	50 e0       	ldi	r21, 0x00	; 0
    4606:	0e 94 ac 2c 	call	0x5958	; 0x5958 <__udivmodsi4>
    460a:	e6 1a       	sub	r14, r22
    460c:	f7 0a       	sbc	r15, r23
    460e:	08 0b       	sbc	r16, r24
    4610:	19 0b       	sbc	r17, r25
    4612:	e0 92 65 09 	sts	0x0965, r14
    4616:	f0 92 66 09 	sts	0x0966, r15
    461a:	00 93 67 09 	sts	0x0967, r16
    461e:	10 93 68 09 	sts	0x0968, r17
    4622:	80 91 65 09 	lds	r24, 0x0965
    4626:	90 91 66 09 	lds	r25, 0x0966
    462a:	a0 91 67 09 	lds	r26, 0x0967
    462e:	b0 91 68 09 	lds	r27, 0x0968
    4632:	80 30       	cpi	r24, 0x00	; 0
    4634:	2a ec       	ldi	r18, 0xCA	; 202
    4636:	92 07       	cpc	r25, r18
    4638:	2a e9       	ldi	r18, 0x9A	; 154
    463a:	a2 07       	cpc	r26, r18
    463c:	2b e3       	ldi	r18, 0x3B	; 59
    463e:	b2 07       	cpc	r27, r18
    4640:	08 f0       	brcs	.+2      	; 0x4644 <_nrk_scheduler+0x116>
    4642:	bd cf       	rjmp	.-134    	; 0x45be <_nrk_scheduler+0x90>
    4644:	e0 91 6a 09 	lds	r30, 0x096A
    4648:	f0 91 6b 09 	lds	r31, 0x096B
    464c:	85 81       	ldd	r24, Z+5	; 0x05
    464e:	88 23       	and	r24, r24
    4650:	b9 f1       	breq	.+110    	; 0x46c0 <_nrk_scheduler+0x192>
    4652:	81 85       	ldd	r24, Z+9	; 0x09
    4654:	84 30       	cpi	r24, 0x04	; 4
    4656:	a1 f1       	breq	.+104    	; 0x46c0 <_nrk_scheduler+0x192>
    4658:	87 81       	ldd	r24, Z+7	; 0x07
    465a:	82 30       	cpi	r24, 0x02	; 2
    465c:	29 f0       	breq	.+10     	; 0x4668 <_nrk_scheduler+0x13a>
    465e:	88 23       	and	r24, r24
    4660:	41 f0       	breq	.+16     	; 0x4672 <_nrk_scheduler+0x144>
    4662:	86 81       	ldd	r24, Z+6	; 0x06
    4664:	88 23       	and	r24, r24
    4666:	11 f4       	brne	.+4      	; 0x466c <_nrk_scheduler+0x13e>
    4668:	85 e0       	ldi	r24, 0x05	; 5
    466a:	01 c0       	rjmp	.+2      	; 0x466e <_nrk_scheduler+0x140>
    466c:	83 e0       	ldi	r24, 0x03	; 3
    466e:	81 87       	std	Z+9, r24	; 0x09
    4670:	0c c0       	rjmp	.+24     	; 0x468a <_nrk_scheduler+0x15c>
    4672:	83 e0       	ldi	r24, 0x03	; 3
    4674:	81 87       	std	Z+9, r24	; 0x09
    4676:	e0 91 6a 09 	lds	r30, 0x096A
    467a:	f0 91 6b 09 	lds	r31, 0x096B
    467e:	17 82       	std	Z+7, r1	; 0x07
    4680:	e0 91 6a 09 	lds	r30, 0x096A
    4684:	f0 91 6b 09 	lds	r31, 0x096B
    4688:	16 82       	std	Z+6, r1	; 0x06
    468a:	e0 91 6a 09 	lds	r30, 0x096A
    468e:	f0 91 6b 09 	lds	r31, 0x096B
    4692:	80 85       	ldd	r24, Z+8	; 0x08
    4694:	0e 94 23 1c 	call	0x3846	; 0x3846 <nrk_rem_from_readyQ>
    4698:	e0 91 6a 09 	lds	r30, 0x096A
    469c:	f0 91 6b 09 	lds	r31, 0x096B
    46a0:	80 85       	ldd	r24, Z+8	; 0x08
    46a2:	99 27       	eor	r25, r25
    46a4:	87 fd       	sbrc	r24, 7
    46a6:	90 95       	com	r25
    46a8:	9f 93       	push	r25
    46aa:	8f 93       	push	r24
    46ac:	8c e6       	ldi	r24, 0x6C	; 108
    46ae:	94 e0       	ldi	r25, 0x04	; 4
    46b0:	9f 93       	push	r25
    46b2:	8f 93       	push	r24
    46b4:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    46b8:	0f 90       	pop	r0
    46ba:	0f 90       	pop	r0
    46bc:	0f 90       	pop	r0
    46be:	0f 90       	pop	r0
    46c0:	e0 91 6a 09 	lds	r30, 0x096A
    46c4:	f0 91 6b 09 	lds	r31, 0x096B
    46c8:	86 8d       	ldd	r24, Z+30	; 0x1e
    46ca:	97 8d       	ldd	r25, Z+31	; 0x1f
    46cc:	89 2b       	or	r24, r25
    46ce:	09 f4       	brne	.+2      	; 0x46d2 <_nrk_scheduler+0x1a4>
    46d0:	5c c0       	rjmp	.+184    	; 0x478a <_nrk_scheduler+0x25c>
    46d2:	60 85       	ldd	r22, Z+8	; 0x08
    46d4:	66 23       	and	r22, r22
    46d6:	09 f4       	brne	.+2      	; 0x46da <_nrk_scheduler+0x1ac>
    46d8:	58 c0       	rjmp	.+176    	; 0x478a <_nrk_scheduler+0x25c>
    46da:	81 85       	ldd	r24, Z+9	; 0x09
    46dc:	84 30       	cpi	r24, 0x04	; 4
    46de:	09 f4       	brne	.+2      	; 0x46e2 <_nrk_scheduler+0x1b4>
    46e0:	54 c0       	rjmp	.+168    	; 0x478a <_nrk_scheduler+0x25c>
    46e2:	87 a1       	ldd	r24, Z+39	; 0x27
    46e4:	88 23       	and	r24, r24
    46e6:	21 f1       	breq	.+72     	; 0x4730 <_nrk_scheduler+0x202>
    46e8:	86 2f       	mov	r24, r22
    46ea:	99 27       	eor	r25, r25
    46ec:	87 fd       	sbrc	r24, 7
    46ee:	90 95       	com	r25
    46f0:	9f 93       	push	r25
    46f2:	8f 93       	push	r24
    46f4:	89 e8       	ldi	r24, 0x89	; 137
    46f6:	94 e0       	ldi	r25, 0x04	; 4
    46f8:	9f 93       	push	r25
    46fa:	8f 93       	push	r24
    46fc:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    4700:	e0 91 6a 09 	lds	r30, 0x096A
    4704:	f0 91 6b 09 	lds	r31, 0x096B
    4708:	81 e0       	ldi	r24, 0x01	; 1
    470a:	86 a3       	std	Z+38, r24	; 0x26
    470c:	20 91 11 07 	lds	r18, 0x0711
    4710:	33 27       	eor	r19, r19
    4712:	82 8d       	ldd	r24, Z+26	; 0x1a
    4714:	93 8d       	ldd	r25, Z+27	; 0x1b
    4716:	28 1b       	sub	r18, r24
    4718:	39 0b       	sbc	r19, r25
    471a:	86 8d       	ldd	r24, Z+30	; 0x1e
    471c:	97 8d       	ldd	r25, Z+31	; 0x1f
    471e:	82 1b       	sub	r24, r18
    4720:	93 0b       	sbc	r25, r19
    4722:	93 8f       	std	Z+27, r25	; 0x1b
    4724:	82 8f       	std	Z+26, r24	; 0x1a
    4726:	0f 90       	pop	r0
    4728:	0f 90       	pop	r0
    472a:	0f 90       	pop	r0
    472c:	0f 90       	pop	r0
    472e:	2d c0       	rjmp	.+90     	; 0x478a <_nrk_scheduler+0x25c>
    4730:	22 8d       	ldd	r18, Z+26	; 0x1a
    4732:	33 8d       	ldd	r19, Z+27	; 0x1b
    4734:	80 91 11 07 	lds	r24, 0x0711
    4738:	48 2f       	mov	r20, r24
    473a:	55 27       	eor	r21, r21
    473c:	24 17       	cp	r18, r20
    473e:	35 07       	cpc	r19, r21
    4740:	50 f4       	brcc	.+20     	; 0x4756 <_nrk_scheduler+0x228>
    4742:	82 e0       	ldi	r24, 0x02	; 2
    4744:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    4748:	e0 91 6a 09 	lds	r30, 0x096A
    474c:	f0 91 6b 09 	lds	r31, 0x096B
    4750:	13 8e       	std	Z+27, r1	; 0x1b
    4752:	12 8e       	std	Z+26, r1	; 0x1a
    4754:	04 c0       	rjmp	.+8      	; 0x475e <_nrk_scheduler+0x230>
    4756:	24 1b       	sub	r18, r20
    4758:	35 0b       	sbc	r19, r21
    475a:	33 8f       	std	Z+27, r19	; 0x1b
    475c:	22 8f       	std	Z+26, r18	; 0x1a
    475e:	e0 91 6a 09 	lds	r30, 0x096A
    4762:	f0 91 6b 09 	lds	r31, 0x096B
    4766:	10 85       	ldd	r17, Z+8	; 0x08
    4768:	82 8d       	ldd	r24, Z+26	; 0x1a
    476a:	93 8d       	ldd	r25, Z+27	; 0x1b
    476c:	89 2b       	or	r24, r25
    476e:	69 f4       	brne	.+26     	; 0x478a <_nrk_scheduler+0x25c>
    4770:	61 2f       	mov	r22, r17
    4772:	83 e0       	ldi	r24, 0x03	; 3
    4774:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    4778:	e0 91 6a 09 	lds	r30, 0x096A
    477c:	f0 91 6b 09 	lds	r31, 0x096B
    4780:	83 e0       	ldi	r24, 0x03	; 3
    4782:	81 87       	std	Z+9, r24	; 0x09
    4784:	81 2f       	mov	r24, r17
    4786:	0e 94 23 1c 	call	0x3846	; 0x3846 <nrk_rem_from_readyQ>
    478a:	e0 91 6a 09 	lds	r30, 0x096A
    478e:	f0 91 6b 09 	lds	r31, 0x096B
    4792:	87 a1       	ldd	r24, Z+39	; 0x27
    4794:	88 23       	and	r24, r24
    4796:	09 f4       	brne	.+2      	; 0x479a <_nrk_scheduler+0x26c>
    4798:	70 c0       	rjmp	.+224    	; 0x487a <_nrk_scheduler+0x34c>
    479a:	22 a1       	ldd	r18, Z+34	; 0x22
    479c:	33 a1       	ldd	r19, Z+35	; 0x23
    479e:	80 91 11 07 	lds	r24, 0x0711
    47a2:	99 27       	eor	r25, r25
    47a4:	82 17       	cp	r24, r18
    47a6:	93 07       	cpc	r25, r19
    47a8:	98 f1       	brcs	.+102    	; 0x4810 <_nrk_scheduler+0x2e2>
    47aa:	80 85       	ldd	r24, Z+8	; 0x08
    47ac:	99 27       	eor	r25, r25
    47ae:	87 fd       	sbrc	r24, 7
    47b0:	90 95       	com	r25
    47b2:	9f 93       	push	r25
    47b4:	8f 93       	push	r24
    47b6:	8e eb       	ldi	r24, 0xBE	; 190
    47b8:	94 e0       	ldi	r25, 0x04	; 4
    47ba:	9f 93       	push	r25
    47bc:	8f 93       	push	r24
    47be:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    47c2:	e0 91 6a 09 	lds	r30, 0x096A
    47c6:	f0 91 6b 09 	lds	r31, 0x096B
    47ca:	84 a1       	ldd	r24, Z+36	; 0x24
    47cc:	95 a1       	ldd	r25, Z+37	; 0x25
    47ce:	22 a1       	ldd	r18, Z+34	; 0x22
    47d0:	33 a1       	ldd	r19, Z+35	; 0x23
    47d2:	82 0f       	add	r24, r18
    47d4:	93 1f       	adc	r25, r19
    47d6:	20 91 11 07 	lds	r18, 0x0711
    47da:	82 1b       	sub	r24, r18
    47dc:	91 09       	sbc	r25, r1
    47de:	93 a3       	std	Z+35, r25	; 0x23
    47e0:	82 a3       	std	Z+34, r24	; 0x22
    47e2:	80 8d       	ldd	r24, Z+24	; 0x18
    47e4:	91 8d       	ldd	r25, Z+25	; 0x19
    47e6:	24 8d       	ldd	r18, Z+28	; 0x1c
    47e8:	35 8d       	ldd	r19, Z+29	; 0x1d
    47ea:	82 0f       	add	r24, r18
    47ec:	93 1f       	adc	r25, r19
    47ee:	91 8f       	std	Z+25, r25	; 0x19
    47f0:	80 8f       	std	Z+24, r24	; 0x18
    47f2:	80 85       	ldd	r24, Z+8	; 0x08
    47f4:	0e 94 23 1c 	call	0x3846	; 0x3846 <nrk_rem_from_readyQ>
    47f8:	e0 91 6a 09 	lds	r30, 0x096A
    47fc:	f0 91 6b 09 	lds	r31, 0x096B
    4800:	80 85       	ldd	r24, Z+8	; 0x08
    4802:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <nrk_add_to_readyQ>
    4806:	0f 90       	pop	r0
    4808:	0f 90       	pop	r0
    480a:	0f 90       	pop	r0
    480c:	0f 90       	pop	r0
    480e:	04 c0       	rjmp	.+8      	; 0x4818 <_nrk_scheduler+0x2ea>
    4810:	28 1b       	sub	r18, r24
    4812:	39 0b       	sbc	r19, r25
    4814:	33 a3       	std	Z+35, r19	; 0x23
    4816:	22 a3       	std	Z+34, r18	; 0x22
    4818:	e0 91 6a 09 	lds	r30, 0x096A
    481c:	f0 91 6b 09 	lds	r31, 0x096B
    4820:	82 a1       	ldd	r24, Z+34	; 0x22
    4822:	93 a1       	ldd	r25, Z+35	; 0x23
    4824:	9f 93       	push	r25
    4826:	8f 93       	push	r24
    4828:	80 85       	ldd	r24, Z+8	; 0x08
    482a:	99 27       	eor	r25, r25
    482c:	87 fd       	sbrc	r24, 7
    482e:	90 95       	com	r25
    4830:	9f 93       	push	r25
    4832:	8f 93       	push	r24
    4834:	8f ee       	ldi	r24, 0xEF	; 239
    4836:	94 e0       	ldi	r25, 0x04	; 4
    4838:	9f 93       	push	r25
    483a:	8f 93       	push	r24
    483c:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    4840:	e0 91 6a 09 	lds	r30, 0x096A
    4844:	f0 91 6b 09 	lds	r31, 0x096B
    4848:	80 8d       	ldd	r24, Z+24	; 0x18
    484a:	91 8d       	ldd	r25, Z+25	; 0x19
    484c:	9f 93       	push	r25
    484e:	8f 93       	push	r24
    4850:	80 85       	ldd	r24, Z+8	; 0x08
    4852:	99 27       	eor	r25, r25
    4854:	87 fd       	sbrc	r24, 7
    4856:	90 95       	com	r25
    4858:	9f 93       	push	r25
    485a:	8f 93       	push	r24
    485c:	8c e0       	ldi	r24, 0x0C	; 12
    485e:	95 e0       	ldi	r25, 0x05	; 5
    4860:	9f 93       	push	r25
    4862:	8f 93       	push	r24
    4864:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    4868:	4d b7       	in	r20, 0x3d	; 61
    486a:	5e b7       	in	r21, 0x3e	; 62
    486c:	44 5f       	subi	r20, 0xF4	; 244
    486e:	5f 4f       	sbci	r21, 0xFF	; 255
    4870:	0f b6       	in	r0, 0x3f	; 63
    4872:	f8 94       	cli
    4874:	5e bf       	out	0x3e, r21	; 62
    4876:	0f be       	out	0x3f, r0	; 63
    4878:	4d bf       	out	0x3d, r20	; 61
    487a:	6c ed       	ldi	r22, 0xDC	; 220
    487c:	a6 2e       	mov	r10, r22
    487e:	67 e0       	ldi	r22, 0x07	; 7
    4880:	b6 2e       	mov	r11, r22
    4882:	c5 01       	movw	r24, r10
    4884:	03 97       	sbiw	r24, 0x03	; 3
    4886:	9c 83       	std	Y+4, r25	; 0x04
    4888:	8b 83       	std	Y+3, r24	; 0x03
    488a:	00 e6       	ldi	r16, 0x60	; 96
    488c:	1a ee       	ldi	r17, 0xEA	; 234
    488e:	cc 24       	eor	r12, r12
    4890:	dd 24       	eor	r13, r13
    4892:	5e e2       	ldi	r21, 0x2E	; 46
    4894:	25 2e       	mov	r2, r21
    4896:	55 e0       	ldi	r21, 0x05	; 5
    4898:	35 2e       	mov	r3, r21
    489a:	41 e5       	ldi	r20, 0x51	; 81
    489c:	44 2e       	mov	r4, r20
    489e:	45 e0       	ldi	r20, 0x05	; 5
    48a0:	54 2e       	mov	r5, r20
    48a2:	3d e9       	ldi	r19, 0x9D	; 157
    48a4:	63 2e       	mov	r6, r19
    48a6:	35 e0       	ldi	r19, 0x05	; 5
    48a8:	73 2e       	mov	r7, r19
    48aa:	9c 2c       	mov	r9, r12
    48ac:	eb 81       	ldd	r30, Y+3	; 0x03
    48ae:	fc 81       	ldd	r31, Y+4	; 0x04
    48b0:	83 81       	ldd	r24, Z+3	; 0x03
    48b2:	8f 3f       	cpi	r24, 0xFF	; 255
    48b4:	09 f4       	brne	.+2      	; 0x48b8 <_nrk_scheduler+0x38a>
    48b6:	33 c1       	rjmp	.+614    	; 0x4b1e <_nrk_scheduler+0x5f0>
    48b8:	10 82       	st	Z, r1
    48ba:	88 23       	and	r24, r24
    48bc:	09 f4       	brne	.+2      	; 0x48c0 <_nrk_scheduler+0x392>
    48be:	3f c0       	rjmp	.+126    	; 0x493e <_nrk_scheduler+0x410>
    48c0:	84 81       	ldd	r24, Z+4	; 0x04
    48c2:	84 30       	cpi	r24, 0x04	; 4
    48c4:	e1 f1       	breq	.+120    	; 0x493e <_nrk_scheduler+0x410>
    48c6:	21 89       	ldd	r18, Z+17	; 0x11
    48c8:	32 89       	ldd	r19, Z+18	; 0x12
    48ca:	80 91 11 07 	lds	r24, 0x0711
    48ce:	99 27       	eor	r25, r25
    48d0:	28 17       	cp	r18, r24
    48d2:	39 07       	cpc	r19, r25
    48d4:	28 f0       	brcs	.+10     	; 0x48e0 <_nrk_scheduler+0x3b2>
    48d6:	28 1b       	sub	r18, r24
    48d8:	39 0b       	sbc	r19, r25
    48da:	32 8b       	std	Z+18, r19	; 0x12
    48dc:	21 8b       	std	Z+17, r18	; 0x11
    48de:	04 c0       	rjmp	.+8      	; 0x48e8 <_nrk_scheduler+0x3ba>
    48e0:	eb 81       	ldd	r30, Y+3	; 0x03
    48e2:	fc 81       	ldd	r31, Y+4	; 0x04
    48e4:	12 8a       	std	Z+18, r1	; 0x12
    48e6:	11 8a       	std	Z+17, r1	; 0x11
    48e8:	eb 81       	ldd	r30, Y+3	; 0x03
    48ea:	fc 81       	ldd	r31, Y+4	; 0x04
    48ec:	23 89       	ldd	r18, Z+19	; 0x13
    48ee:	34 89       	ldd	r19, Z+20	; 0x14
    48f0:	80 91 11 07 	lds	r24, 0x0711
    48f4:	99 27       	eor	r25, r25
    48f6:	28 17       	cp	r18, r24
    48f8:	39 07       	cpc	r19, r25
    48fa:	28 f0       	brcs	.+10     	; 0x4906 <_nrk_scheduler+0x3d8>
    48fc:	28 1b       	sub	r18, r24
    48fe:	39 0b       	sbc	r19, r25
    4900:	34 8b       	std	Z+20, r19	; 0x14
    4902:	23 8b       	std	Z+19, r18	; 0x13
    4904:	12 c0       	rjmp	.+36     	; 0x492a <_nrk_scheduler+0x3fc>
    4906:	eb 81       	ldd	r30, Y+3	; 0x03
    4908:	fc 81       	ldd	r31, Y+4	; 0x04
    490a:	67 89       	ldd	r22, Z+23	; 0x17
    490c:	70 8d       	ldd	r23, Z+24	; 0x18
    490e:	86 17       	cp	r24, r22
    4910:	97 07       	cpc	r25, r23
    4912:	28 f4       	brcc	.+10     	; 0x491e <_nrk_scheduler+0x3f0>
    4914:	68 1b       	sub	r22, r24
    4916:	79 0b       	sbc	r23, r25
    4918:	74 8b       	std	Z+20, r23	; 0x14
    491a:	63 8b       	std	Z+19, r22	; 0x13
    491c:	06 c0       	rjmp	.+12     	; 0x492a <_nrk_scheduler+0x3fc>
    491e:	0e 94 98 2c 	call	0x5930	; 0x5930 <__udivmodhi4>
    4922:	eb 81       	ldd	r30, Y+3	; 0x03
    4924:	fc 81       	ldd	r31, Y+4	; 0x04
    4926:	94 8b       	std	Z+20, r25	; 0x14
    4928:	83 8b       	std	Z+19, r24	; 0x13
    492a:	eb 81       	ldd	r30, Y+3	; 0x03
    492c:	fc 81       	ldd	r31, Y+4	; 0x04
    492e:	83 89       	ldd	r24, Z+19	; 0x13
    4930:	94 89       	ldd	r25, Z+20	; 0x14
    4932:	89 2b       	or	r24, r25
    4934:	21 f4       	brne	.+8      	; 0x493e <_nrk_scheduler+0x410>
    4936:	87 89       	ldd	r24, Z+23	; 0x17
    4938:	90 8d       	ldd	r25, Z+24	; 0x18
    493a:	94 8b       	std	Z+20, r25	; 0x14
    493c:	83 8b       	std	Z+19, r24	; 0x13
    493e:	eb 81       	ldd	r30, Y+3	; 0x03
    4940:	fc 81       	ldd	r31, Y+4	; 0x04
    4942:	84 81       	ldd	r24, Z+4	; 0x04
    4944:	83 30       	cpi	r24, 0x03	; 3
    4946:	09 f0       	breq	.+2      	; 0x494a <_nrk_scheduler+0x41c>
    4948:	ea c0       	rjmp	.+468    	; 0x4b1e <_nrk_scheduler+0x5f0>
    494a:	81 89       	ldd	r24, Z+17	; 0x11
    494c:	92 89       	ldd	r25, Z+18	; 0x12
    494e:	89 2b       	or	r24, r25
    4950:	09 f0       	breq	.+2      	; 0x4954 <_nrk_scheduler+0x426>
    4952:	db c0       	rjmp	.+438    	; 0x4b0a <_nrk_scheduler+0x5dc>
    4954:	82 81       	ldd	r24, Z+2	; 0x02
    4956:	88 23       	and	r24, r24
    4958:	a1 f0       	breq	.+40     	; 0x4982 <_nrk_scheduler+0x454>
    495a:	81 81       	ldd	r24, Z+1	; 0x01
    495c:	88 23       	and	r24, r24
    495e:	89 f0       	breq	.+34     	; 0x4982 <_nrk_scheduler+0x454>
    4960:	81 e0       	ldi	r24, 0x01	; 1
    4962:	90 e0       	ldi	r25, 0x00	; 0
    4964:	a0 e0       	ldi	r26, 0x00	; 0
    4966:	b0 e0       	ldi	r27, 0x00	; 0
    4968:	00 90 5a 09 	lds	r0, 0x095A
    496c:	04 c0       	rjmp	.+8      	; 0x4976 <_nrk_scheduler+0x448>
    496e:	88 0f       	add	r24, r24
    4970:	99 1f       	adc	r25, r25
    4972:	aa 1f       	adc	r26, r26
    4974:	bb 1f       	adc	r27, r27
    4976:	0a 94       	dec	r0
    4978:	d2 f7       	brpl	.-12     	; 0x496e <_nrk_scheduler+0x440>
    497a:	85 87       	std	Z+13, r24	; 0x0d
    497c:	96 87       	std	Z+14, r25	; 0x0e
    497e:	a7 87       	std	Z+15, r26	; 0x0f
    4980:	b0 8b       	std	Z+16, r27	; 0x10
    4982:	eb 81       	ldd	r30, Y+3	; 0x03
    4984:	fc 81       	ldd	r31, Y+4	; 0x04
    4986:	12 82       	std	Z+2, r1	; 0x02
    4988:	11 82       	std	Z+1, r1	; 0x01
    498a:	10 82       	st	Z, r1
    498c:	23 8d       	ldd	r18, Z+27	; 0x1b
    498e:	34 8d       	ldd	r19, Z+28	; 0x1c
    4990:	81 8d       	ldd	r24, Z+25	; 0x19
    4992:	92 8d       	ldd	r25, Z+26	; 0x1a
    4994:	21 30       	cpi	r18, 0x01	; 1
    4996:	31 05       	cpc	r19, r1
    4998:	09 f0       	breq	.+2      	; 0x499c <_nrk_scheduler+0x46e>
    499a:	9f c0       	rjmp	.+318    	; 0x4ada <_nrk_scheduler+0x5ac>
    499c:	96 8b       	std	Z+22, r25	; 0x16
    499e:	85 8b       	std	Z+21, r24	; 0x15
    49a0:	82 e0       	ldi	r24, 0x02	; 2
    49a2:	84 83       	std	Z+4, r24	; 0x04
    49a4:	83 89       	ldd	r24, Z+19	; 0x13
    49a6:	94 89       	ldd	r25, Z+20	; 0x14
    49a8:	92 8b       	std	Z+18, r25	; 0x12
    49aa:	81 8b       	std	Z+17, r24	; 0x11
    49ac:	f5 01       	movw	r30, r10
    49ae:	87 8d       	ldd	r24, Z+31	; 0x1f
    49b0:	88 23       	and	r24, r24
    49b2:	09 f4       	brne	.+2      	; 0x49b6 <_nrk_scheduler+0x488>
    49b4:	82 c0       	rjmp	.+260    	; 0x4aba <_nrk_scheduler+0x58c>
    49b6:	df 92       	push	r13
    49b8:	cf 92       	push	r12
    49ba:	3f 92       	push	r3
    49bc:	2f 92       	push	r2
    49be:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    49c2:	e0 91 6a 09 	lds	r30, 0x096A
    49c6:	f0 91 6b 09 	lds	r31, 0x096B
    49ca:	16 a2       	std	Z+38, r1	; 0x26
    49cc:	eb 81       	ldd	r30, Y+3	; 0x03
    49ce:	fc 81       	ldd	r31, Y+4	; 0x04
    49d0:	83 89       	ldd	r24, Z+19	; 0x13
    49d2:	94 89       	ldd	r25, Z+20	; 0x14
    49d4:	28 ee       	ldi	r18, 0xE8	; 232
    49d6:	e2 2e       	mov	r14, r18
    49d8:	23 e0       	ldi	r18, 0x03	; 3
    49da:	f2 2e       	mov	r15, r18
    49dc:	8e 9d       	mul	r24, r14
    49de:	90 01       	movw	r18, r0
    49e0:	8f 9d       	mul	r24, r15
    49e2:	30 0d       	add	r19, r0
    49e4:	9e 9d       	mul	r25, r14
    49e6:	30 0d       	add	r19, r0
    49e8:	11 24       	eor	r1, r1
    49ea:	85 8d       	ldd	r24, Z+29	; 0x1d
    49ec:	96 8d       	ldd	r25, Z+30	; 0x1e
    49ee:	67 8d       	ldd	r22, Z+31	; 0x1f
    49f0:	70 a1       	ldd	r23, Z+32	; 0x20
    49f2:	ac 01       	movw	r20, r24
    49f4:	4e 9d       	mul	r20, r14
    49f6:	c0 01       	movw	r24, r0
    49f8:	4f 9d       	mul	r20, r15
    49fa:	90 0d       	add	r25, r0
    49fc:	5e 9d       	mul	r21, r14
    49fe:	90 0d       	add	r25, r0
    4a00:	11 24       	eor	r1, r1
    4a02:	0e 94 98 2c 	call	0x5930	; 0x5930 <__udivmodhi4>
    4a06:	87 89       	ldd	r24, Z+23	; 0x17
    4a08:	90 8d       	ldd	r25, Z+24	; 0x18
    4a0a:	fc 01       	movw	r30, r24
    4a0c:	6e 9f       	mul	r22, r30
    4a0e:	c0 01       	movw	r24, r0
    4a10:	6f 9f       	mul	r22, r31
    4a12:	90 0d       	add	r25, r0
    4a14:	7e 9f       	mul	r23, r30
    4a16:	90 0d       	add	r25, r0
    4a18:	11 24       	eor	r1, r1
    4a1a:	0f 90       	pop	r0
    4a1c:	0f 90       	pop	r0
    4a1e:	0f 90       	pop	r0
    4a20:	0f 90       	pop	r0
    4a22:	82 17       	cp	r24, r18
    4a24:	93 07       	cpc	r25, r19
    4a26:	08 f4       	brcc	.+2      	; 0x4a2a <_nrk_scheduler+0x4fc>
    4a28:	48 c0       	rjmp	.+144    	; 0x4aba <_nrk_scheduler+0x58c>
    4a2a:	df 92       	push	r13
    4a2c:	cf 92       	push	r12
    4a2e:	5f 92       	push	r5
    4a30:	4f 92       	push	r4
    4a32:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    4a36:	eb 81       	ldd	r30, Y+3	; 0x03
    4a38:	fc 81       	ldd	r31, Y+4	; 0x04
    4a3a:	85 8d       	ldd	r24, Z+29	; 0x1d
    4a3c:	96 8d       	ldd	r25, Z+30	; 0x1e
    4a3e:	67 8d       	ldd	r22, Z+31	; 0x1f
    4a40:	70 a1       	ldd	r23, Z+32	; 0x20
    4a42:	9c 01       	movw	r18, r24
    4a44:	2e 9d       	mul	r18, r14
    4a46:	c0 01       	movw	r24, r0
    4a48:	2f 9d       	mul	r18, r15
    4a4a:	90 0d       	add	r25, r0
    4a4c:	3e 9d       	mul	r19, r14
    4a4e:	90 0d       	add	r25, r0
    4a50:	11 24       	eor	r1, r1
    4a52:	0e 94 98 2c 	call	0x5930	; 0x5930 <__udivmodhi4>
    4a56:	87 89       	ldd	r24, Z+23	; 0x17
    4a58:	90 8d       	ldd	r25, Z+24	; 0x18
    4a5a:	ac 01       	movw	r20, r24
    4a5c:	64 9f       	mul	r22, r20
    4a5e:	c0 01       	movw	r24, r0
    4a60:	65 9f       	mul	r22, r21
    4a62:	90 0d       	add	r25, r0
    4a64:	74 9f       	mul	r23, r20
    4a66:	90 0d       	add	r25, r0
    4a68:	11 24       	eor	r1, r1
    4a6a:	9f 93       	push	r25
    4a6c:	8f 93       	push	r24
    4a6e:	83 89       	ldd	r24, Z+19	; 0x13
    4a70:	94 89       	ldd	r25, Z+20	; 0x14
    4a72:	fc 01       	movw	r30, r24
    4a74:	ee 9d       	mul	r30, r14
    4a76:	c0 01       	movw	r24, r0
    4a78:	ef 9d       	mul	r30, r15
    4a7a:	90 0d       	add	r25, r0
    4a7c:	fe 9d       	mul	r31, r14
    4a7e:	90 0d       	add	r25, r0
    4a80:	11 24       	eor	r1, r1
    4a82:	9f 93       	push	r25
    4a84:	8f 93       	push	r24
    4a86:	7f 92       	push	r7
    4a88:	6f 92       	push	r6
    4a8a:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    4a8e:	eb 81       	ldd	r30, Y+3	; 0x03
    4a90:	fc 81       	ldd	r31, Y+4	; 0x04
    4a92:	87 8d       	ldd	r24, Z+31	; 0x1f
    4a94:	90 a1       	ldd	r25, Z+32	; 0x20
    4a96:	96 8f       	std	Z+30, r25	; 0x1e
    4a98:	85 8f       	std	Z+29, r24	; 0x1d
    4a9a:	87 89       	ldd	r24, Z+23	; 0x17
    4a9c:	90 8d       	ldd	r25, Z+24	; 0x18
    4a9e:	94 8b       	std	Z+20, r25	; 0x14
    4aa0:	83 8b       	std	Z+19, r24	; 0x13
    4aa2:	89 2d       	mov	r24, r9
    4aa4:	0e 94 23 1c 	call	0x3846	; 0x3846 <nrk_rem_from_readyQ>
    4aa8:	2d b7       	in	r18, 0x3d	; 61
    4aaa:	3e b7       	in	r19, 0x3e	; 62
    4aac:	26 5f       	subi	r18, 0xF6	; 246
    4aae:	3f 4f       	sbci	r19, 0xFF	; 255
    4ab0:	0f b6       	in	r0, 0x3f	; 63
    4ab2:	f8 94       	cli
    4ab4:	3e bf       	out	0x3e, r19	; 62
    4ab6:	0f be       	out	0x3f, r0	; 63
    4ab8:	2d bf       	out	0x3d, r18	; 61
    4aba:	89 2d       	mov	r24, r9
    4abc:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <nrk_add_to_readyQ>
    4ac0:	df 92       	push	r13
    4ac2:	cf 92       	push	r12
    4ac4:	4d eb       	ldi	r20, 0xBD	; 189
    4ac6:	55 e0       	ldi	r21, 0x05	; 5
    4ac8:	5f 93       	push	r21
    4aca:	4f 93       	push	r20
    4acc:	0e 94 8b 2a 	call	0x5516	; 0x5516 <printf>
    4ad0:	0f 90       	pop	r0
    4ad2:	0f 90       	pop	r0
    4ad4:	0f 90       	pop	r0
    4ad6:	0f 90       	pop	r0
    4ad8:	18 c0       	rjmp	.+48     	; 0x4b0a <_nrk_scheduler+0x5dc>
    4ada:	eb 81       	ldd	r30, Y+3	; 0x03
    4adc:	fc 81       	ldd	r31, Y+4	; 0x04
    4ade:	96 8b       	std	Z+22, r25	; 0x16
    4ae0:	85 8b       	std	Z+21, r24	; 0x15
    4ae2:	21 50       	subi	r18, 0x01	; 1
    4ae4:	30 40       	sbci	r19, 0x00	; 0
    4ae6:	87 89       	ldd	r24, Z+23	; 0x17
    4ae8:	90 8d       	ldd	r25, Z+24	; 0x18
    4aea:	ac 01       	movw	r20, r24
    4aec:	24 9f       	mul	r18, r20
    4aee:	c0 01       	movw	r24, r0
    4af0:	25 9f       	mul	r18, r21
    4af2:	90 0d       	add	r25, r0
    4af4:	34 9f       	mul	r19, r20
    4af6:	90 0d       	add	r25, r0
    4af8:	11 24       	eor	r1, r1
    4afa:	92 8b       	std	Z+18, r25	; 0x12
    4afc:	81 8b       	std	Z+17, r24	; 0x11
    4afe:	94 8b       	std	Z+20, r25	; 0x14
    4b00:	83 8b       	std	Z+19, r24	; 0x13
    4b02:	81 e0       	ldi	r24, 0x01	; 1
    4b04:	90 e0       	ldi	r25, 0x00	; 0
    4b06:	94 8f       	std	Z+28, r25	; 0x1c
    4b08:	83 8f       	std	Z+27, r24	; 0x1b
    4b0a:	eb 81       	ldd	r30, Y+3	; 0x03
    4b0c:	fc 81       	ldd	r31, Y+4	; 0x04
    4b0e:	81 89       	ldd	r24, Z+17	; 0x11
    4b10:	92 89       	ldd	r25, Z+18	; 0x12
    4b12:	00 97       	sbiw	r24, 0x00	; 0
    4b14:	21 f0       	breq	.+8      	; 0x4b1e <_nrk_scheduler+0x5f0>
    4b16:	80 17       	cp	r24, r16
    4b18:	91 07       	cpc	r25, r17
    4b1a:	08 f4       	brcc	.+2      	; 0x4b1e <_nrk_scheduler+0x5f0>
    4b1c:	8c 01       	movw	r16, r24
    4b1e:	08 94       	sec
    4b20:	c1 1c       	adc	r12, r1
    4b22:	d1 1c       	adc	r13, r1
    4b24:	28 e2       	ldi	r18, 0x28	; 40
    4b26:	30 e0       	ldi	r19, 0x00	; 0
    4b28:	a2 0e       	add	r10, r18
    4b2a:	b3 1e       	adc	r11, r19
    4b2c:	4b 81       	ldd	r20, Y+3	; 0x03
    4b2e:	5c 81       	ldd	r21, Y+4	; 0x04
    4b30:	48 5d       	subi	r20, 0xD8	; 216
    4b32:	5f 4f       	sbci	r21, 0xFF	; 255
    4b34:	5c 83       	std	Y+4, r21	; 0x04
    4b36:	4b 83       	std	Y+3, r20	; 0x03
    4b38:	59 e0       	ldi	r21, 0x09	; 9
    4b3a:	c5 16       	cp	r12, r21
    4b3c:	d1 04       	cpc	r13, r1
    4b3e:	09 f0       	breq	.+2      	; 0x4b42 <_nrk_scheduler+0x614>
    4b40:	b4 ce       	rjmp	.-664    	; 0x48aa <_nrk_scheduler+0x37c>
    4b42:	0e 94 1c 1c 	call	0x3838	; 0x3838 <nrk_get_high_ready_task_ID>
    4b46:	f8 2e       	mov	r15, r24
    4b48:	99 27       	eor	r25, r25
    4b4a:	87 fd       	sbrc	r24, 7
    4b4c:	90 95       	com	r25
    4b4e:	68 e2       	ldi	r22, 0x28	; 40
    4b50:	70 e0       	ldi	r23, 0x00	; 0
    4b52:	86 9f       	mul	r24, r22
    4b54:	f0 01       	movw	r30, r0
    4b56:	87 9f       	mul	r24, r23
    4b58:	f0 0d       	add	r31, r0
    4b5a:	96 9f       	mul	r25, r22
    4b5c:	f0 0d       	add	r31, r0
    4b5e:	11 24       	eor	r1, r1
    4b60:	ec 52       	subi	r30, 0x2C	; 44
    4b62:	f8 4f       	sbci	r31, 0xF8	; 248
    4b64:	83 85       	ldd	r24, Z+11	; 0x0b
    4b66:	99 27       	eor	r25, r25
    4b68:	aa 27       	eor	r26, r26
    4b6a:	bb 27       	eor	r27, r27
    4b6c:	20 91 06 06 	lds	r18, 0x0606
    4b70:	30 91 07 06 	lds	r19, 0x0607
    4b74:	40 91 08 06 	lds	r20, 0x0608
    4b78:	50 91 09 06 	lds	r21, 0x0609
    4b7c:	28 17       	cp	r18, r24
    4b7e:	39 07       	cpc	r19, r25
    4b80:	4a 07       	cpc	r20, r26
    4b82:	5b 07       	cpc	r21, r27
    4b84:	08 f0       	brcs	.+2      	; 0x4b88 <_nrk_scheduler+0x65a>
    4b86:	f8 2c       	mov	r15, r8
    4b88:	8f 2d       	mov	r24, r15
    4b8a:	99 27       	eor	r25, r25
    4b8c:	87 fd       	sbrc	r24, 7
    4b8e:	90 95       	com	r25
    4b90:	86 9f       	mul	r24, r22
    4b92:	f0 01       	movw	r30, r0
    4b94:	87 9f       	mul	r24, r23
    4b96:	f0 0d       	add	r31, r0
    4b98:	96 9f       	mul	r25, r22
    4b9a:	f0 0d       	add	r31, r0
    4b9c:	11 24       	eor	r1, r1
    4b9e:	ec 52       	subi	r30, 0x2C	; 44
    4ba0:	f8 4f       	sbci	r31, 0xF8	; 248
    4ba2:	82 85       	ldd	r24, Z+10	; 0x0a
    4ba4:	80 93 6c 09 	sts	0x096C, r24
    4ba8:	88 e2       	ldi	r24, 0x28	; 40
    4baa:	2f 2d       	mov	r18, r15
    4bac:	28 02       	muls	r18, r24
    4bae:	c0 01       	movw	r24, r0
    4bb0:	11 24       	eor	r1, r1
    4bb2:	8c 52       	subi	r24, 0x2C	; 44
    4bb4:	98 4f       	sbci	r25, 0xF8	; 248
    4bb6:	90 93 5c 09 	sts	0x095C, r25
    4bba:	80 93 5b 09 	sts	0x095B, r24
    4bbe:	ff 20       	and	r15, r15
    4bc0:	91 f0       	breq	.+36     	; 0x4be6 <_nrk_scheduler+0x6b8>
    4bc2:	86 8d       	ldd	r24, Z+30	; 0x1e
    4bc4:	97 8d       	ldd	r25, Z+31	; 0x1f
    4bc6:	89 2b       	or	r24, r25
    4bc8:	51 f0       	breq	.+20     	; 0x4bde <_nrk_scheduler+0x6b0>
    4bca:	82 8d       	ldd	r24, Z+26	; 0x1a
    4bcc:	93 8d       	ldd	r25, Z+27	; 0x1b
    4bce:	8a 3f       	cpi	r24, 0xFA	; 250
    4bd0:	91 05       	cpc	r25, r1
    4bd2:	28 f4       	brcc	.+10     	; 0x4bde <_nrk_scheduler+0x6b0>
    4bd4:	80 17       	cp	r24, r16
    4bd6:	91 07       	cpc	r25, r17
    4bd8:	e0 f4       	brcc	.+56     	; 0x4c12 <_nrk_scheduler+0x6e4>
    4bda:	8c 01       	movw	r16, r24
    4bdc:	1a c0       	rjmp	.+52     	; 0x4c12 <_nrk_scheduler+0x6e4>
    4bde:	0b 3f       	cpi	r16, 0xFB	; 251
    4be0:	11 05       	cpc	r17, r1
    4be2:	b8 f0       	brcs	.+46     	; 0x4c12 <_nrk_scheduler+0x6e4>
    4be4:	14 c0       	rjmp	.+40     	; 0x4c0e <_nrk_scheduler+0x6e0>
    4be6:	05 31       	cpi	r16, 0x15	; 21
    4be8:	11 05       	cpc	r17, r1
    4bea:	98 f0       	brcs	.+38     	; 0x4c12 <_nrk_scheduler+0x6e4>
    4bec:	c8 01       	movw	r24, r16
    4bee:	44 97       	sbiw	r24, 0x14	; 20
    4bf0:	8a 3f       	cpi	r24, 0xFA	; 250
    4bf2:	91 05       	cpc	r25, r1
    4bf4:	30 f4       	brcc	.+12     	; 0x4c02 <_nrk_scheduler+0x6d4>
    4bf6:	8c 01       	movw	r16, r24
    4bf8:	43 97       	sbiw	r24, 0x13	; 19
    4bfa:	58 f4       	brcc	.+22     	; 0x4c12 <_nrk_scheduler+0x6e4>
    4bfc:	03 e1       	ldi	r16, 0x13	; 19
    4bfe:	10 e0       	ldi	r17, 0x00	; 0
    4c00:	08 c0       	rjmp	.+16     	; 0x4c12 <_nrk_scheduler+0x6e4>
    4c02:	0f 50       	subi	r16, 0x0F	; 15
    4c04:	11 40       	sbci	r17, 0x01	; 1
    4c06:	18 f4       	brcc	.+6      	; 0x4c0e <_nrk_scheduler+0x6e0>
    4c08:	06 ee       	ldi	r16, 0xE6	; 230
    4c0a:	10 e0       	ldi	r17, 0x00	; 0
    4c0c:	02 c0       	rjmp	.+4      	; 0x4c12 <_nrk_scheduler+0x6e4>
    4c0e:	0a ef       	ldi	r16, 0xFA	; 250
    4c10:	10 e0       	ldi	r17, 0x00	; 0
    4c12:	80 91 6c 09 	lds	r24, 0x096C
    4c16:	80 93 5d 09 	sts	0x095D, r24
    4c1a:	80 91 5b 09 	lds	r24, 0x095B
    4c1e:	90 91 5c 09 	lds	r25, 0x095C
    4c22:	90 93 6b 09 	sts	0x096B, r25
    4c26:	80 93 6a 09 	sts	0x096A, r24
    4c2a:	00 93 11 07 	sts	0x0711, r16
    4c2e:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    4c32:	99 27       	eor	r25, r25
    4c34:	80 17       	cp	r24, r16
    4c36:	91 07       	cpc	r25, r17
    4c38:	40 f0       	brcs	.+16     	; 0x4c4a <_nrk_scheduler+0x71c>
    4c3a:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_nrk_os_timer_get>
    4c3e:	08 2f       	mov	r16, r24
    4c40:	11 27       	eor	r17, r17
    4c42:	0e 5f       	subi	r16, 0xFE	; 254
    4c44:	1f 4f       	sbci	r17, 0xFF	; 255
    4c46:	00 93 11 07 	sts	0x0711, r16
    4c4a:	ff 20       	and	r15, r15
    4c4c:	11 f0       	breq	.+4      	; 0x4c52 <_nrk_scheduler+0x724>
    4c4e:	10 92 5e 09 	sts	0x095E, r1
    4c52:	80 2f       	mov	r24, r16
    4c54:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <_nrk_set_next_wakeup>
    4c58:	6e ee       	ldi	r22, 0xEE	; 238
    4c5a:	72 e0       	ldi	r23, 0x02	; 2
    4c5c:	89 81       	ldd	r24, Y+1	; 0x01
    4c5e:	9a 81       	ldd	r25, Y+2	; 0x02
    4c60:	0e 94 7c 27 	call	0x4ef8	; 0x4ef8 <nrk_high_speed_timer_wait>
    4c64:	0e 94 6c 28 	call	0x50d8	; 0x50d8 <nrk_stack_pointer_restore>
    4c68:	0e 94 aa 28 	call	0x5154	; 0x5154 <nrk_start_high_ready_task>
    4c6c:	24 96       	adiw	r28, 0x04	; 4
    4c6e:	0f b6       	in	r0, 0x3f	; 63
    4c70:	f8 94       	cli
    4c72:	de bf       	out	0x3e, r29	; 62
    4c74:	0f be       	out	0x3f, r0	; 63
    4c76:	cd bf       	out	0x3d, r28	; 61
    4c78:	df 91       	pop	r29
    4c7a:	cf 91       	pop	r28
    4c7c:	1f 91       	pop	r17
    4c7e:	0f 91       	pop	r16
    4c80:	ff 90       	pop	r15
    4c82:	ef 90       	pop	r14
    4c84:	df 90       	pop	r13
    4c86:	cf 90       	pop	r12
    4c88:	bf 90       	pop	r11
    4c8a:	af 90       	pop	r10
    4c8c:	9f 90       	pop	r9
    4c8e:	8f 90       	pop	r8
    4c90:	7f 90       	pop	r7
    4c92:	6f 90       	pop	r6
    4c94:	5f 90       	pop	r5
    4c96:	4f 90       	pop	r4
    4c98:	3f 90       	pop	r3
    4c9a:	2f 90       	pop	r2
    4c9c:	08 95       	ret

00004c9e <nrk_spin_wait_us>:
	...
//	PARAMETERS:
//		UINT8 channel
//			The channel number (11-26)
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
    4ca6:	01 97       	sbiw	r24, 0x01	; 1
    4ca8:	d1 f7       	brne	.-12     	; 0x4c9e <nrk_spin_wait_us>
    4caa:	08 95       	ret

00004cac <_nrk_high_speed_timer_stop>:
    4cac:	1e bc       	out	0x2e, r1	; 46
    4cae:	08 95       	ret

00004cb0 <_nrk_high_speed_timer_start>:
    4cb0:	81 e0       	ldi	r24, 0x01	; 1
    4cb2:	8e bd       	out	0x2e, r24	; 46
    4cb4:	08 95       	ret

00004cb6 <_nrk_high_speed_timer_reset>:
    4cb6:	80 b5       	in	r24, 0x20	; 32
    4cb8:	81 60       	ori	r24, 0x01	; 1
    4cba:	80 bd       	out	0x20, r24	; 32
    4cbc:	1d bc       	out	0x2d, r1	; 45
    4cbe:	1c bc       	out	0x2c, r1	; 44
    4cc0:	08 95       	ret

00004cc2 <_nrk_high_speed_timer_get>:
    4cc2:	cf 93       	push	r28
    4cc4:	df 93       	push	r29
    4cc6:	cd b7       	in	r28, 0x3d	; 61
    4cc8:	de b7       	in	r29, 0x3e	; 62
    4cca:	22 97       	sbiw	r28, 0x02	; 2
    4ccc:	0f b6       	in	r0, 0x3f	; 63
    4cce:	f8 94       	cli
    4cd0:	de bf       	out	0x3e, r29	; 62
    4cd2:	0f be       	out	0x3f, r0	; 63
    4cd4:	cd bf       	out	0x3d, r28	; 61
    4cd6:	8c b5       	in	r24, 0x2c	; 44
    4cd8:	9d b5       	in	r25, 0x2d	; 45
    4cda:	9a 83       	std	Y+2, r25	; 0x02
    4cdc:	89 83       	std	Y+1, r24	; 0x01
    4cde:	89 81       	ldd	r24, Y+1	; 0x01
    4ce0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ce2:	22 96       	adiw	r28, 0x02	; 2
    4ce4:	0f b6       	in	r0, 0x3f	; 63
    4ce6:	f8 94       	cli
    4ce8:	de bf       	out	0x3e, r29	; 62
    4cea:	0f be       	out	0x3f, r0	; 63
    4cec:	cd bf       	out	0x3d, r28	; 61
    4cee:	df 91       	pop	r29
    4cf0:	cf 91       	pop	r28
    4cf2:	08 95       	ret

00004cf4 <_nrk_os_timer_set>:
    4cf4:	82 bf       	out	0x32, r24	; 50
    4cf6:	08 95       	ret

00004cf8 <_nrk_os_timer_stop>:
    4cf8:	13 be       	out	0x33, r1	; 51
    4cfa:	87 b7       	in	r24, 0x37	; 55
    4cfc:	8d 7f       	andi	r24, 0xFD	; 253
    4cfe:	87 bf       	out	0x37, r24	; 55
    4d00:	87 b7       	in	r24, 0x37	; 55
    4d02:	8e 7f       	andi	r24, 0xFE	; 254
    4d04:	87 bf       	out	0x37, r24	; 55
    4d06:	08 95       	ret

00004d08 <_nrk_os_timer_start>:
    4d08:	8b e0       	ldi	r24, 0x0B	; 11
    4d0a:	83 bf       	out	0x33, r24	; 51
    4d0c:	87 b7       	in	r24, 0x37	; 55
    4d0e:	83 60       	ori	r24, 0x03	; 3
    4d10:	87 bf       	out	0x37, r24	; 55
    4d12:	08 95       	ret

00004d14 <_nrk_os_timer_reset>:
    4d14:	80 b5       	in	r24, 0x20	; 32
    4d16:	82 60       	ori	r24, 0x02	; 2
    4d18:	80 bd       	out	0x20, r24	; 32
    4d1a:	12 be       	out	0x32, r1	; 50
    4d1c:	10 92 e1 05 	sts	0x05E1, r1
    4d20:	10 92 11 07 	sts	0x0711, r1
    4d24:	08 95       	ret

00004d26 <_nrk_get_next_wakeup>:
    4d26:	81 b7       	in	r24, 0x31	; 49
    4d28:	8f 5f       	subi	r24, 0xFF	; 255
    4d2a:	99 27       	eor	r25, r25
    4d2c:	08 95       	ret

00004d2e <_nrk_set_next_wakeup>:
    4d2e:	81 50       	subi	r24, 0x01	; 1
    4d30:	81 bf       	out	0x31, r24	; 49
    4d32:	08 95       	ret

00004d34 <_nrk_os_timer_get>:
    4d34:	82 b7       	in	r24, 0x32	; 50
    4d36:	99 27       	eor	r25, r25
    4d38:	08 95       	ret

00004d3a <__vector_15>:
    4d3a:	0f 92       	push	r0
    4d3c:	0f b6       	in	r0, 0x3f	; 63
    4d3e:	0f 92       	push	r0
    4d40:	1f 92       	push	r1
    4d42:	2f 92       	push	r2
    4d44:	3f 92       	push	r3
    4d46:	4f 92       	push	r4
    4d48:	5f 92       	push	r5
    4d4a:	6f 92       	push	r6
    4d4c:	7f 92       	push	r7
    4d4e:	8f 92       	push	r8
    4d50:	9f 92       	push	r9
    4d52:	af 92       	push	r10
    4d54:	bf 92       	push	r11
    4d56:	cf 92       	push	r12
    4d58:	df 92       	push	r13
    4d5a:	ef 92       	push	r14
    4d5c:	ff 92       	push	r15
    4d5e:	0f 93       	push	r16
    4d60:	1f 93       	push	r17
    4d62:	2f 93       	push	r18
    4d64:	3f 93       	push	r19
    4d66:	4f 93       	push	r20
    4d68:	5f 93       	push	r21
    4d6a:	6f 93       	push	r22
    4d6c:	7f 93       	push	r23
    4d6e:	8f 93       	push	r24
    4d70:	9f 93       	push	r25
    4d72:	af 93       	push	r26
    4d74:	bf 93       	push	r27
    4d76:	cf 93       	push	r28
    4d78:	df 93       	push	r29
    4d7a:	ef 93       	push	r30
    4d7c:	ff 93       	push	r31
    4d7e:	a0 91 6a 09 	lds	r26, 0x096A
    4d82:	b0 91 6b 09 	lds	r27, 0x096B
    4d86:	0d b6       	in	r0, 0x3d	; 61
    4d88:	0d 92       	st	X+, r0
    4d8a:	0e b6       	in	r0, 0x3e	; 62
    4d8c:	0d 92       	st	X+, r0
    4d8e:	1f 92       	push	r1
    4d90:	a0 91 0e 07 	lds	r26, 0x070E
    4d94:	b0 91 0f 07 	lds	r27, 0x070F
    4d98:	1e 90       	ld	r1, -X
    4d9a:	be bf       	out	0x3e, r27	; 62
    4d9c:	ad bf       	out	0x3d, r26	; 61
    4d9e:	08 95       	ret

00004da0 <nrk_timer_int_stop>:
    4da0:	88 23       	and	r24, r24
    4da2:	19 f4       	brne	.+6      	; 0x4daa <nrk_timer_int_stop+0xa>
    4da4:	87 b7       	in	r24, 0x37	; 55
    4da6:	8f 77       	andi	r24, 0x7F	; 127
    4da8:	87 bf       	out	0x37, r24	; 55
    4daa:	8f ef       	ldi	r24, 0xFF	; 255
    4dac:	9f ef       	ldi	r25, 0xFF	; 255
    4dae:	08 95       	ret

00004db0 <nrk_timer_int_reset>:
    4db0:	88 23       	and	r24, r24
    4db2:	19 f0       	breq	.+6      	; 0x4dba <nrk_timer_int_reset+0xa>
    4db4:	8f ef       	ldi	r24, 0xFF	; 255
    4db6:	9f ef       	ldi	r25, 0xFF	; 255
    4db8:	08 95       	ret
    4dba:	14 bc       	out	0x24, r1	; 36
    4dbc:	81 e0       	ldi	r24, 0x01	; 1
    4dbe:	90 e0       	ldi	r25, 0x00	; 0
    4dc0:	08 95       	ret

00004dc2 <nrk_timer_int_read>:
    4dc2:	88 23       	and	r24, r24
    4dc4:	19 f0       	breq	.+6      	; 0x4dcc <nrk_timer_int_read+0xa>
    4dc6:	80 e0       	ldi	r24, 0x00	; 0
    4dc8:	90 e0       	ldi	r25, 0x00	; 0
    4dca:	08 95       	ret
    4dcc:	84 b5       	in	r24, 0x24	; 36
    4dce:	99 27       	eor	r25, r25
    4dd0:	08 95       	ret

00004dd2 <nrk_timer_int_start>:
    4dd2:	88 23       	and	r24, r24
    4dd4:	19 f0       	breq	.+6      	; 0x4ddc <nrk_timer_int_start+0xa>
    4dd6:	8f ef       	ldi	r24, 0xFF	; 255
    4dd8:	9f ef       	ldi	r25, 0xFF	; 255
    4dda:	08 95       	ret
    4ddc:	87 b7       	in	r24, 0x37	; 55
    4dde:	80 68       	ori	r24, 0x80	; 128
    4de0:	87 bf       	out	0x37, r24	; 55
    4de2:	81 e0       	ldi	r24, 0x01	; 1
    4de4:	90 e0       	ldi	r25, 0x00	; 0
    4de6:	08 95       	ret

00004de8 <nrk_timer_int_configure>:
    4de8:	88 23       	and	r24, r24
    4dea:	19 f0       	breq	.+6      	; 0x4df2 <nrk_timer_int_configure+0xa>
    4dec:	8f ef       	ldi	r24, 0xFF	; 255
    4dee:	9f ef       	ldi	r25, 0xFF	; 255
    4df0:	08 95       	ret
    4df2:	cb 01       	movw	r24, r22
    4df4:	01 97       	sbiw	r24, 0x01	; 1
    4df6:	05 97       	sbiw	r24, 0x05	; 5
    4df8:	10 f4       	brcc	.+4      	; 0x4dfe <nrk_timer_int_configure+0x16>
    4dfa:	60 93 10 07 	sts	0x0710, r22
    4dfe:	88 e0       	ldi	r24, 0x08	; 8
    4e00:	85 bd       	out	0x25, r24	; 37
    4e02:	43 bd       	out	0x23, r20	; 35
    4e04:	30 93 df 05 	sts	0x05DF, r19
    4e08:	20 93 de 05 	sts	0x05DE, r18
    4e0c:	80 91 10 07 	lds	r24, 0x0710
    4e10:	81 30       	cpi	r24, 0x01	; 1
    4e12:	19 f4       	brne	.+6      	; 0x4e1a <nrk_timer_int_configure+0x32>
    4e14:	85 b5       	in	r24, 0x25	; 37
    4e16:	81 60       	ori	r24, 0x01	; 1
    4e18:	09 c0       	rjmp	.+18     	; 0x4e2c <nrk_timer_int_configure+0x44>
    4e1a:	82 30       	cpi	r24, 0x02	; 2
    4e1c:	19 f4       	brne	.+6      	; 0x4e24 <nrk_timer_int_configure+0x3c>
    4e1e:	85 b5       	in	r24, 0x25	; 37
    4e20:	82 60       	ori	r24, 0x02	; 2
    4e22:	04 c0       	rjmp	.+8      	; 0x4e2c <nrk_timer_int_configure+0x44>
    4e24:	83 30       	cpi	r24, 0x03	; 3
    4e26:	21 f4       	brne	.+8      	; 0x4e30 <nrk_timer_int_configure+0x48>
    4e28:	85 b5       	in	r24, 0x25	; 37
    4e2a:	83 60       	ori	r24, 0x03	; 3
    4e2c:	85 bd       	out	0x25, r24	; 37
    4e2e:	07 c0       	rjmp	.+14     	; 0x4e3e <nrk_timer_int_configure+0x56>
    4e30:	84 30       	cpi	r24, 0x04	; 4
    4e32:	19 f4       	brne	.+6      	; 0x4e3a <nrk_timer_int_configure+0x52>
    4e34:	85 b5       	in	r24, 0x25	; 37
    4e36:	84 60       	ori	r24, 0x04	; 4
    4e38:	f9 cf       	rjmp	.-14     	; 0x4e2c <nrk_timer_int_configure+0x44>
    4e3a:	85 30       	cpi	r24, 0x05	; 5
    4e3c:	19 f0       	breq	.+6      	; 0x4e44 <nrk_timer_int_configure+0x5c>
    4e3e:	81 e0       	ldi	r24, 0x01	; 1
    4e40:	90 e0       	ldi	r25, 0x00	; 0
    4e42:	08 95       	ret
    4e44:	85 b5       	in	r24, 0x25	; 37
    4e46:	85 60       	ori	r24, 0x05	; 5
    4e48:	85 bd       	out	0x25, r24	; 37
    4e4a:	81 e0       	ldi	r24, 0x01	; 1
    4e4c:	90 e0       	ldi	r25, 0x00	; 0
    4e4e:	08 95       	ret

00004e50 <__vector_9>:
    4e50:	1f 92       	push	r1
    4e52:	0f 92       	push	r0
    4e54:	0f b6       	in	r0, 0x3f	; 63
    4e56:	0f 92       	push	r0
    4e58:	11 24       	eor	r1, r1
    4e5a:	2f 93       	push	r18
    4e5c:	3f 93       	push	r19
    4e5e:	4f 93       	push	r20
    4e60:	5f 93       	push	r21
    4e62:	6f 93       	push	r22
    4e64:	7f 93       	push	r23
    4e66:	8f 93       	push	r24
    4e68:	9f 93       	push	r25
    4e6a:	af 93       	push	r26
    4e6c:	bf 93       	push	r27
    4e6e:	ef 93       	push	r30
    4e70:	ff 93       	push	r31
    4e72:	e0 91 de 05 	lds	r30, 0x05DE
    4e76:	f0 91 df 05 	lds	r31, 0x05DF
    4e7a:	30 97       	sbiw	r30, 0x00	; 0
    4e7c:	11 f0       	breq	.+4      	; 0x4e82 <__vector_9+0x32>
    4e7e:	09 95       	icall
    4e80:	04 c0       	rjmp	.+8      	; 0x4e8a <__vector_9+0x3a>
    4e82:	60 e0       	ldi	r22, 0x00	; 0
    4e84:	8a e0       	ldi	r24, 0x0A	; 10
    4e86:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    4e8a:	ff 91       	pop	r31
    4e8c:	ef 91       	pop	r30
    4e8e:	bf 91       	pop	r27
    4e90:	af 91       	pop	r26
    4e92:	9f 91       	pop	r25
    4e94:	8f 91       	pop	r24
    4e96:	7f 91       	pop	r23
    4e98:	6f 91       	pop	r22
    4e9a:	5f 91       	pop	r21
    4e9c:	4f 91       	pop	r20
    4e9e:	3f 91       	pop	r19
    4ea0:	2f 91       	pop	r18
    4ea2:	0f 90       	pop	r0
    4ea4:	0f be       	out	0x3f, r0	; 63
    4ea6:	0f 90       	pop	r0
    4ea8:	1f 90       	pop	r1
    4eaa:	18 95       	reti

00004eac <__vector_default>:
    4eac:	1f 92       	push	r1
    4eae:	0f 92       	push	r0
    4eb0:	0f b6       	in	r0, 0x3f	; 63
    4eb2:	0f 92       	push	r0
    4eb4:	11 24       	eor	r1, r1
    4eb6:	2f 93       	push	r18
    4eb8:	3f 93       	push	r19
    4eba:	4f 93       	push	r20
    4ebc:	5f 93       	push	r21
    4ebe:	6f 93       	push	r22
    4ec0:	7f 93       	push	r23
    4ec2:	8f 93       	push	r24
    4ec4:	9f 93       	push	r25
    4ec6:	af 93       	push	r26
    4ec8:	bf 93       	push	r27
    4eca:	ef 93       	push	r30
    4ecc:	ff 93       	push	r31
    4ece:	60 e0       	ldi	r22, 0x00	; 0
    4ed0:	8a e0       	ldi	r24, 0x0A	; 10
    4ed2:	0e 94 7c 17 	call	0x2ef8	; 0x2ef8 <nrk_kernel_error_add>
    4ed6:	ff 91       	pop	r31
    4ed8:	ef 91       	pop	r30
    4eda:	bf 91       	pop	r27
    4edc:	af 91       	pop	r26
    4ede:	9f 91       	pop	r25
    4ee0:	8f 91       	pop	r24
    4ee2:	7f 91       	pop	r23
    4ee4:	6f 91       	pop	r22
    4ee6:	5f 91       	pop	r21
    4ee8:	4f 91       	pop	r20
    4eea:	3f 91       	pop	r19
    4eec:	2f 91       	pop	r18
    4eee:	0f 90       	pop	r0
    4ef0:	0f be       	out	0x3f, r0	; 63
    4ef2:	0f 90       	pop	r0
    4ef4:	1f 90       	pop	r1
    4ef6:	18 95       	reti

00004ef8 <nrk_high_speed_timer_wait>:
    4ef8:	cf 93       	push	r28
    4efa:	df 93       	push	r29
    4efc:	cd b7       	in	r28, 0x3d	; 61
    4efe:	de b7       	in	r29, 0x3e	; 62
    4f00:	22 97       	sbiw	r28, 0x02	; 2
    4f02:	0f b6       	in	r0, 0x3f	; 63
    4f04:	f8 94       	cli
    4f06:	de bf       	out	0x3e, r29	; 62
    4f08:	0f be       	out	0x3f, r0	; 63
    4f0a:	cd bf       	out	0x3d, r28	; 61
    4f0c:	fc 01       	movw	r30, r24
    4f0e:	8f ef       	ldi	r24, 0xFF	; 255
    4f10:	e9 37       	cpi	r30, 0x79	; 121
    4f12:	f8 07       	cpc	r31, r24
    4f14:	10 f0       	brcs	.+4      	; 0x4f1a <nrk_high_speed_timer_wait+0x22>
    4f16:	e0 e0       	ldi	r30, 0x00	; 0
    4f18:	f0 e0       	ldi	r31, 0x00	; 0
    4f1a:	9f 01       	movw	r18, r30
    4f1c:	44 27       	eor	r20, r20
    4f1e:	55 27       	eor	r21, r21
    4f20:	cb 01       	movw	r24, r22
    4f22:	aa 27       	eor	r26, r26
    4f24:	bb 27       	eor	r27, r27
    4f26:	28 0f       	add	r18, r24
    4f28:	39 1f       	adc	r19, r25
    4f2a:	4a 1f       	adc	r20, r26
    4f2c:	5b 1f       	adc	r21, r27
    4f2e:	21 30       	cpi	r18, 0x01	; 1
    4f30:	80 e0       	ldi	r24, 0x00	; 0
    4f32:	38 07       	cpc	r19, r24
    4f34:	81 e0       	ldi	r24, 0x01	; 1
    4f36:	48 07       	cpc	r20, r24
    4f38:	80 e0       	ldi	r24, 0x00	; 0
    4f3a:	58 07       	cpc	r21, r24
    4f3c:	68 f0       	brcs	.+26     	; 0x4f58 <nrk_high_speed_timer_wait+0x60>
    4f3e:	8c b5       	in	r24, 0x2c	; 44
    4f40:	9d b5       	in	r25, 0x2d	; 45
    4f42:	9a 83       	std	Y+2, r25	; 0x02
    4f44:	89 83       	std	Y+1, r24	; 0x01
    4f46:	89 81       	ldd	r24, Y+1	; 0x01
    4f48:	9a 81       	ldd	r25, Y+2	; 0x02
    4f4a:	e8 17       	cp	r30, r24
    4f4c:	f9 07       	cpc	r31, r25
    4f4e:	b8 f3       	brcs	.-18     	; 0x4f3e <nrk_high_speed_timer_wait+0x46>
    4f50:	20 50       	subi	r18, 0x00	; 0
    4f52:	30 40       	sbci	r19, 0x00	; 0
    4f54:	41 40       	sbci	r20, 0x01	; 1
    4f56:	50 40       	sbci	r21, 0x00	; 0
    4f58:	8c b5       	in	r24, 0x2c	; 44
    4f5a:	9d b5       	in	r25, 0x2d	; 45
    4f5c:	9a 83       	std	Y+2, r25	; 0x02
    4f5e:	89 83       	std	Y+1, r24	; 0x01
    4f60:	89 81       	ldd	r24, Y+1	; 0x01
    4f62:	9a 81       	ldd	r25, Y+2	; 0x02
    4f64:	82 17       	cp	r24, r18
    4f66:	93 07       	cpc	r25, r19
    4f68:	b8 f3       	brcs	.-18     	; 0x4f58 <nrk_high_speed_timer_wait+0x60>
    4f6a:	22 96       	adiw	r28, 0x02	; 2
    4f6c:	0f b6       	in	r0, 0x3f	; 63
    4f6e:	f8 94       	cli
    4f70:	de bf       	out	0x3e, r29	; 62
    4f72:	0f be       	out	0x3f, r0	; 63
    4f74:	cd bf       	out	0x3d, r28	; 61
    4f76:	df 91       	pop	r29
    4f78:	cf 91       	pop	r28
    4f7a:	08 95       	ret

00004f7c <_nrk_setup_timer>:
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
    4f7c:	1f 93       	push	r17
	
    // Write it to the CC2420
    4f7e:	9e ef       	ldi	r25, 0xFE	; 254
    4f80:	90 93 11 07 	sts	0x0711, r25
	DISABLE_GLOBAL_INT();
	FASTSPI_SETREG(CC2420_FSCTRL, f);
	ENABLE_GLOBAL_INT();
    4f84:	88 e0       	ldi	r24, 0x08	; 8
    4f86:	80 bf       	out	0x30, r24	; 48

    4f88:	91 bf       	out	0x31, r25	; 49
} // rfSetChannel
    4f8a:	93 e0       	ldi	r25, 0x03	; 3
    4f8c:	96 bf       	out	0x36, r25	; 54


    4f8e:	1b e0       	ldi	r17, 0x0B	; 11
    4f90:	13 bf       	out	0x33, r17	; 51
    4f92:	80 b5       	in	r24, 0x20	; 32
    4f94:	87 60       	ori	r24, 0x07	; 7
    4f96:	80 bd       	out	0x20, r24	; 32
    4f98:	96 bf       	out	0x36, r25	; 54
    4f9a:	13 bf       	out	0x33, r17	; 51
    4f9c:	80 b5       	in	r24, 0x20	; 32
    4f9e:	87 60       	ori	r24, 0x07	; 7
    4fa0:	80 bd       	out	0x20, r24	; 32
    4fa2:	1f bc       	out	0x2f, r1	; 47
    4fa4:	81 e0       	ldi	r24, 0x01	; 1
    4fa6:	8e bd       	out	0x2e, r24	; 46
    4fa8:	1d bc       	out	0x2d, r1	; 45
    4faa:	1c bc       	out	0x2c, r1	; 44
    4fac:	80 b5       	in	r24, 0x20	; 32
    4fae:	81 60       	ori	r24, 0x01	; 1
    4fb0:	80 bd       	out	0x20, r24	; 32
    4fb2:	0e 94 8a 26 	call	0x4d14	; 0x4d14 <_nrk_os_timer_reset>
    4fb6:	13 bf       	out	0x33, r17	; 51
    4fb8:	87 b7       	in	r24, 0x37	; 55
    4fba:	83 60       	ori	r24, 0x03	; 3
    4fbc:	87 bf       	out	0x37, r24	; 55
    4fbe:	10 92 e1 05 	sts	0x05E1, r1
    4fc2:	1f 91       	pop	r17
    4fc4:	08 95       	ret

00004fc6 <_nrk_startup_ok>:



//-------------------------------------------------------------------------------------------------------
//	void halRfSetChannel(UINT8 Channel)
//
    4fc6:	83 b7       	in	r24, 0x33	; 51
    4fc8:	90 e0       	ldi	r25, 0x00	; 0
    4fca:	81 11       	cpse	r24, r1
    4fcc:	91 e0       	ldi	r25, 0x01	; 1
    4fce:	81 e0       	ldi	r24, 0x01	; 1
    4fd0:	98 27       	eor	r25, r24
//	DESCRIPTION:
//		Programs CC2420 for a given IEEE 802.15.4 channel. 
    4fd2:	89 2f       	mov	r24, r25
    4fd4:	99 27       	eor	r25, r25
    4fd6:	08 95       	ret

00004fd8 <nrk_watchdog_check>:
	DISABLE_GLOBAL_INT();
	FASTSPI_SETREG(CC2420_FSCTRL, f);
	ENABLE_GLOBAL_INT();

} // rfSetChannel

    4fd8:	04 b6       	in	r0, 0x34	; 52
    4fda:	03 fc       	sbrc	r0, 3
    4fdc:	03 c0       	rjmp	.+6      	; 0x4fe4 <nrk_watchdog_check+0xc>
    4fde:	81 e0       	ldi	r24, 0x01	; 1
    4fe0:	90 e0       	ldi	r25, 0x00	; 0
    4fe2:	08 95       	ret
    4fe4:	8f ef       	ldi	r24, 0xFF	; 255
    4fe6:	9f ef       	ldi	r25, 0xFF	; 255

    4fe8:	08 95       	ret

00004fea <nrk_watchdog_reset>:
    4fea:	a8 95       	wdr
    4fec:	08 95       	ret

00004fee <nrk_watchdog_disable>:
#include <ulib.h>



//-------------------------------------------------------------------------------------------------------
//	void halRfSetChannel(UINT8 Channel)
    4fee:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>

    4ff2:	a8 95       	wdr


//-------------------------------------------------------------------------------------------------------
//	void halRfSetChannel(UINT8 Channel)
//
//	DESCRIPTION:
    4ff4:	84 b7       	in	r24, 0x34	; 52
    4ff6:	87 7f       	andi	r24, 0xF7	; 247
    4ff8:	84 bf       	out	0x34, r24	; 52
//		Programs CC2420 for a given IEEE 802.15.4 channel. 
    4ffa:	81 b5       	in	r24, 0x21	; 33
    4ffc:	88 61       	ori	r24, 0x18	; 24
    4ffe:	81 bd       	out	0x21, r24	; 33
//		Note that SRXON, STXON or STXONCCA must be run for the new channel selection to take full effect.
    5000:	11 bc       	out	0x21, r1	; 33
//
    5002:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    5006:	08 95       	ret

00005008 <nrk_watchdog_enable>:
//		UINT8 channel
//			The channel number (11-26)
//-------------------------------------------------------------------------------------------------------
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
	
    5008:	0e 94 da 12 	call	0x25b4	; 0x25b4 <nrk_int_disable>
	// Derive frequency programming from the given channel number
    500c:	84 b7       	in	r24, 0x34	; 52
    500e:	87 7f       	andi	r24, 0xF7	; 247
    5010:	84 bf       	out	0x34, r24	; 52

    5012:	a8 95       	wdr
void halRfSetChannel(uint8_t channel) {
	uint16_t f;
	
	// Derive frequency programming from the given channel number
	f = (uint16_t) (channel - 11); // Subtract the base channel 
	f = f + (f << 2);    		 // Multiply with 5, which is the channel spacing
    5014:	81 b5       	in	r24, 0x21	; 33
    5016:	88 61       	ori	r24, 0x18	; 24
    5018:	81 bd       	out	0x21, r24	; 33
	f = f + 357 + 0x4000;		 // 357 is 2405-2048, 0x4000 is LOCK_THR = 1
    501a:	8f e0       	ldi	r24, 0x0F	; 15
    501c:	81 bd       	out	0x21, r24	; 33
	
    501e:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    5022:	08 95       	ret

00005024 <nrk_battery_save>:
    5024:	08 95       	ret

00005026 <nrk_task_set_entry_function>:
    5026:	fc 01       	movw	r30, r24
    5028:	76 83       	std	Z+6, r23	; 0x06
    502a:	65 83       	std	Z+5, r22	; 0x05
    502c:	08 95       	ret

0000502e <nrk_sleep>:
    502e:	85 b7       	in	r24, 0x35	; 53
    5030:	83 7e       	andi	r24, 0xE3	; 227
    5032:	88 61       	ori	r24, 0x18	; 24
    5034:	85 bf       	out	0x35, r24	; 53
    5036:	85 b7       	in	r24, 0x35	; 53
    5038:	80 62       	ori	r24, 0x20	; 32
    503a:	85 bf       	out	0x35, r24	; 53
    503c:	88 95       	sleep
    503e:	85 b7       	in	r24, 0x35	; 53
    5040:	8f 7d       	andi	r24, 0xDF	; 223
    5042:	85 bf       	out	0x35, r24	; 53
    5044:	08 95       	ret

00005046 <nrk_idle>:
    5046:	85 b7       	in	r24, 0x35	; 53
    5048:	83 7e       	andi	r24, 0xE3	; 227
    504a:	85 bf       	out	0x35, r24	; 53
    504c:	85 b7       	in	r24, 0x35	; 53
    504e:	80 62       	ori	r24, 0x20	; 32
    5050:	85 bf       	out	0x35, r24	; 53
    5052:	88 95       	sleep
    5054:	85 b7       	in	r24, 0x35	; 53
    5056:	8f 7d       	andi	r24, 0xDF	; 223
    5058:	85 bf       	out	0x35, r24	; 53
    505a:	08 95       	ret

0000505c <nrk_task_stk_init>:
    505c:	fb 01       	movw	r30, r22
    505e:	da 01       	movw	r26, r20
    5060:	25 e5       	ldi	r18, 0x55	; 85
    5062:	2c 93       	st	X, r18
    5064:	32 97       	sbiw	r30, 0x02	; 2
    5066:	29 2f       	mov	r18, r25
    5068:	33 27       	eor	r19, r19
    506a:	20 83       	st	Z, r18
    506c:	81 83       	std	Z+1, r24	; 0x01
    506e:	32 97       	sbiw	r30, 0x02	; 2
    5070:	11 82       	std	Z+1, r1	; 0x01
    5072:	10 82       	st	Z, r1
    5074:	32 97       	sbiw	r30, 0x02	; 2
    5076:	11 82       	std	Z+1, r1	; 0x01
    5078:	10 82       	st	Z, r1
    507a:	32 97       	sbiw	r30, 0x02	; 2
    507c:	11 82       	std	Z+1, r1	; 0x01
    507e:	10 82       	st	Z, r1
    5080:	32 97       	sbiw	r30, 0x02	; 2
    5082:	11 82       	std	Z+1, r1	; 0x01
    5084:	10 82       	st	Z, r1
    5086:	32 97       	sbiw	r30, 0x02	; 2
    5088:	11 82       	std	Z+1, r1	; 0x01
    508a:	10 82       	st	Z, r1
    508c:	32 97       	sbiw	r30, 0x02	; 2
    508e:	11 82       	std	Z+1, r1	; 0x01
    5090:	10 82       	st	Z, r1
    5092:	32 97       	sbiw	r30, 0x02	; 2
    5094:	11 82       	std	Z+1, r1	; 0x01
    5096:	10 82       	st	Z, r1
    5098:	32 97       	sbiw	r30, 0x02	; 2
    509a:	11 82       	std	Z+1, r1	; 0x01
    509c:	10 82       	st	Z, r1
    509e:	32 97       	sbiw	r30, 0x02	; 2
    50a0:	11 82       	std	Z+1, r1	; 0x01
    50a2:	10 82       	st	Z, r1
    50a4:	32 97       	sbiw	r30, 0x02	; 2
    50a6:	11 82       	std	Z+1, r1	; 0x01
    50a8:	10 82       	st	Z, r1
    50aa:	32 97       	sbiw	r30, 0x02	; 2
    50ac:	11 82       	std	Z+1, r1	; 0x01
    50ae:	10 82       	st	Z, r1
    50b0:	32 97       	sbiw	r30, 0x02	; 2
    50b2:	11 82       	std	Z+1, r1	; 0x01
    50b4:	10 82       	st	Z, r1
    50b6:	32 97       	sbiw	r30, 0x02	; 2
    50b8:	11 82       	std	Z+1, r1	; 0x01
    50ba:	10 82       	st	Z, r1
    50bc:	32 97       	sbiw	r30, 0x02	; 2
    50be:	11 82       	std	Z+1, r1	; 0x01
    50c0:	10 82       	st	Z, r1
    50c2:	32 97       	sbiw	r30, 0x02	; 2
    50c4:	11 82       	std	Z+1, r1	; 0x01
    50c6:	10 82       	st	Z, r1
    50c8:	32 97       	sbiw	r30, 0x02	; 2
    50ca:	11 82       	std	Z+1, r1	; 0x01
    50cc:	10 82       	st	Z, r1
    50ce:	32 97       	sbiw	r30, 0x02	; 2
    50d0:	11 82       	std	Z+1, r1	; 0x01
    50d2:	10 82       	st	Z, r1
    50d4:	cf 01       	movw	r24, r30
    50d6:	08 95       	ret

000050d8 <nrk_stack_pointer_restore>:
    50d8:	21 ee       	ldi	r18, 0xE1	; 225
    50da:	32 e1       	ldi	r19, 0x12	; 18
    50dc:	83 2f       	mov	r24, r19
    50de:	99 27       	eor	r25, r25
    50e0:	80 93 fe 10 	sts	0x10FE, r24
    50e4:	20 93 ff 10 	sts	0x10FF, r18
    50e8:	08 95       	ret

000050ea <nrk_stack_pointer_init>:
    50ea:	85 e5       	ldi	r24, 0x55	; 85
    50ec:	80 93 7e 10 	sts	0x107E, r24
    50f0:	ee ef       	ldi	r30, 0xFE	; 254
    50f2:	f0 e1       	ldi	r31, 0x10	; 16
    50f4:	f0 93 0f 07 	sts	0x070F, r31
    50f8:	e0 93 0e 07 	sts	0x070E, r30
    50fc:	21 ee       	ldi	r18, 0xE1	; 225
    50fe:	32 e1       	ldi	r19, 0x12	; 18
    5100:	83 2f       	mov	r24, r19
    5102:	99 27       	eor	r25, r25
    5104:	80 83       	st	Z, r24
    5106:	20 93 ff 10 	sts	0x10FF, r18
    510a:	08 95       	ret

0000510c <nrk_target_start>:
    510c:	0e 94 be 27 	call	0x4f7c	; 0x4f7c <_nrk_setup_timer>
    5110:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <nrk_int_enable>
    5114:	08 95       	ret

00005116 <nrk_task_set_stk>:
    5116:	ef 92       	push	r14
    5118:	ff 92       	push	r15
    511a:	0f 93       	push	r16
    511c:	1f 93       	push	r17
    511e:	cf 93       	push	r28
    5120:	df 93       	push	r29
    5122:	7c 01       	movw	r14, r24
    5124:	8b 01       	movw	r16, r22
    5126:	ea 01       	movw	r28, r20
    5128:	40 32       	cpi	r20, 0x20	; 32
    512a:	51 05       	cpc	r21, r1
    512c:	18 f4       	brcc	.+6      	; 0x5134 <nrk_task_set_stk+0x1e>
    512e:	81 e1       	ldi	r24, 0x11	; 17
    5130:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <nrk_error_add>
    5134:	c8 01       	movw	r24, r16
    5136:	01 97       	sbiw	r24, 0x01	; 1
    5138:	8c 0f       	add	r24, r28
    513a:	9d 1f       	adc	r25, r29
    513c:	f7 01       	movw	r30, r14
    513e:	92 83       	std	Z+2, r25	; 0x02
    5140:	81 83       	std	Z+1, r24	; 0x01
    5142:	14 83       	std	Z+4, r17	; 0x04
    5144:	03 83       	std	Z+3, r16	; 0x03
    5146:	df 91       	pop	r29
    5148:	cf 91       	pop	r28
    514a:	1f 91       	pop	r17
    514c:	0f 91       	pop	r16
    514e:	ff 90       	pop	r15
    5150:	ef 90       	pop	r14
    5152:	08 95       	ret

00005154 <nrk_start_high_ready_task>:

.global nrk_start_high_ready_task 

nrk_start_high_ready_task:

	lds r26,nrk_high_ready_TCB		
    5154:	a0 91 5b 09 	lds	r26, 0x095B
	lds r27,nrk_high_ready_TCB+1
    5158:	b0 91 5c 09 	lds	r27, 0x095C

    	;x points to &OSTCB[x]
    
	ld r28,x+
    515c:	cd 91       	ld	r28, X+
	out __SP_L__, r28
    515e:	cd bf       	out	0x3d, r28	; 61
	ld r29,x+
    5160:	dd 91       	ld	r29, X+
	out __SP_H__, r29
    5162:	de bf       	out	0x3e, r29	; 62
  
	pop r31	
    5164:	ff 91       	pop	r31
	pop r30
    5166:	ef 91       	pop	r30
	pop r29
    5168:	df 91       	pop	r29
	pop r28
    516a:	cf 91       	pop	r28
	pop r27
    516c:	bf 91       	pop	r27
	pop r26
    516e:	af 91       	pop	r26
	pop r25
    5170:	9f 91       	pop	r25
	pop r24			
    5172:	8f 91       	pop	r24
	pop r23
    5174:	7f 91       	pop	r23
	pop r22
    5176:	6f 91       	pop	r22
	pop r21
    5178:	5f 91       	pop	r21
	pop r20	
    517a:	4f 91       	pop	r20
	pop r19
    517c:	3f 91       	pop	r19
	pop r18	
    517e:	2f 91       	pop	r18
	pop r17
    5180:	1f 91       	pop	r17
	pop r16
    5182:	0f 91       	pop	r16
	pop r15
    5184:	ff 90       	pop	r15
	pop r14
    5186:	ef 90       	pop	r14
	pop r13
    5188:	df 90       	pop	r13
	pop r12
    518a:	cf 90       	pop	r12
	pop r11
    518c:	bf 90       	pop	r11
	pop r10
    518e:	af 90       	pop	r10
	pop r9
    5190:	9f 90       	pop	r9
	pop r8
    5192:	8f 90       	pop	r8
	pop r7
    5194:	7f 90       	pop	r7
	pop r6
    5196:	6f 90       	pop	r6
	pop r5
    5198:	5f 90       	pop	r5
	pop r4
    519a:	4f 90       	pop	r4
	pop r3
    519c:	3f 90       	pop	r3
	pop r2
    519e:	2f 90       	pop	r2
	pop r1
    51a0:	1f 90       	pop	r1
	pop r0
    51a2:	0f 90       	pop	r0
	out __SREG__, r0
    51a4:	0f be       	out	0x3f, r0	; 63
	pop r0	
    51a6:	0f 90       	pop	r0
	   
    	reti 
    51a8:	18 95       	reti

000051aa <vfprintf>:
#define FL_ALTLWR	0x20
#define FL_NEGATIVE	0x40
#define FL_LONG 	0x80

int vfprintf (FILE * stream, const char *fmt, va_list ap)
{
    51aa:	ab e0       	ldi	r26, 0x0B	; 11
    51ac:	b0 e0       	ldi	r27, 0x00	; 0
    51ae:	eb ed       	ldi	r30, 0xDB	; 219
    51b0:	f8 e2       	ldi	r31, 0x28	; 40
    51b2:	0c 94 ce 2c 	jmp	0x599c	; 0x599c <__prologue_saves__>
    51b6:	4c 01       	movw	r8, r24
    51b8:	6b 01       	movw	r12, r22
    51ba:	7a 01       	movw	r14, r20
    unsigned char c;		/* holds a char from the format string */
    unsigned char flags;
    unsigned char buf[11];	/* size for -1 in octal, without '\0'	*/

    stream->len = 0;
    51bc:	fc 01       	movw	r30, r24
    51be:	17 82       	std	Z+7, r1	; 0x07
    51c0:	16 82       	std	Z+6, r1	; 0x06

    if ((stream->flags & __SWR) == 0)
    51c2:	83 81       	ldd	r24, Z+3	; 0x03
    51c4:	81 fd       	sbrc	r24, 1
    51c6:	08 c0       	rjmp	.+16     	; 0x51d8 <vfprintf+0x2e>
    51c8:	8f ef       	ldi	r24, 0xFF	; 255
    51ca:	9f ef       	ldi	r25, 0xFF	; 255
    51cc:	1a c1       	rjmp	.+564    	; 0x5402 <vfprintf+0x258>
	      case 'S':
		flags |= FL_PGMSTRING;
		/* FALLTHROUGH */

	      case 's':
		pnt = va_arg (ap, char *);
    51ce:	22 e0       	ldi	r18, 0x02	; 2
    51d0:	30 e0       	ldi	r19, 0x00	; 0
    51d2:	e2 0e       	add	r14, r18
    51d4:	f3 1e       	adc	r15, r19
    51d6:	0c c0       	rjmp	.+24     	; 0x51f0 <vfprintf+0x46>
	for (;;) {
	    c = GETBYTE (stream->flags, __SPGM, fmt);
	    if (!c) goto ret;
	    if (c == '%') {
		c = GETBYTE (stream->flags, __SPGM, fmt);
		if (c != '%') break;
    51d8:	9e e8       	ldi	r25, 0x8E	; 142
    51da:	29 2e       	mov	r2, r25
    51dc:	92 e0       	ldi	r25, 0x02	; 2
    51de:	39 2e       	mov	r3, r25
# error
#endif
		putc ('X' + (flags & FL_ALTLWR), stream);
	}
	do {
	    putc (buf[--c], stream);
    51e0:	3e 01       	movw	r6, r28
    51e2:	08 94       	sec
    51e4:	61 1c       	adc	r6, r1
    51e6:	71 1c       	adc	r7, r1
    51e8:	87 e8       	ldi	r24, 0x87	; 135
    51ea:	48 2e       	mov	r4, r24
    51ec:	82 e0       	ldi	r24, 0x02	; 2
    51ee:	58 2e       	mov	r5, r24
	return EOF;

    for (;;) {

	for (;;) {
	    c = GETBYTE (stream->flags, __SPGM, fmt);
    51f0:	f4 01       	movw	r30, r8
    51f2:	03 81       	ldd	r16, Z+3	; 0x03
    51f4:	f6 01       	movw	r30, r12
    51f6:	03 fd       	sbrc	r16, 3
    51f8:	85 91       	lpm	r24, Z+
    51fa:	03 ff       	sbrs	r16, 3
    51fc:	81 91       	ld	r24, Z+
    51fe:	6f 01       	movw	r12, r30
	    if (!c) goto ret;
    5200:	88 23       	and	r24, r24
    5202:	09 f4       	brne	.+2      	; 0x5206 <vfprintf+0x5c>
    5204:	fb c0       	rjmp	.+502    	; 0x53fc <vfprintf+0x252>
	    if (c == '%') {
    5206:	85 32       	cpi	r24, 0x25	; 37
    5208:	59 f4       	brne	.+22     	; 0x5220 <vfprintf+0x76>
		c = GETBYTE (stream->flags, __SPGM, fmt);
    520a:	03 fd       	sbrc	r16, 3
    520c:	65 91       	lpm	r22, Z+
    520e:	03 ff       	sbrs	r16, 3
    5210:	61 91       	ld	r22, Z+
    5212:	6f 01       	movw	r12, r30
		if (c != '%') break;
    5214:	65 32       	cpi	r22, 0x25	; 37
    5216:	19 f0       	breq	.+6      	; 0x521e <vfprintf+0x74>
    5218:	16 2f       	mov	r17, r22
    521a:	bb 24       	eor	r11, r11
    521c:	1c c0       	rjmp	.+56     	; 0x5256 <vfprintf+0xac>
    521e:	85 e2       	ldi	r24, 0x25	; 37
	    }
	    putc (c, stream);
    5220:	b4 01       	movw	r22, r8
    5222:	99 27       	eor	r25, r25
    5224:	2a c0       	rjmp	.+84     	; 0x527a <vfprintf+0xd0>

	for (flags = 0;
	     !(flags & FL_LONG);	/* 'll' will detect as error	*/
	     c = GETBYTE (stream->flags, __SPGM, fmt))
	{
	    if (c && strchr_P (PSTR(" +-.0123456789h"), c))
    5226:	11 23       	and	r17, r17
    5228:	59 f1       	breq	.+86     	; 0x5280 <vfprintf+0xd6>
    522a:	61 2f       	mov	r22, r17
    522c:	77 27       	eor	r23, r23
    522e:	c1 01       	movw	r24, r2
    5230:	0e 94 05 2a 	call	0x540a	; 0x540a <strchr_P>
    5234:	89 2b       	or	r24, r25
    5236:	49 f4       	brne	.+18     	; 0x524a <vfprintf+0xa0>
		continue;
	    if (c == '#') {
    5238:	13 32       	cpi	r17, 0x23	; 35
    523a:	19 f4       	brne	.+6      	; 0x5242 <vfprintf+0x98>
		flags |= FL_ALT;
    523c:	f0 e1       	ldi	r31, 0x10	; 16
    523e:	bf 2a       	or	r11, r31
    5240:	04 c0       	rjmp	.+8      	; 0x524a <vfprintf+0xa0>
		continue;
	    }
	    if (c == 'l') {
    5242:	1c 36       	cpi	r17, 0x6C	; 108
    5244:	61 f4       	brne	.+24     	; 0x525e <vfprintf+0xb4>
		flags |= FL_LONG;
    5246:	20 e8       	ldi	r18, 0x80	; 128
    5248:	b2 2a       	or	r11, r18
	    putc (c, stream);
	}

	for (flags = 0;
	     !(flags & FL_LONG);	/* 'll' will detect as error	*/
	     c = GETBYTE (stream->flags, __SPGM, fmt))
    524a:	f6 01       	movw	r30, r12
    524c:	03 fd       	sbrc	r16, 3
    524e:	15 91       	lpm	r17, Z+
    5250:	03 ff       	sbrs	r16, 3
    5252:	11 91       	ld	r17, Z+
    5254:	6f 01       	movw	r12, r30
	    }
	    putc (c, stream);
	}

	for (flags = 0;
	     !(flags & FL_LONG);	/* 'll' will detect as error	*/
    5256:	b7 fe       	sbrs	r11, 7
    5258:	e6 cf       	rjmp	.-52     	; 0x5226 <vfprintf+0x7c>
	    break;
	}

	/* Only a format character is valid.	*/

	if (c && strchr_P (PSTR("EFGefg"), c)) {
    525a:	11 23       	and	r17, r17
    525c:	89 f0       	breq	.+34     	; 0x5280 <vfprintf+0xd6>
    525e:	61 2f       	mov	r22, r17
    5260:	77 27       	eor	r23, r23
    5262:	c2 01       	movw	r24, r4
    5264:	0e 94 05 2a 	call	0x540a	; 0x540a <strchr_P>
    5268:	89 2b       	or	r24, r25
    526a:	51 f0       	breq	.+20     	; 0x5280 <vfprintf+0xd6>
	    (void) va_arg (ap, double);
    526c:	24 e0       	ldi	r18, 0x04	; 4
    526e:	30 e0       	ldi	r19, 0x00	; 0
    5270:	e2 0e       	add	r14, r18
    5272:	f3 1e       	adc	r15, r19
	    putc ('?', stream);
    5274:	b4 01       	movw	r22, r8
    5276:	8f e3       	ldi	r24, 0x3F	; 63
    5278:	90 e0       	ldi	r25, 0x00	; 0
    527a:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
    527e:	b8 cf       	rjmp	.-144    	; 0x51f0 <vfprintf+0x46>
	}

	{
	    const char * pnt;

	    switch (c) {
    5280:	13 36       	cpi	r17, 0x63	; 99
    5282:	29 f0       	breq	.+10     	; 0x528e <vfprintf+0xe4>
    5284:	13 37       	cpi	r17, 0x73	; 115
    5286:	81 f0       	breq	.+32     	; 0x52a8 <vfprintf+0xfe>
    5288:	13 35       	cpi	r17, 0x53	; 83
    528a:	f9 f4       	brne	.+62     	; 0x52ca <vfprintf+0x120>
    528c:	0b c0       	rjmp	.+22     	; 0x52a4 <vfprintf+0xfa>

	      case 'c':
		putc (va_arg (ap, int), stream);
    528e:	87 01       	movw	r16, r14
    5290:	0e 5f       	subi	r16, 0xFE	; 254
    5292:	1f 4f       	sbci	r17, 0xFF	; 255
    5294:	b4 01       	movw	r22, r8
    5296:	f7 01       	movw	r30, r14
    5298:	80 81       	ld	r24, Z
    529a:	91 81       	ldd	r25, Z+1	; 0x01
    529c:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
    52a0:	78 01       	movw	r14, r16
    52a2:	a6 cf       	rjmp	.-180    	; 0x51f0 <vfprintf+0x46>
		continue;

	      case 'S':
		flags |= FL_PGMSTRING;
    52a4:	f1 e0       	ldi	r31, 0x01	; 1
    52a6:	bf 2a       	or	r11, r31
		/* FALLTHROUGH */

	      case 's':
		pnt = va_arg (ap, char *);
    52a8:	f7 01       	movw	r30, r14
    52aa:	00 81       	ld	r16, Z
    52ac:	11 81       	ldd	r17, Z+1	; 0x01
    52ae:	04 c0       	rjmp	.+8      	; 0x52b8 <vfprintf+0x10e>
	        while ( (c = GETBYTE (flags, FL_PGMSTRING, pnt)) != 0)
		    putc (c, stream);
    52b0:	b4 01       	movw	r22, r8
    52b2:	99 27       	eor	r25, r25
    52b4:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
		flags |= FL_PGMSTRING;
		/* FALLTHROUGH */

	      case 's':
		pnt = va_arg (ap, char *);
	        while ( (c = GETBYTE (flags, FL_PGMSTRING, pnt)) != 0)
    52b8:	f8 01       	movw	r30, r16
    52ba:	b0 fc       	sbrc	r11, 0
    52bc:	85 91       	lpm	r24, Z+
    52be:	b0 fe       	sbrs	r11, 0
    52c0:	81 91       	ld	r24, Z+
    52c2:	8f 01       	movw	r16, r30
    52c4:	88 23       	and	r24, r24
    52c6:	a1 f7       	brne	.-24     	; 0x52b0 <vfprintf+0x106>
    52c8:	82 cf       	rjmp	.-252    	; 0x51ce <vfprintf+0x24>
		    putc (c, stream);
		continue;
	    }
	}

	if (c == 'd' || c == 'i') {
    52ca:	14 36       	cpi	r17, 0x64	; 100
    52cc:	11 f0       	breq	.+4      	; 0x52d2 <vfprintf+0x128>
    52ce:	19 36       	cpi	r17, 0x69	; 105
    52d0:	49 f5       	brne	.+82     	; 0x5324 <vfprintf+0x17a>
	    long x = (flags & FL_LONG) ? va_arg(ap,long) : va_arg(ap,int);
    52d2:	b7 fe       	sbrs	r11, 7
    52d4:	0a c0       	rjmp	.+20     	; 0x52ea <vfprintf+0x140>
    52d6:	f7 01       	movw	r30, r14
    52d8:	60 81       	ld	r22, Z
    52da:	71 81       	ldd	r23, Z+1	; 0x01
    52dc:	82 81       	ldd	r24, Z+2	; 0x02
    52de:	93 81       	ldd	r25, Z+3	; 0x03
    52e0:	24 e0       	ldi	r18, 0x04	; 4
    52e2:	30 e0       	ldi	r19, 0x00	; 0
    52e4:	e2 0e       	add	r14, r18
    52e6:	f3 1e       	adc	r15, r19
    52e8:	0d c0       	rjmp	.+26     	; 0x5304 <vfprintf+0x15a>
    52ea:	f7 01       	movw	r30, r14
    52ec:	80 81       	ld	r24, Z
    52ee:	91 81       	ldd	r25, Z+1	; 0x01
    52f0:	9c 01       	movw	r18, r24
    52f2:	b9 01       	movw	r22, r18
    52f4:	88 27       	eor	r24, r24
    52f6:	77 fd       	sbrc	r23, 7
    52f8:	80 95       	com	r24
    52fa:	98 2f       	mov	r25, r24
    52fc:	42 e0       	ldi	r20, 0x02	; 2
    52fe:	50 e0       	ldi	r21, 0x00	; 0
    5300:	e4 0e       	add	r14, r20
    5302:	f5 1e       	adc	r15, r21
	    flags &= ~FL_ALT;
    5304:	5f ee       	ldi	r21, 0xEF	; 239
    5306:	b5 22       	and	r11, r21
	    if (x < 0) {
    5308:	97 ff       	sbrs	r25, 7
    530a:	09 c0       	rjmp	.+18     	; 0x531e <vfprintf+0x174>
		x = -x;
    530c:	90 95       	com	r25
    530e:	80 95       	com	r24
    5310:	70 95       	com	r23
    5312:	61 95       	neg	r22
    5314:	7f 4f       	sbci	r23, 0xFF	; 255
    5316:	8f 4f       	sbci	r24, 0xFF	; 255
    5318:	9f 4f       	sbci	r25, 0xFF	; 255
		/* `putc ('-', stream)' will considarably inlarge stack size.
		   So flag is used.	*/
		flags |= FL_NEGATIVE;
    531a:	e0 e4       	ldi	r30, 0x40	; 64
    531c:	be 2a       	or	r11, r30
	    }
	    c = __ultoa_invert (x, (char *)buf, 10) - (char *)buf;
    531e:	2a e0       	ldi	r18, 0x0A	; 10
    5320:	30 e0       	ldi	r19, 0x00	; 0
    5322:	3a c0       	rjmp	.+116    	; 0x5398 <vfprintf+0x1ee>

	} else {
	    int base;

	    switch (c) {
    5324:	10 37       	cpi	r17, 0x70	; 112
    5326:	b1 f0       	breq	.+44     	; 0x5354 <vfprintf+0x1aa>
    5328:	11 37       	cpi	r17, 0x71	; 113
    532a:	30 f4       	brcc	.+12     	; 0x5338 <vfprintf+0x18e>
    532c:	18 35       	cpi	r17, 0x58	; 88
    532e:	c9 f0       	breq	.+50     	; 0x5362 <vfprintf+0x1b8>
    5330:	1f 36       	cpi	r17, 0x6F	; 111
    5332:	09 f0       	breq	.+2      	; 0x5336 <vfprintf+0x18c>
    5334:	63 c0       	rjmp	.+198    	; 0x53fc <vfprintf+0x252>
    5336:	06 c0       	rjmp	.+12     	; 0x5344 <vfprintf+0x19a>
    5338:	15 37       	cpi	r17, 0x75	; 117
    533a:	39 f0       	breq	.+14     	; 0x534a <vfprintf+0x1a0>
    533c:	18 37       	cpi	r17, 0x78	; 120
    533e:	09 f0       	breq	.+2      	; 0x5342 <vfprintf+0x198>
    5340:	5d c0       	rjmp	.+186    	; 0x53fc <vfprintf+0x252>
    5342:	0a c0       	rjmp	.+20     	; 0x5358 <vfprintf+0x1ae>
    5344:	28 e0       	ldi	r18, 0x08	; 8
    5346:	30 e0       	ldi	r19, 0x00	; 0
    5348:	10 c0       	rjmp	.+32     	; 0x536a <vfprintf+0x1c0>
	      case 'u':
		flags &= ~FL_ALT;
    534a:	ff ee       	ldi	r31, 0xEF	; 239
    534c:	bf 22       	and	r11, r31
    534e:	2a e0       	ldi	r18, 0x0A	; 10
    5350:	30 e0       	ldi	r19, 0x00	; 0
    5352:	0b c0       	rjmp	.+22     	; 0x536a <vfprintf+0x1c0>
		goto ultoa;
	      case 'o':
	        base = 8;
		goto ultoa;
	      case 'p':
	        flags |= FL_ALT;
    5354:	20 e1       	ldi	r18, 0x10	; 16
    5356:	b2 2a       	or	r11, r18
		/* no break */
	      case 'x':
		flags |= (FL_ALTHEX | FL_ALTLWR);
    5358:	34 e2       	ldi	r19, 0x24	; 36
    535a:	b3 2a       	or	r11, r19
    535c:	20 e1       	ldi	r18, 0x10	; 16
    535e:	30 e0       	ldi	r19, 0x00	; 0
    5360:	04 c0       	rjmp	.+8      	; 0x536a <vfprintf+0x1c0>
	        base = 16;
		goto ultoa;
	      case 'X':
		flags |= FL_ALTHEX;
    5362:	44 e0       	ldi	r20, 0x04	; 4
    5364:	b4 2a       	or	r11, r20
    5366:	20 e1       	ldi	r18, 0x10	; 16
    5368:	32 e0       	ldi	r19, 0x02	; 2
	        base = 16 | XTOA_UPPER;
	      ultoa:
		c = __ultoa_invert ((flags & FL_LONG)
    536a:	b7 fe       	sbrs	r11, 7
    536c:	0a c0       	rjmp	.+20     	; 0x5382 <vfprintf+0x1d8>
    536e:	f7 01       	movw	r30, r14
    5370:	60 81       	ld	r22, Z
    5372:	71 81       	ldd	r23, Z+1	; 0x01
    5374:	82 81       	ldd	r24, Z+2	; 0x02
    5376:	93 81       	ldd	r25, Z+3	; 0x03
    5378:	44 e0       	ldi	r20, 0x04	; 4
    537a:	50 e0       	ldi	r21, 0x00	; 0
    537c:	e4 0e       	add	r14, r20
    537e:	f5 1e       	adc	r15, r21
    5380:	0b c0       	rjmp	.+22     	; 0x5398 <vfprintf+0x1ee>
    5382:	f7 01       	movw	r30, r14
    5384:	80 81       	ld	r24, Z
    5386:	91 81       	ldd	r25, Z+1	; 0x01
    5388:	ac 01       	movw	r20, r24
    538a:	ba 01       	movw	r22, r20
    538c:	88 27       	eor	r24, r24
    538e:	99 27       	eor	r25, r25
    5390:	e2 e0       	ldi	r30, 0x02	; 2
    5392:	f0 e0       	ldi	r31, 0x00	; 0
    5394:	ee 0e       	add	r14, r30
    5396:	ff 1e       	adc	r15, r31
    5398:	a3 01       	movw	r20, r6
    539a:	0e 94 fa 2a 	call	0x55f4	; 0x55f4 <__ultoa_invert>
    539e:	a8 2e       	mov	r10, r24
    53a0:	a6 18       	sub	r10, r6
	        goto ret;
	    }
	}

	/* Integer number output.	*/
	if (flags & FL_NEGATIVE)
    53a2:	0b 2d       	mov	r16, r11
    53a4:	11 27       	eor	r17, r17
    53a6:	06 ff       	sbrs	r16, 6
    53a8:	05 c0       	rjmp	.+10     	; 0x53b4 <vfprintf+0x20a>
	    putc ('-', stream);
    53aa:	b4 01       	movw	r22, r8
    53ac:	8d e2       	ldi	r24, 0x2D	; 45
    53ae:	90 e0       	ldi	r25, 0x00	; 0
    53b0:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
	if ((flags & FL_ALT) && (buf[c-1] != '0')) {
    53b4:	04 ff       	sbrs	r16, 4
    53b6:	15 c0       	rjmp	.+42     	; 0x53e2 <vfprintf+0x238>
    53b8:	fe 01       	movw	r30, r28
    53ba:	ea 0d       	add	r30, r10
    53bc:	f1 1d       	adc	r31, r1
    53be:	80 81       	ld	r24, Z
    53c0:	80 33       	cpi	r24, 0x30	; 48
    53c2:	79 f0       	breq	.+30     	; 0x53e2 <vfprintf+0x238>
	    putc ('0', stream);
    53c4:	b4 01       	movw	r22, r8
    53c6:	80 e3       	ldi	r24, 0x30	; 48
    53c8:	90 e0       	ldi	r25, 0x00	; 0
    53ca:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
	    if (flags & FL_ALTHEX)
    53ce:	02 ff       	sbrs	r16, 2
    53d0:	08 c0       	rjmp	.+16     	; 0x53e2 <vfprintf+0x238>
#if  FL_ALTLWR != 'x' - 'X'
# error
#endif
		putc ('X' + (flags & FL_ALTLWR), stream);
    53d2:	00 72       	andi	r16, 0x20	; 32
    53d4:	10 70       	andi	r17, 0x00	; 0
    53d6:	b4 01       	movw	r22, r8
    53d8:	c8 01       	movw	r24, r16
    53da:	88 5a       	subi	r24, 0xA8	; 168
    53dc:	9f 4f       	sbci	r25, 0xFF	; 255
    53de:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
	}
	do {
	    putc (buf[--c], stream);
    53e2:	aa 94       	dec	r10
    53e4:	f3 01       	movw	r30, r6
    53e6:	ea 0d       	add	r30, r10
    53e8:	f1 1d       	adc	r31, r1
    53ea:	80 81       	ld	r24, Z
    53ec:	b4 01       	movw	r22, r8
    53ee:	99 27       	eor	r25, r25
    53f0:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <fputc>
	} while (c);
    53f4:	aa 20       	and	r10, r10
    53f6:	09 f4       	brne	.+2      	; 0x53fa <vfprintf+0x250>
    53f8:	fb ce       	rjmp	.-522    	; 0x51f0 <vfprintf+0x46>
    53fa:	f3 cf       	rjmp	.-26     	; 0x53e2 <vfprintf+0x238>

    } /* for (;;) */

  ret:
    return stream->len;
    53fc:	f4 01       	movw	r30, r8
    53fe:	86 81       	ldd	r24, Z+6	; 0x06
    5400:	97 81       	ldd	r25, Z+7	; 0x07
    5402:	e2 e1       	ldi	r30, 0x12	; 18
    5404:	2b 96       	adiw	r28, 0x0b	; 11
    5406:	0c 94 ea 2c 	jmp	0x59d4	; 0x59d4 <__epilogue_restores__>

0000540a <strchr_P>:
    540a:	fc 01       	movw	r30, r24
    540c:	05 90       	lpm	r0, Z+
    540e:	06 16       	cp	r0, r22
    5410:	21 f0       	breq	.+8      	; 0x541a <strchr_P+0x10>
    5412:	00 20       	and	r0, r0
    5414:	d9 f7       	brne	.-10     	; 0x540c <strchr_P+0x2>
    5416:	c0 01       	movw	r24, r0
    5418:	08 95       	ret
    541a:	31 97       	sbiw	r30, 0x01	; 1
    541c:	cf 01       	movw	r24, r30
    541e:	08 95       	ret

00005420 <fdevopen>:
	: "r" (flag),				\
	  "I" (ntz(mask))			\
    );						\
    __c;					\
})
#elif	1
    5420:	ef 92       	push	r14
    5422:	ff 92       	push	r15
    5424:	0f 93       	push	r16
    5426:	1f 93       	push	r17
    5428:	cf 93       	push	r28
    542a:	df 93       	push	r29
    542c:	8c 01       	movw	r16, r24
    542e:	7b 01       	movw	r14, r22
# define GETBYTE(flag, mask, pnt)	({	\
    unsigned char __c;				\
    asm (					\
    5430:	89 2b       	or	r24, r25
    5432:	11 f4       	brne	.+4      	; 0x5438 <fdevopen+0x18>
    5434:	67 2b       	or	r22, r23
    5436:	d1 f1       	breq	.+116    	; 0x54ac <fdevopen+0x8c>
	"sbrc	%2,%3	\n\t"			\
	"lpm		\n\t"			\
	"sbrs	%2,%3	\n\t"			\
    5438:	6e e0       	ldi	r22, 0x0E	; 14
    543a:	70 e0       	ldi	r23, 0x00	; 0
    543c:	81 e0       	ldi	r24, 0x01	; 1
    543e:	90 e0       	ldi	r25, 0x00	; 0
    5440:	0e 94 58 2b 	call	0x56b0	; 0x56b0 <calloc>
    5444:	fc 01       	movw	r30, r24
    5446:	00 97       	sbiw	r24, 0x00	; 0
    5448:	89 f1       	breq	.+98     	; 0x54ac <fdevopen+0x8c>
    544a:	dc 01       	movw	r26, r24
	"ld	r0,Z	\n\t"			\
	"adiw	r30,1	\n\t"			\
	"mov	%0,r0	"			\
    544c:	80 e8       	ldi	r24, 0x80	; 128
    544e:	83 83       	std	Z+3, r24	; 0x03
	: "=r" (__c),				\
	  "+z" (pnt)				\
    5450:	e1 14       	cp	r14, r1
    5452:	f1 04       	cpc	r15, r1
    5454:	71 f0       	breq	.+28     	; 0x5472 <fdevopen+0x52>
	: "r" (flag),				\
    5456:	f3 86       	std	Z+11, r15	; 0x0b
    5458:	e2 86       	std	Z+10, r14	; 0x0a
	  "I" (ntz(mask))			\
    545a:	81 e8       	ldi	r24, 0x81	; 129
    545c:	83 83       	std	Z+3, r24	; 0x03
	: "r0"					\
    545e:	80 91 9f 09 	lds	r24, 0x099F
    5462:	90 91 a0 09 	lds	r25, 0x09A0
    5466:	89 2b       	or	r24, r25
    5468:	21 f4       	brne	.+8      	; 0x5472 <fdevopen+0x52>
    );						\
    546a:	f0 93 a0 09 	sts	0x09A0, r31
    546e:	e0 93 9f 09 	sts	0x099F, r30
    __c;					\
})
#else
    5472:	01 15       	cp	r16, r1
    5474:	11 05       	cpc	r17, r1
    5476:	e1 f0       	breq	.+56     	; 0x54b0 <fdevopen+0x90>
# define GETBYTE(flag, mask, pnt)	({	\
    5478:	11 87       	std	Z+9, r17	; 0x09
    547a:	00 87       	std	Z+8, r16	; 0x08
    unsigned char __c;				\
    547c:	83 81       	ldd	r24, Z+3	; 0x03
    547e:	82 60       	ori	r24, 0x02	; 2
    5480:	83 83       	std	Z+3, r24	; 0x03
    __c = ((flag) & (mask))			\
    5482:	80 91 a1 09 	lds	r24, 0x09A1
    5486:	90 91 a2 09 	lds	r25, 0x09A2
    548a:	89 2b       	or	r24, r25
    548c:	89 f4       	brne	.+34     	; 0x54b0 <fdevopen+0x90>
	  ? pgm_read_byte(pnt) : *pnt;		\
    548e:	f0 93 a2 09 	sts	0x09A2, r31
    5492:	e0 93 a1 09 	sts	0x09A1, r30
    pnt++;					\
    5496:	80 91 a3 09 	lds	r24, 0x09A3
    549a:	90 91 a4 09 	lds	r25, 0x09A4
    549e:	89 2b       	or	r24, r25
    54a0:	39 f4       	brne	.+14     	; 0x54b0 <fdevopen+0x90>
    __c;					\
    54a2:	f0 93 a4 09 	sts	0x09A4, r31
    54a6:	e0 93 a3 09 	sts	0x09A3, r30
    54aa:	02 c0       	rjmp	.+4      	; 0x54b0 <fdevopen+0x90>
    54ac:	a0 e0       	ldi	r26, 0x00	; 0
    54ae:	b0 e0       	ldi	r27, 0x00	; 0
})
#endif

/* --------------------------------------------------------------------	*/
#if  PRINTF_LEVEL <= PRINTF_MIN
    54b0:	cd 01       	movw	r24, r26
    54b2:	e6 e0       	ldi	r30, 0x06	; 6
    54b4:	cd b7       	in	r28, 0x3d	; 61
    54b6:	de b7       	in	r29, 0x3e	; 62
    54b8:	0c 94 f6 2c 	jmp	0x59ec	; 0x59ec <__epilogue_restores__+0x18>

000054bc <fputc>:
/* From: Id: printf_p_new.c,v 1.1.1.9 2002/10/15 20:10:28 joerg_wunsch Exp */
/* $Id: vfprintf.c,v 1.18 2007/03/11 03:34:51 dmix Exp $ */

#include <avr/pgmspace.h>
#include <stdarg.h>
#include <stdio.h>
    54bc:	0f 93       	push	r16
    54be:	1f 93       	push	r17
    54c0:	cf 93       	push	r28
    54c2:	df 93       	push	r29
    54c4:	8c 01       	movw	r16, r24
    54c6:	eb 01       	movw	r28, r22
#include <stdlib.h>
#include <string.h>
    54c8:	8b 81       	ldd	r24, Y+3	; 0x03
    54ca:	99 27       	eor	r25, r25
    54cc:	81 ff       	sbrs	r24, 1
    54ce:	1b c0       	rjmp	.+54     	; 0x5506 <fputc+0x4a>

#include "stdio_private.h"
#include "ftoa_engine.h"
    54d0:	82 ff       	sbrs	r24, 2
    54d2:	0d c0       	rjmp	.+26     	; 0x54ee <fputc+0x32>
#include "ntz.h"
    54d4:	2e 81       	ldd	r18, Y+6	; 0x06
    54d6:	3f 81       	ldd	r19, Y+7	; 0x07
    54d8:	8c 81       	ldd	r24, Y+4	; 0x04
    54da:	9d 81       	ldd	r25, Y+5	; 0x05
    54dc:	28 17       	cp	r18, r24
    54de:	39 07       	cpc	r19, r25
    54e0:	64 f4       	brge	.+24     	; 0x54fa <fputc+0x3e>
#include "xtoa_fast.h"
    54e2:	e8 81       	ld	r30, Y
    54e4:	f9 81       	ldd	r31, Y+1	; 0x01
    54e6:	01 93       	st	Z+, r16
    54e8:	f9 83       	std	Y+1, r31	; 0x01
    54ea:	e8 83       	st	Y, r30
    54ec:	06 c0       	rjmp	.+12     	; 0x54fa <fputc+0x3e>

/*
 * This file can be compiled into more than one flavour.  The default
 * is to offer the usual modifiers and integer formatting support
    54ee:	e8 85       	ldd	r30, Y+8	; 0x08
    54f0:	f9 85       	ldd	r31, Y+9	; 0x09
    54f2:	80 2f       	mov	r24, r16
    54f4:	09 95       	icall
    54f6:	89 2b       	or	r24, r25
    54f8:	31 f4       	brne	.+12     	; 0x5506 <fputc+0x4a>
 * (level 2).  Level 1 maintains a minimal version that just offers
    54fa:	8e 81       	ldd	r24, Y+6	; 0x06
    54fc:	9f 81       	ldd	r25, Y+7	; 0x07
    54fe:	01 96       	adiw	r24, 0x01	; 1
    5500:	9f 83       	std	Y+7, r25	; 0x07
    5502:	8e 83       	std	Y+6, r24	; 0x06
    5504:	02 c0       	rjmp	.+4      	; 0x550a <fputc+0x4e>
 * integer formatting, but no modifier support whatsoever.  Level 3 is
    5506:	0f ef       	ldi	r16, 0xFF	; 255
    5508:	1f ef       	ldi	r17, 0xFF	; 255
 * intented for floating point support.
 */

#ifndef PRINTF_LEVEL
    550a:	c8 01       	movw	r24, r16
    550c:	df 91       	pop	r29
    550e:	cf 91       	pop	r28
    5510:	1f 91       	pop	r17
    5512:	0f 91       	pop	r16
    5514:	08 95       	ret

00005516 <printf>:

/* From: Id: printf_p_new.c,v 1.1.1.9 2002/10/15 20:10:28 joerg_wunsch Exp */
/* $Id: vfprintf.c,v 1.18 2007/03/11 03:34:51 dmix Exp $ */

#include <avr/pgmspace.h>
#include <stdarg.h>
    5516:	a2 e0       	ldi	r26, 0x02	; 2
    5518:	b0 e0       	ldi	r27, 0x00	; 0
    551a:	e1 e9       	ldi	r30, 0x91	; 145
    551c:	fa e2       	ldi	r31, 0x2A	; 42
    551e:	0c 94 de 2c 	jmp	0x59bc	; 0x59bc <__prologue_saves__+0x20>
    5522:	fe 01       	movw	r30, r28
    5524:	37 96       	adiw	r30, 0x07	; 7
    5526:	61 91       	ld	r22, Z+
    5528:	71 91       	ld	r23, Z+
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

    552a:	fa 83       	std	Y+2, r31	; 0x02
    552c:	e9 83       	std	Y+1, r30	; 0x01
#include "stdio_private.h"
    552e:	af 01       	movw	r20, r30
    5530:	80 91 a1 09 	lds	r24, 0x09A1
    5534:	90 91 a2 09 	lds	r25, 0x09A2
    5538:	0e 94 d5 28 	call	0x51aa	; 0x51aa <vfprintf>
    553c:	e2 e0       	ldi	r30, 0x02	; 2
    553e:	22 96       	adiw	r28, 0x02	; 2
    5540:	0c 94 fa 2c 	jmp	0x59f4	; 0x59f4 <__epilogue_restores__+0x20>

00005544 <puts>:
/* From: Id: printf_p_new.c,v 1.1.1.9 2002/10/15 20:10:28 joerg_wunsch Exp */
/* $Id: vfprintf.c,v 1.18 2007/03/11 03:34:51 dmix Exp $ */

#include <avr/pgmspace.h>
#include <stdarg.h>
#include <stdio.h>
    5544:	0f 93       	push	r16
    5546:	1f 93       	push	r17
    5548:	cf 93       	push	r28
    554a:	df 93       	push	r29
    554c:	8c 01       	movw	r16, r24
#include <stdlib.h>
#include <string.h>

#include "stdio_private.h"
    554e:	e0 91 a1 09 	lds	r30, 0x09A1
    5552:	f0 91 a2 09 	lds	r31, 0x09A2
    5556:	83 81       	ldd	r24, Z+3	; 0x03
    5558:	81 ff       	sbrs	r24, 1
    555a:	1f c0       	rjmp	.+62     	; 0x559a <puts+0x56>
    555c:	c0 e0       	ldi	r28, 0x00	; 0
    555e:	d0 e0       	ldi	r29, 0x00	; 0
    5560:	0a c0       	rjmp	.+20     	; 0x5576 <puts+0x32>
#include "ftoa_engine.h"
#include "ntz.h"
#include "xtoa_fast.h"

    5562:	fd 01       	movw	r30, r26
    5564:	20 85       	ldd	r18, Z+8	; 0x08
    5566:	31 85       	ldd	r19, Z+9	; 0x09
    5568:	bd 01       	movw	r22, r26
    556a:	f9 01       	movw	r30, r18
    556c:	09 95       	icall
    556e:	89 2b       	or	r24, r25
    5570:	11 f0       	breq	.+4      	; 0x5576 <puts+0x32>
    5572:	cf ef       	ldi	r28, 0xFF	; 255
    5574:	df ef       	ldi	r29, 0xFF	; 255
#include <string.h>

#include "stdio_private.h"
#include "ftoa_engine.h"
#include "ntz.h"
#include "xtoa_fast.h"
    5576:	f8 01       	movw	r30, r16
    5578:	81 91       	ld	r24, Z+
    557a:	8f 01       	movw	r16, r30
    557c:	a0 91 a1 09 	lds	r26, 0x09A1
    5580:	b0 91 a2 09 	lds	r27, 0x09A2
    5584:	88 23       	and	r24, r24
    5586:	69 f7       	brne	.-38     	; 0x5562 <puts+0x1e>

/*
 * This file can be compiled into more than one flavour.  The default
    5588:	fd 01       	movw	r30, r26
    558a:	20 85       	ldd	r18, Z+8	; 0x08
    558c:	31 85       	ldd	r19, Z+9	; 0x09
    558e:	bd 01       	movw	r22, r26
    5590:	8a e0       	ldi	r24, 0x0A	; 10
    5592:	f9 01       	movw	r30, r18
    5594:	09 95       	icall
    5596:	89 2b       	or	r24, r25
    5598:	11 f0       	breq	.+4      	; 0x559e <puts+0x5a>
    559a:	cf ef       	ldi	r28, 0xFF	; 255
    559c:	df ef       	ldi	r29, 0xFF	; 255
 * is to offer the usual modifiers and integer formatting support
 * (level 2).  Level 1 maintains a minimal version that just offers
 * integer formatting, but no modifier support whatsoever.  Level 3 is
 * intented for floating point support.
    559e:	ce 01       	movw	r24, r28
    55a0:	df 91       	pop	r29
    55a2:	cf 91       	pop	r28
    55a4:	1f 91       	pop	r17
    55a6:	0f 91       	pop	r16
    55a8:	08 95       	ret

000055aa <sprintf>:

#include <avr/pgmspace.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
    55aa:	a0 e1       	ldi	r26, 0x10	; 16
    55ac:	b0 e0       	ldi	r27, 0x00	; 0
    55ae:	eb ed       	ldi	r30, 0xDB	; 219
    55b0:	fa e2       	ldi	r31, 0x2A	; 42
    55b2:	0c 94 dc 2c 	jmp	0x59b8	; 0x59b8 <__prologue_saves__+0x1c>
    55b6:	0f 89       	ldd	r16, Y+23	; 0x17
    55b8:	18 8d       	ldd	r17, Y+24	; 0x18

#include "stdio_private.h"
#include "ftoa_engine.h"
#include "ntz.h"
#include "xtoa_fast.h"
    55ba:	86 e0       	ldi	r24, 0x06	; 6
    55bc:	8e 83       	std	Y+6, r24	; 0x06

    55be:	1c 83       	std	Y+4, r17	; 0x04
    55c0:	0b 83       	std	Y+3, r16	; 0x03
/*
    55c2:	8f ef       	ldi	r24, 0xFF	; 255
    55c4:	9f e7       	ldi	r25, 0x7F	; 127
    55c6:	98 87       	std	Y+8, r25	; 0x08
    55c8:	8f 83       	std	Y+7, r24	; 0x07
 * This file can be compiled into more than one flavour.  The default
    55ca:	ae 01       	movw	r20, r28
    55cc:	45 5e       	subi	r20, 0xE5	; 229
    55ce:	5f 4f       	sbci	r21, 0xFF	; 255
    55d0:	5a 83       	std	Y+2, r21	; 0x02
    55d2:	49 83       	std	Y+1, r20	; 0x01
 * is to offer the usual modifiers and integer formatting support
    55d4:	69 8d       	ldd	r22, Y+25	; 0x19
    55d6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    55d8:	ce 01       	movw	r24, r28
    55da:	03 96       	adiw	r24, 0x03	; 3
    55dc:	0e 94 d5 28 	call	0x51aa	; 0x51aa <vfprintf>
 * (level 2).  Level 1 maintains a minimal version that just offers
 * integer formatting, but no modifier support whatsoever.  Level 3 is
    55e0:	29 85       	ldd	r18, Y+9	; 0x09
    55e2:	3a 85       	ldd	r19, Y+10	; 0x0a
    55e4:	02 0f       	add	r16, r18
    55e6:	13 1f       	adc	r17, r19
    55e8:	f8 01       	movw	r30, r16
    55ea:	10 82       	st	Z, r1
    55ec:	e4 e0       	ldi	r30, 0x04	; 4
    55ee:	60 96       	adiw	r28, 0x10	; 16
    55f0:	0c 94 f8 2c 	jmp	0x59f0	; 0x59f0 <__epilogue_restores__+0x1c>

000055f4 <__ultoa_invert>:
    55f4:	fa 01       	movw	r30, r20
    55f6:	aa 27       	eor	r26, r26
    55f8:	28 30       	cpi	r18, 0x08	; 8
    55fa:	51 f1       	breq	.+84     	; 0x5650 <__ultoa_invert+0x5c>
    55fc:	20 31       	cpi	r18, 0x10	; 16
    55fe:	81 f1       	breq	.+96     	; 0x5660 <__ultoa_invert+0x6c>
    5600:	e8 94       	clt
    5602:	6f 93       	push	r22
    5604:	6e 7f       	andi	r22, 0xFE	; 254
    5606:	6e 5f       	subi	r22, 0xFE	; 254
    5608:	7f 4f       	sbci	r23, 0xFF	; 255
    560a:	8f 4f       	sbci	r24, 0xFF	; 255
    560c:	9f 4f       	sbci	r25, 0xFF	; 255
    560e:	af 4f       	sbci	r26, 0xFF	; 255
    5610:	b1 e0       	ldi	r27, 0x01	; 1
    5612:	3e d0       	rcall	.+124    	; 0x5690 <__ultoa_invert+0x9c>
    5614:	b4 e0       	ldi	r27, 0x04	; 4
    5616:	3c d0       	rcall	.+120    	; 0x5690 <__ultoa_invert+0x9c>
    5618:	67 0f       	add	r22, r23
    561a:	78 1f       	adc	r23, r24
    561c:	89 1f       	adc	r24, r25
    561e:	9a 1f       	adc	r25, r26
    5620:	a1 1d       	adc	r26, r1
    5622:	68 0f       	add	r22, r24
    5624:	79 1f       	adc	r23, r25
    5626:	8a 1f       	adc	r24, r26
    5628:	91 1d       	adc	r25, r1
    562a:	a1 1d       	adc	r26, r1
    562c:	6a 0f       	add	r22, r26
    562e:	71 1d       	adc	r23, r1
    5630:	81 1d       	adc	r24, r1
    5632:	91 1d       	adc	r25, r1
    5634:	a1 1d       	adc	r26, r1
    5636:	20 d0       	rcall	.+64     	; 0x5678 <__ultoa_invert+0x84>
    5638:	09 f4       	brne	.+2      	; 0x563c <__ultoa_invert+0x48>
    563a:	68 94       	set
    563c:	3f 91       	pop	r19
    563e:	2a e0       	ldi	r18, 0x0A	; 10
    5640:	26 9f       	mul	r18, r22
    5642:	11 24       	eor	r1, r1
    5644:	30 19       	sub	r19, r0
    5646:	30 5d       	subi	r19, 0xD0	; 208
    5648:	31 93       	st	Z+, r19
    564a:	de f6       	brtc	.-74     	; 0x5602 <__ultoa_invert+0xe>
    564c:	cf 01       	movw	r24, r30
    564e:	08 95       	ret
    5650:	46 2f       	mov	r20, r22
    5652:	47 70       	andi	r20, 0x07	; 7
    5654:	40 5d       	subi	r20, 0xD0	; 208
    5656:	41 93       	st	Z+, r20
    5658:	b3 e0       	ldi	r27, 0x03	; 3
    565a:	0f d0       	rcall	.+30     	; 0x567a <__ultoa_invert+0x86>
    565c:	c9 f7       	brne	.-14     	; 0x5650 <__ultoa_invert+0x5c>
    565e:	f6 cf       	rjmp	.-20     	; 0x564c <__ultoa_invert+0x58>
    5660:	46 2f       	mov	r20, r22
    5662:	4f 70       	andi	r20, 0x0F	; 15
    5664:	40 5d       	subi	r20, 0xD0	; 208
    5666:	4a 33       	cpi	r20, 0x3A	; 58
    5668:	18 f0       	brcs	.+6      	; 0x5670 <__ultoa_invert+0x7c>
    566a:	49 5d       	subi	r20, 0xD9	; 217
    566c:	31 fd       	sbrc	r19, 1
    566e:	40 52       	subi	r20, 0x20	; 32
    5670:	41 93       	st	Z+, r20
    5672:	02 d0       	rcall	.+4      	; 0x5678 <__ultoa_invert+0x84>
    5674:	a9 f7       	brne	.-22     	; 0x5660 <__ultoa_invert+0x6c>
    5676:	ea cf       	rjmp	.-44     	; 0x564c <__ultoa_invert+0x58>
    5678:	b4 e0       	ldi	r27, 0x04	; 4
    567a:	a6 95       	lsr	r26
    567c:	97 95       	ror	r25
    567e:	87 95       	ror	r24
    5680:	77 95       	ror	r23
    5682:	67 95       	ror	r22
    5684:	ba 95       	dec	r27
    5686:	c9 f7       	brne	.-14     	; 0x567a <__ultoa_invert+0x86>
    5688:	00 97       	sbiw	r24, 0x00	; 0
    568a:	61 05       	cpc	r22, r1
    568c:	71 05       	cpc	r23, r1
    568e:	08 95       	ret
    5690:	9b 01       	movw	r18, r22
    5692:	ac 01       	movw	r20, r24
    5694:	0a 2e       	mov	r0, r26
    5696:	06 94       	lsr	r0
    5698:	57 95       	ror	r21
    569a:	47 95       	ror	r20
    569c:	37 95       	ror	r19
    569e:	27 95       	ror	r18
    56a0:	ba 95       	dec	r27
    56a2:	c9 f7       	brne	.-14     	; 0x5696 <__ultoa_invert+0xa2>
    56a4:	62 0f       	add	r22, r18
    56a6:	73 1f       	adc	r23, r19
    56a8:	84 1f       	adc	r24, r20
    56aa:	95 1f       	adc	r25, r21
    56ac:	a0 1d       	adc	r26, r0
    56ae:	08 95       	ret

000056b0 <calloc>:
/* From: Id: printf_p_new.c,v 1.1.1.9 2002/10/15 20:10:28 joerg_wunsch Exp */
/* $Id: vfprintf.c,v 1.18 2007/03/11 03:34:51 dmix Exp $ */

#include <avr/pgmspace.h>
#include <stdarg.h>
#include <stdio.h>
    56b0:	0f 93       	push	r16
    56b2:	1f 93       	push	r17
    56b4:	cf 93       	push	r28
    56b6:	df 93       	push	r29
#include <stdlib.h>
#include <string.h>

    56b8:	68 9f       	mul	r22, r24
    56ba:	80 01       	movw	r16, r0
    56bc:	69 9f       	mul	r22, r25
    56be:	10 0d       	add	r17, r0
    56c0:	78 9f       	mul	r23, r24
    56c2:	10 0d       	add	r17, r0
    56c4:	11 24       	eor	r1, r1
    56c6:	c8 01       	movw	r24, r16
    56c8:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <malloc>
    56cc:	ec 01       	movw	r28, r24
    56ce:	00 97       	sbiw	r24, 0x00	; 0
    56d0:	29 f0       	breq	.+10     	; 0x56dc <calloc+0x2c>
#include "stdio_private.h"
#include "ftoa_engine.h"
    56d2:	a8 01       	movw	r20, r16
    56d4:	60 e0       	ldi	r22, 0x00	; 0
    56d6:	70 e0       	ldi	r23, 0x00	; 0
    56d8:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <memset>
#include "ntz.h"
#include "xtoa_fast.h"
    56dc:	ce 01       	movw	r24, r28
    56de:	df 91       	pop	r29
    56e0:	cf 91       	pop	r28
    56e2:	1f 91       	pop	r17
    56e4:	0f 91       	pop	r16
    56e6:	08 95       	ret

000056e8 <malloc>:
#else
# error "Not a known printf level."
#endif

#ifndef	__AVR_HAVE_LPMX__
# if  defined(__AVR_ENHANCED__) && __AVR_ENHANCED__
    56e8:	cf 93       	push	r28
    56ea:	df 93       	push	r29
    56ec:	ac 01       	movw	r20, r24
# define GETBYTE(flag, mask, pnt)	({	\
    unsigned char __c;				\
    asm (					\
	"sbrc	%2,%3	\n\t"			\
	"lpm	%0,Z+	\n\t"			\
	"sbrs	%2,%3	\n\t"			\
    56ee:	02 97       	sbiw	r24, 0x02	; 2
    56f0:	10 f4       	brcc	.+4      	; 0x56f6 <malloc+0xe>
    56f2:	42 e0       	ldi	r20, 0x02	; 2
    56f4:	50 e0       	ldi	r21, 0x00	; 0
	  "I" (ntz(mask))			\
    );						\
    __c;					\
})
#elif	1
# define GETBYTE(flag, mask, pnt)	({	\
    56f6:	a0 91 a7 09 	lds	r26, 0x09A7
    56fa:	b0 91 a8 09 	lds	r27, 0x09A8
    56fe:	fd 01       	movw	r30, r26
    5700:	c0 e0       	ldi	r28, 0x00	; 0
    5702:	d0 e0       	ldi	r29, 0x00	; 0
    5704:	20 e0       	ldi	r18, 0x00	; 0
    5706:	30 e0       	ldi	r19, 0x00	; 0
    5708:	20 c0       	rjmp	.+64     	; 0x574a <malloc+0x62>
    unsigned char __c;				\
    asm (					\
	"sbrc	%2,%3	\n\t"			\
    570a:	80 81       	ld	r24, Z
    570c:	91 81       	ldd	r25, Z+1	; 0x01
    570e:	84 17       	cp	r24, r20
    5710:	95 07       	cpc	r25, r21
    5712:	69 f4       	brne	.+26     	; 0x572e <malloc+0x46>
    5714:	82 81       	ldd	r24, Z+2	; 0x02
    5716:	93 81       	ldd	r25, Z+3	; 0x03
	"lpm		\n\t"			\
	"sbrs	%2,%3	\n\t"			\
	"ld	r0,Z	\n\t"			\
	"adiw	r30,1	\n\t"			\
	"mov	%0,r0	"			\
    5718:	20 97       	sbiw	r28, 0x00	; 0
    571a:	19 f0       	breq	.+6      	; 0x5722 <malloc+0x3a>
	: "=r" (__c),				\
    571c:	9b 83       	std	Y+3, r25	; 0x03
    571e:	8a 83       	std	Y+2, r24	; 0x02
    5720:	04 c0       	rjmp	.+8      	; 0x572a <malloc+0x42>
	  "+z" (pnt)				\
	: "r" (flag),				\
    5722:	90 93 a8 09 	sts	0x09A8, r25
    5726:	80 93 a7 09 	sts	0x09A7, r24
	  "I" (ntz(mask))			\
    572a:	9f 01       	movw	r18, r30
    572c:	32 c0       	rjmp	.+100    	; 0x5792 <malloc+0xaa>
	: "r0"					\
    );						\
    572e:	48 17       	cp	r20, r24
    5730:	59 07       	cpc	r21, r25
    5732:	38 f4       	brcc	.+14     	; 0x5742 <malloc+0x5a>
    __c;					\
    5734:	21 15       	cp	r18, r1
    5736:	31 05       	cpc	r19, r1
    5738:	19 f0       	breq	.+6      	; 0x5740 <malloc+0x58>
    573a:	82 17       	cp	r24, r18
    573c:	93 07       	cpc	r25, r19
    573e:	08 f4       	brcc	.+2      	; 0x5742 <malloc+0x5a>
    5740:	9c 01       	movw	r18, r24
    __c;					\
})
#elif	1
# define GETBYTE(flag, mask, pnt)	({	\
    unsigned char __c;				\
    asm (					\
    5742:	ef 01       	movw	r28, r30
    5744:	02 80       	ldd	r0, Z+2	; 0x02
    5746:	f3 81       	ldd	r31, Z+3	; 0x03
    5748:	e0 2d       	mov	r30, r0
    );						\
    __c;					\
})
#elif	1
# define GETBYTE(flag, mask, pnt)	({	\
    unsigned char __c;				\
    574a:	30 97       	sbiw	r30, 0x00	; 0
    574c:	f1 f6       	brne	.-68     	; 0x570a <malloc+0x22>
})
#endif

/* --------------------------------------------------------------------	*/
#if  PRINTF_LEVEL <= PRINTF_MIN

    574e:	21 15       	cp	r18, r1
    5750:	31 05       	cpc	r19, r1
    5752:	99 f1       	breq	.+102    	; 0x57ba <malloc+0xd2>
#define FL_PGMSTRING	0x01
    5754:	c9 01       	movw	r24, r18
    5756:	84 1b       	sub	r24, r20
    5758:	95 0b       	sbc	r25, r21
    575a:	04 97       	sbiw	r24, 0x04	; 4
    575c:	08 f4       	brcc	.+2      	; 0x5760 <malloc+0x78>
    575e:	a9 01       	movw	r20, r18
    5760:	e0 e0       	ldi	r30, 0x00	; 0
    5762:	f0 e0       	ldi	r31, 0x00	; 0
    5764:	28 c0       	rjmp	.+80     	; 0x57b6 <malloc+0xce>
#define FL_ALTHEX	0x04
#define FL_ALT		0x10
#define FL_ALTLWR	0x20
#define FL_NEGATIVE	0x40
#define FL_LONG 	0x80
    5766:	8d 91       	ld	r24, X+
    5768:	9c 91       	ld	r25, X
    576a:	11 97       	sbiw	r26, 0x01	; 1
    576c:	82 17       	cp	r24, r18
    576e:	93 07       	cpc	r25, r19
    5770:	f9 f4       	brne	.+62     	; 0x57b0 <malloc+0xc8>

    5772:	48 17       	cp	r20, r24
    5774:	59 07       	cpc	r21, r25
    5776:	81 f4       	brne	.+32     	; 0x5798 <malloc+0xb0>
    5778:	ed 01       	movw	r28, r26
    577a:	8a 81       	ldd	r24, Y+2	; 0x02
    577c:	9b 81       	ldd	r25, Y+3	; 0x03
int vfprintf (FILE * stream, const char *fmt, va_list ap)
{
    unsigned char c;		/* holds a char from the format string */
    unsigned char flags;
    unsigned char buf[11];	/* size for -1 in octal, without '\0'	*/
    577e:	30 97       	sbiw	r30, 0x00	; 0
    5780:	19 f0       	breq	.+6      	; 0x5788 <malloc+0xa0>

    5782:	93 83       	std	Z+3, r25	; 0x03
    5784:	82 83       	std	Z+2, r24	; 0x02
    5786:	04 c0       	rjmp	.+8      	; 0x5790 <malloc+0xa8>
    stream->len = 0;

    5788:	90 93 a8 09 	sts	0x09A8, r25
    578c:	80 93 a7 09 	sts	0x09A7, r24
    if ((stream->flags & __SWR) == 0)
    5790:	9d 01       	movw	r18, r26
    5792:	2e 5f       	subi	r18, 0xFE	; 254
    5794:	3f 4f       	sbci	r19, 0xFF	; 255
    5796:	4c c0       	rjmp	.+152    	; 0x5830 <malloc+0x148>
		if (c != '%') break;
	    }
	    putc (c, stream);
	}

	for (flags = 0;
    5798:	84 1b       	sub	r24, r20
    579a:	95 0b       	sbc	r25, r21
	     !(flags & FL_LONG);	/* 'll' will detect as error	*/
	     c = GETBYTE (stream->flags, __SPGM, fmt))
    579c:	fd 01       	movw	r30, r26
    579e:	e8 0f       	add	r30, r24
    57a0:	f9 1f       	adc	r31, r25
	{
    57a2:	41 93       	st	Z+, r20
    57a4:	51 93       	st	Z+, r21
	    if (c && strchr_P (PSTR(" +-.0123456789h"), c))
    57a6:	02 97       	sbiw	r24, 0x02	; 2
    57a8:	8d 93       	st	X+, r24
    57aa:	9c 93       	st	X, r25
		continue;
    57ac:	9f 01       	movw	r18, r30
    57ae:	40 c0       	rjmp	.+128    	; 0x5830 <malloc+0x148>

#define FL_PGMSTRING	0x01
#define FL_ALTHEX	0x04
#define FL_ALT		0x10
#define FL_ALTLWR	0x20
#define FL_NEGATIVE	0x40
    57b0:	fd 01       	movw	r30, r26
    57b2:	a2 81       	ldd	r26, Z+2	; 0x02
    57b4:	b3 81       	ldd	r27, Z+3	; 0x03
#if  PRINTF_LEVEL <= PRINTF_MIN

#define FL_PGMSTRING	0x01
#define FL_ALTHEX	0x04
#define FL_ALT		0x10
#define FL_ALTLWR	0x20
    57b6:	10 97       	sbiw	r26, 0x00	; 0
    57b8:	b1 f6       	brne	.-84     	; 0x5766 <malloc+0x7e>
	    break;
	}

	/* Only a format character is valid.	*/

	if (c && strchr_P (PSTR("EFGefg"), c)) {
    57ba:	80 91 a5 09 	lds	r24, 0x09A5
    57be:	90 91 a6 09 	lds	r25, 0x09A6
    57c2:	89 2b       	or	r24, r25
    57c4:	41 f4       	brne	.+16     	; 0x57d6 <malloc+0xee>
	    (void) va_arg (ap, double);
    57c6:	80 91 da 05 	lds	r24, 0x05DA
    57ca:	90 91 db 05 	lds	r25, 0x05DB
    57ce:	90 93 a6 09 	sts	0x09A6, r25
    57d2:	80 93 a5 09 	sts	0x09A5, r24
	    putc ('?', stream);
    57d6:	20 91 dc 05 	lds	r18, 0x05DC
    57da:	30 91 dd 05 	lds	r19, 0x05DD
	    continue;
    57de:	21 15       	cp	r18, r1
    57e0:	31 05       	cpc	r19, r1
    57e2:	49 f4       	brne	.+18     	; 0x57f6 <malloc+0x10e>
	}
    57e4:	8d b7       	in	r24, 0x3d	; 61
    57e6:	28 2f       	mov	r18, r24
    57e8:	33 27       	eor	r19, r19
    57ea:	80 91 d8 05 	lds	r24, 0x05D8
    57ee:	90 91 d9 05 	lds	r25, 0x05D9
    57f2:	28 1b       	sub	r18, r24
    57f4:	39 0b       	sbc	r19, r25

    57f6:	a0 91 a5 09 	lds	r26, 0x09A5
    57fa:	b0 91 a6 09 	lds	r27, 0x09A6
    57fe:	2a 1b       	sub	r18, r26
    5800:	3b 0b       	sbc	r19, r27
	{
	    const char * pnt;

	    switch (c) {
    5802:	24 17       	cp	r18, r20
    5804:	35 07       	cpc	r19, r21
    5806:	90 f0       	brcs	.+36     	; 0x582c <malloc+0x144>
    5808:	ca 01       	movw	r24, r20
    580a:	02 96       	adiw	r24, 0x02	; 2
    580c:	28 17       	cp	r18, r24
    580e:	39 07       	cpc	r19, r25
    5810:	68 f0       	brcs	.+26     	; 0x582c <malloc+0x144>

	      case 'c':
    5812:	9d 01       	movw	r18, r26
    5814:	2e 5f       	subi	r18, 0xFE	; 254
    5816:	3f 4f       	sbci	r19, 0xFF	; 255
    5818:	c9 01       	movw	r24, r18
    581a:	84 0f       	add	r24, r20
    581c:	95 1f       	adc	r25, r21
    581e:	90 93 a6 09 	sts	0x09A6, r25
    5822:	80 93 a5 09 	sts	0x09A5, r24
		putc (va_arg (ap, int), stream);
    5826:	4d 93       	st	X+, r20
    5828:	5c 93       	st	X, r21
    582a:	02 c0       	rjmp	.+4      	; 0x5830 <malloc+0x148>
		continue;
    582c:	20 e0       	ldi	r18, 0x00	; 0
    582e:	30 e0       	ldi	r19, 0x00	; 0

	      case 'S':
		flags |= FL_PGMSTRING;
		/* FALLTHROUGH */

	      case 's':
    5830:	c9 01       	movw	r24, r18
    5832:	df 91       	pop	r29
    5834:	cf 91       	pop	r28
    5836:	08 95       	ret

00005838 <free>:
		pnt = va_arg (ap, char *);
	        while ( (c = GETBYTE (flags, FL_PGMSTRING, pnt)) != 0)
		    putc (c, stream);
		continue;
    5838:	cf 93       	push	r28
    583a:	df 93       	push	r29
	    }
	}

	if (c == 'd' || c == 'i') {
	    long x = (flags & FL_LONG) ? va_arg(ap,long) : va_arg(ap,int);
    583c:	00 97       	sbiw	r24, 0x00	; 0
    583e:	09 f4       	brne	.+2      	; 0x5842 <free+0xa>
    5840:	4e c0       	rjmp	.+156    	; 0x58de <free+0xa6>
	    flags &= ~FL_ALT;
	    if (x < 0) {
		x = -x;
		/* `putc ('-', stream)' will considarably inlarge stack size.
    5842:	ec 01       	movw	r28, r24
    5844:	22 97       	sbiw	r28, 0x02	; 2
		   So flag is used.	*/
		flags |= FL_NEGATIVE;
    5846:	1b 82       	std	Y+3, r1	; 0x03
    5848:	1a 82       	std	Y+2, r1	; 0x02
	    }
	    c = __ultoa_invert (x, (char *)buf, 10) - (char *)buf;

	} else {
	    int base;

    584a:	a0 91 a7 09 	lds	r26, 0x09A7
    584e:	b0 91 a8 09 	lds	r27, 0x09A8
    5852:	10 97       	sbiw	r26, 0x00	; 0
    5854:	11 f1       	breq	.+68     	; 0x589a <free+0x62>
    5856:	40 e0       	ldi	r20, 0x00	; 0
    5858:	50 e0       	ldi	r21, 0x00	; 0
    585a:	01 c0       	rjmp	.+2      	; 0x585e <free+0x26>
	    switch (c) {
	      case 'u':
    585c:	dc 01       	movw	r26, r24
		goto ultoa;
	      case 'p':
	        flags |= FL_ALT;
		/* no break */
	      case 'x':
		flags |= (FL_ALTHEX | FL_ALTLWR);
    585e:	ac 17       	cp	r26, r28
    5860:	bd 07       	cpc	r27, r29
    5862:	00 f1       	brcs	.+64     	; 0x58a4 <free+0x6c>
	        base = 16;
		goto ultoa;
	      case 'X':
    5864:	bb 83       	std	Y+3, r27	; 0x03
    5866:	aa 83       	std	Y+2, r26	; 0x02
		flags |= FL_ALTHEX;
    5868:	fe 01       	movw	r30, r28
    586a:	21 91       	ld	r18, Z+
    586c:	31 91       	ld	r19, Z+
    586e:	e2 0f       	add	r30, r18
    5870:	f3 1f       	adc	r31, r19
    5872:	ea 17       	cp	r30, r26
    5874:	fb 07       	cpc	r31, r27
    5876:	71 f4       	brne	.+28     	; 0x5894 <free+0x5c>
	        base = 16 | XTOA_UPPER;
	      ultoa:
    5878:	8d 91       	ld	r24, X+
    587a:	9c 91       	ld	r25, X
    587c:	11 97       	sbiw	r26, 0x01	; 1
    587e:	28 0f       	add	r18, r24
    5880:	39 1f       	adc	r19, r25
    5882:	2e 5f       	subi	r18, 0xFE	; 254
    5884:	3f 4f       	sbci	r19, 0xFF	; 255
    5886:	39 83       	std	Y+1, r19	; 0x01
    5888:	28 83       	st	Y, r18
		c = __ultoa_invert ((flags & FL_LONG)
    588a:	fd 01       	movw	r30, r26
    588c:	82 81       	ldd	r24, Z+2	; 0x02
    588e:	93 81       	ldd	r25, Z+3	; 0x03
    5890:	9b 83       	std	Y+3, r25	; 0x03
    5892:	8a 83       	std	Y+2, r24	; 0x02
				    ? va_arg(ap, unsigned long)
				    : va_arg(ap, unsigned int),
    5894:	41 15       	cp	r20, r1
    5896:	51 05       	cpc	r21, r1
    5898:	59 f4       	brne	.+22     	; 0x58b0 <free+0x78>
				    (char *)buf, base)  -  (char *)buf;
		break;
    589a:	d0 93 a8 09 	sts	0x09A8, r29
    589e:	c0 93 a7 09 	sts	0x09A7, r28
    58a2:	1d c0       	rjmp	.+58     	; 0x58de <free+0xa6>
	        base = 8;
		goto ultoa;
	      case 'p':
	        flags |= FL_ALT;
		/* no break */
	      case 'x':
    58a4:	fd 01       	movw	r30, r26
    58a6:	82 81       	ldd	r24, Z+2	; 0x02
    58a8:	93 81       	ldd	r25, Z+3	; 0x03
    58aa:	ad 01       	movw	r20, r26
	      case 'o':
	        base = 8;
		goto ultoa;
	      case 'p':
	        flags |= FL_ALT;
		/* no break */
    58ac:	00 97       	sbiw	r24, 0x00	; 0
    58ae:	b1 f6       	brne	.-84     	; 0x585c <free+0x24>

	/* Integer number output.	*/
	if (flags & FL_NEGATIVE)
	    putc ('-', stream);
	if ((flags & FL_ALT) && (buf[c-1] != '0')) {
	    putc ('0', stream);
    58b0:	fa 01       	movw	r30, r20
    58b2:	d3 83       	std	Z+3, r29	; 0x03
    58b4:	c2 83       	std	Z+2, r28	; 0x02
	    if (flags & FL_ALTHEX)
#if  FL_ALTLWR != 'x' - 'X'
    58b6:	21 91       	ld	r18, Z+
    58b8:	31 91       	ld	r19, Z+
    58ba:	e2 0f       	add	r30, r18
    58bc:	f3 1f       	adc	r31, r19
    58be:	ec 17       	cp	r30, r28
    58c0:	fd 07       	cpc	r31, r29
    58c2:	69 f4       	brne	.+26     	; 0x58de <free+0xa6>
# error
#endif
    58c4:	88 81       	ld	r24, Y
    58c6:	99 81       	ldd	r25, Y+1	; 0x01
    58c8:	28 0f       	add	r18, r24
    58ca:	39 1f       	adc	r19, r25
    58cc:	2e 5f       	subi	r18, 0xFE	; 254
    58ce:	3f 4f       	sbci	r19, 0xFF	; 255
    58d0:	fa 01       	movw	r30, r20
    58d2:	31 83       	std	Z+1, r19	; 0x01
    58d4:	20 83       	st	Z, r18
		putc ('X' + (flags & FL_ALTLWR), stream);
    58d6:	8a 81       	ldd	r24, Y+2	; 0x02
    58d8:	9b 81       	ldd	r25, Y+3	; 0x03
    58da:	93 83       	std	Z+3, r25	; 0x03
    58dc:	82 83       	std	Z+2, r24	; 0x02
    58de:	df 91       	pop	r29
    58e0:	cf 91       	pop	r28
    58e2:	08 95       	ret

000058e4 <memset>:
    58e4:	dc 01       	movw	r26, r24
    58e6:	01 c0       	rjmp	.+2      	; 0x58ea <memset+0x6>
    58e8:	6d 93       	st	X+, r22
    58ea:	41 50       	subi	r20, 0x01	; 1
    58ec:	50 40       	sbci	r21, 0x00	; 0
    58ee:	e0 f7       	brcc	.-8      	; 0x58e8 <memset+0x4>
    58f0:	08 95       	ret

000058f2 <__mulsi3>:
    58f2:	62 9f       	mul	r22, r18
    58f4:	d0 01       	movw	r26, r0
    58f6:	73 9f       	mul	r23, r19
    58f8:	f0 01       	movw	r30, r0
    58fa:	82 9f       	mul	r24, r18
    58fc:	e0 0d       	add	r30, r0
    58fe:	f1 1d       	adc	r31, r1
    5900:	64 9f       	mul	r22, r20
    5902:	e0 0d       	add	r30, r0
    5904:	f1 1d       	adc	r31, r1
    5906:	92 9f       	mul	r25, r18
    5908:	f0 0d       	add	r31, r0
    590a:	83 9f       	mul	r24, r19
    590c:	f0 0d       	add	r31, r0
    590e:	74 9f       	mul	r23, r20
    5910:	f0 0d       	add	r31, r0
    5912:	65 9f       	mul	r22, r21
    5914:	f0 0d       	add	r31, r0
    5916:	99 27       	eor	r25, r25
    5918:	72 9f       	mul	r23, r18
    591a:	b0 0d       	add	r27, r0
    591c:	e1 1d       	adc	r30, r1
    591e:	f9 1f       	adc	r31, r25
    5920:	63 9f       	mul	r22, r19
    5922:	b0 0d       	add	r27, r0
    5924:	e1 1d       	adc	r30, r1
    5926:	f9 1f       	adc	r31, r25
    5928:	bd 01       	movw	r22, r26
    592a:	cf 01       	movw	r24, r30
    592c:	11 24       	eor	r1, r1
    592e:	08 95       	ret

00005930 <__udivmodhi4>:
    5930:	aa 1b       	sub	r26, r26
    5932:	bb 1b       	sub	r27, r27
    5934:	51 e1       	ldi	r21, 0x11	; 17
    5936:	07 c0       	rjmp	.+14     	; 0x5946 <__udivmodhi4_ep>

00005938 <__udivmodhi4_loop>:
    5938:	aa 1f       	adc	r26, r26
    593a:	bb 1f       	adc	r27, r27
    593c:	a6 17       	cp	r26, r22
    593e:	b7 07       	cpc	r27, r23
    5940:	10 f0       	brcs	.+4      	; 0x5946 <__udivmodhi4_ep>
    5942:	a6 1b       	sub	r26, r22
    5944:	b7 0b       	sbc	r27, r23

00005946 <__udivmodhi4_ep>:
    5946:	88 1f       	adc	r24, r24
    5948:	99 1f       	adc	r25, r25
    594a:	5a 95       	dec	r21
    594c:	a9 f7       	brne	.-22     	; 0x5938 <__udivmodhi4_loop>
    594e:	80 95       	com	r24
    5950:	90 95       	com	r25
    5952:	bc 01       	movw	r22, r24
    5954:	cd 01       	movw	r24, r26
    5956:	08 95       	ret

00005958 <__udivmodsi4>:
    5958:	a1 e2       	ldi	r26, 0x21	; 33
    595a:	1a 2e       	mov	r1, r26
    595c:	aa 1b       	sub	r26, r26
    595e:	bb 1b       	sub	r27, r27
    5960:	fd 01       	movw	r30, r26
    5962:	0d c0       	rjmp	.+26     	; 0x597e <__udivmodsi4_ep>

00005964 <__udivmodsi4_loop>:
    5964:	aa 1f       	adc	r26, r26
    5966:	bb 1f       	adc	r27, r27
    5968:	ee 1f       	adc	r30, r30
    596a:	ff 1f       	adc	r31, r31
    596c:	a2 17       	cp	r26, r18
    596e:	b3 07       	cpc	r27, r19
    5970:	e4 07       	cpc	r30, r20
    5972:	f5 07       	cpc	r31, r21
    5974:	20 f0       	brcs	.+8      	; 0x597e <__udivmodsi4_ep>
    5976:	a2 1b       	sub	r26, r18
    5978:	b3 0b       	sbc	r27, r19
    597a:	e4 0b       	sbc	r30, r20
    597c:	f5 0b       	sbc	r31, r21

0000597e <__udivmodsi4_ep>:
    597e:	66 1f       	adc	r22, r22
    5980:	77 1f       	adc	r23, r23
    5982:	88 1f       	adc	r24, r24
    5984:	99 1f       	adc	r25, r25
    5986:	1a 94       	dec	r1
    5988:	69 f7       	brne	.-38     	; 0x5964 <__udivmodsi4_loop>
    598a:	60 95       	com	r22
    598c:	70 95       	com	r23
    598e:	80 95       	com	r24
    5990:	90 95       	com	r25
    5992:	9b 01       	movw	r18, r22
    5994:	ac 01       	movw	r20, r24
    5996:	bd 01       	movw	r22, r26
    5998:	cf 01       	movw	r24, r30
    599a:	08 95       	ret

0000599c <__prologue_saves__>:
    599c:	2f 92       	push	r2
    599e:	3f 92       	push	r3
    59a0:	4f 92       	push	r4
    59a2:	5f 92       	push	r5
    59a4:	6f 92       	push	r6
    59a6:	7f 92       	push	r7
    59a8:	8f 92       	push	r8
    59aa:	9f 92       	push	r9
    59ac:	af 92       	push	r10
    59ae:	bf 92       	push	r11
    59b0:	cf 92       	push	r12
    59b2:	df 92       	push	r13
    59b4:	ef 92       	push	r14
    59b6:	ff 92       	push	r15
    59b8:	0f 93       	push	r16
    59ba:	1f 93       	push	r17
    59bc:	cf 93       	push	r28
    59be:	df 93       	push	r29
    59c0:	cd b7       	in	r28, 0x3d	; 61
    59c2:	de b7       	in	r29, 0x3e	; 62
    59c4:	ca 1b       	sub	r28, r26
    59c6:	db 0b       	sbc	r29, r27
    59c8:	0f b6       	in	r0, 0x3f	; 63
    59ca:	f8 94       	cli
    59cc:	de bf       	out	0x3e, r29	; 62
    59ce:	0f be       	out	0x3f, r0	; 63
    59d0:	cd bf       	out	0x3d, r28	; 61
    59d2:	09 94       	ijmp

000059d4 <__epilogue_restores__>:
    59d4:	2a 88       	ldd	r2, Y+18	; 0x12
    59d6:	39 88       	ldd	r3, Y+17	; 0x11
    59d8:	48 88       	ldd	r4, Y+16	; 0x10
    59da:	5f 84       	ldd	r5, Y+15	; 0x0f
    59dc:	6e 84       	ldd	r6, Y+14	; 0x0e
    59de:	7d 84       	ldd	r7, Y+13	; 0x0d
    59e0:	8c 84       	ldd	r8, Y+12	; 0x0c
    59e2:	9b 84       	ldd	r9, Y+11	; 0x0b
    59e4:	aa 84       	ldd	r10, Y+10	; 0x0a
    59e6:	b9 84       	ldd	r11, Y+9	; 0x09
    59e8:	c8 84       	ldd	r12, Y+8	; 0x08
    59ea:	df 80       	ldd	r13, Y+7	; 0x07
    59ec:	ee 80       	ldd	r14, Y+6	; 0x06
    59ee:	fd 80       	ldd	r15, Y+5	; 0x05
    59f0:	0c 81       	ldd	r16, Y+4	; 0x04
    59f2:	1b 81       	ldd	r17, Y+3	; 0x03
    59f4:	aa 81       	ldd	r26, Y+2	; 0x02
    59f6:	b9 81       	ldd	r27, Y+1	; 0x01
    59f8:	ce 0f       	add	r28, r30
    59fa:	d1 1d       	adc	r29, r1
    59fc:	0f b6       	in	r0, 0x3f	; 63
    59fe:	f8 94       	cli
    5a00:	de bf       	out	0x3e, r29	; 62
    5a02:	0f be       	out	0x3f, r0	; 63
    5a04:	cd bf       	out	0x3d, r28	; 61
    5a06:	ed 01       	movw	r28, r26
    5a08:	08 95       	ret

00005a0a <__eeprom_read_byte_1C1D1E>:
    5a0a:	e1 99       	sbic	0x1c, 1	; 28
    5a0c:	fe cf       	rjmp	.-4      	; 0x5a0a <__eeprom_read_byte_1C1D1E>
    5a0e:	bf bb       	out	0x1f, r27	; 31
    5a10:	ae bb       	out	0x1e, r26	; 30
    5a12:	e0 9a       	sbi	0x1c, 0	; 28
    5a14:	11 96       	adiw	r26, 0x01	; 1
    5a16:	0d b2       	in	r0, 0x1d	; 29
    5a18:	08 95       	ret

00005a1a <_exit>:
    5a1a:	ff cf       	rjmp	.-2      	; 0x5a1a <_exit>
